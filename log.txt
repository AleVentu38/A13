diff --git a/T1-G11/applicazione/manvsclass/pom.xml b/T1-G11/applicazione/manvsclass/pom.xml
index 495729f..1c5fdda 100644
--- a/T1-G11/applicazione/manvsclass/pom.xml
+++ b/T1-G11/applicazione/manvsclass/pom.xml
@@ -17,6 +17,9 @@
 	    <maven.compiler.target>1.8</maven.compiler.target>
     	<maven.compiler.source>1.8</maven.compiler.source>
 		<java.version>1.8</java.version>
+
+		<!--MODIFICA (11/02/2024): Controlli form registrazione-->
+        <!-- springsecurity.version>5.1.1.RELEASE</springsecurity.version -->
 	</properties>
 	<dependencies>
     	<dependency>
@@ -48,6 +51,37 @@
             <artifactId>commons-io</artifactId>
             <version>2.11.0</version>
         </dependency>
+
+		<!--MODIFICA (11/02/2024): Gestione sessione tramite JWT-->
+		<dependency>
+            <groupId>io.jsonwebtoken</groupId>
+            <artifactId>jjwt</artifactId>
+            <version>0.9.1</version>
+        </dependency>
+
+		<!--MODIFICA (11/02/2024): Controlli sul form registrazione-->
+		<dependency>
+			<groupId>org.springframework.security</groupId>
+			<artifactId>spring-security-core</artifactId>
+			<version>6.1.0</version>
+		</dependency>
+
+		<!--MODIFICA (12/02/2024) : Gestione Autenticazione-->
+
+		<dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <version>1.18.30</version>
+            <scope>provided</scope>
+        </dependency>
+
+		<!--MODIFICA (15/02/2024) : Servizio mail-->
+		<dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-mail</artifactId>
+        </dependency>
+		
+		<!--FINE MODIFICA-->
         <dependency>
             <groupId>org.apache.httpcomponents</groupId>
             <artifactId>httpclient</artifactId>
diff --git a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/ManvsclassApplication.java b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/ManvsclassApplication.java
index d6dda5e..609645a 100644
--- a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/ManvsclassApplication.java
+++ b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/ManvsclassApplication.java
@@ -3,6 +3,11 @@ package com.groom.manvsclass;
 import org.springframework.boot.SpringApplication;
 import org.springframework.boot.autoconfigure.SpringBootApplication;
 
+//MODIFICA (13/02/2024) : Autenticazione token provenienti players
+// import org.springframework.context.annotation.Bean;
+// import org.springframework.web.client.RestTemplate;
+//FINE MODIFICA
+
 @SpringBootApplication
 public class ManvsclassApplication {
 
@@ -10,4 +15,11 @@ public class ManvsclassApplication {
 		SpringApplication.run(ManvsclassApplication.class, args);
 	}
 
+	// //MODIFICA (13/02/2024) : Autenticazione token provenienti players
+	// @Bean
+    // public RestTemplate restTemplate() {
+    //     return new RestTemplate();
+    // }
+	//FINE MODIFICA (13/02/2024)
+
 }
diff --git a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/controller/HomeController.java b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/controller/HomeController.java
index 09c11c2..46c8ba7 100644
--- a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/controller/HomeController.java
+++ b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/controller/HomeController.java
@@ -3,10 +3,19 @@ package com.groom.manvsclass.controller;
 
 import java.io.IOException;
 import java.io.File;
+import java.time.Instant;
 import java.time.LocalDate;
 import java.time.format.DateTimeFormatter;
+import java.time.temporal.ChronoUnit;
+import java.util.Date;
 import java.util.List;
 import java.util.Random;
+import java.util.regex.Pattern;
+
+import javax.servlet.http.Cookie;
+import javax.servlet.http.HttpServletRequest;
+import javax.servlet.http.HttpServletResponse;
+
 import org.springframework.data.mongodb.core.query.Query;
 import org.springframework.beans.factory.annotation.Autowired;
 import org.springframework.data.mongodb.core.MongoTemplate;
@@ -15,7 +24,10 @@ import org.springframework.data.mongodb.core.query.Update;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
 import org.springframework.stereotype.Controller;
+import org.springframework.util.LinkedMultiValueMap;
+import org.springframework.util.MultiValueMap;
 import org.springframework.util.StringUtils;
+import org.springframework.web.bind.annotation.CookieValue;
 import org.springframework.web.bind.annotation.CrossOrigin;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.PathVariable;
@@ -25,6 +37,8 @@ import org.springframework.web.bind.annotation.RequestParam;
 import org.springframework.web.bind.annotation.ResponseBody;
 import org.springframework.web.bind.annotation.RestController;
 import org.springframework.web.multipart.MultipartFile;
+import org.springframework.web.servlet.ModelAndView;
+import org.springframework.web.servlet.view.RedirectView;
 
 import com.groom.manvsclass.model.filesystem.upload.FileUploadResponse;
 import com.groom.manvsclass.model.filesystem.upload.FileUploadUtil;
@@ -40,9 +54,31 @@ import com.groom.manvsclass.model.repository.InteractionRepository;
 import com.groom.manvsclass.model.repository.OperationRepository;
 import com.groom.manvsclass.model.repository.SearchRepositoryImpl;
 
-
 import com.fasterxml.jackson.databind.ObjectMapper;
 
+import io.jsonwebtoken.Claims;
+
+//MODIFICA(11/02/2024): Gestione sessione tramite JWT
+import io.jsonwebtoken.Jwt;
+import io.jsonwebtoken.JwtException;
+import io.jsonwebtoken.Jwts;
+import io.jsonwebtoken.SignatureAlgorithm;
+
+//MODIFICA (11/02/2024) : Controlli sul form registrazione
+import java.util.regex.Matcher;
+import java.util.regex.Pattern;
+
+//MODIFICA (12/02/2024) : Gestione autenticazione
+import com.groom.manvsclass.controller.Authentication.AuthenticatedAdmin;
+import com.groom.manvsclass.controller.Authentication.AuthenticatedAdminRepository;
+
+//MODIFICA (13/02/2024) : Autenticazione token proveniente dai players
+// import org.springframework.web.client.RestTemplate;
+ //MODIFICA (15/02/2024) : Servizio di posta elettronica
+ import javax.mail.MessagingException;
+
+//FINE MODIFICA
+
 @CrossOrigin
 @Controller
 public class HomeController {
@@ -58,75 +94,145 @@ public class HomeController {
 	
 	@Autowired
     private MongoTemplate mongoTemplate; 
-	private final Admin userAdmin= new Admin("default","default","default","default");
+	// private final Admin userAdmin= new Admin("default","default","default","default");
+	private final Admin userAdmin= new Admin("default","default","default","default","default");
 	private final LocalDate today = LocalDate.now();
 	private final SearchRepositoryImpl srepo;
+
+	//MODIFICA (11/02/2024) : Controlli sul form registrazione
+	@Autowired
+    private PasswordEncoderAdmin myPasswordEncoder;
+
+	//MODIFICA (12/02/2024) : Gestione autenticazione
+	@Autowired
+    private AuthenticatedAdminRepository authenticatedAdminRepository;
+
+	//MODIFICA (13/02/2024) : Autenticazione token proveniente players
+	// private RestTemplate restTemplate;
+
+	//MODIFICA (15/02/2024) : Servizio di posta elettronica
+	@Autowired
+    private EmailService emailService;
+
+	//MODIFICA (11/02/2024) : Regex, La psw deve contenere da 8 a 16 caratteri, di cui almeno un carattere minuscolo,
+    //                                 maiuscolo, un numero ed un carattere speciale
+	                               
+    String regex = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,16}$"; // maiuscola, minuscola, numero e chr. speciale
+    Pattern p = Pattern.compile(regex);
 	
-	public HomeController(SearchRepositoryImpl srepo)
-	{
-		this.userAdmin.setUsername("default");
-		this.srepo=srepo;
+	//FINE MODIFICA
+
+	//MODIFICA (13/02/2024) : Autenticazione token proveniente players
+	public HomeController(SearchRepositoryImpl srepo) {
+	this.userAdmin.setUsername("default");
+	this.srepo=srepo;
 	}
 
+	// public HomeController(SearchRepositoryImpl srepo, RestTemplate restTemplate) {
+	// 	this.userAdmin.setUsername("default");
+	// 	this.srepo=srepo;
+	// 	this.restTemplate = restTemplate;
+	// }
+
 	@GetMapping("/home_adm")
-	public String showHomeAdmin() {
-		return "home_adm";
+	public ModelAndView showHomeAdmin(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+		if(isJwtValid(jwt)) return new ModelAndView("home_adm"); 
+		return new ModelAndView("redirect:/loginAdmin"); 
 	}
 	
-	@GetMapping("/loginAdmin")
-	public String showLoginAdmin() {
-		return "login_admin";
-	}
+	// @GetMapping("/loginAdmin")
+	// public String showLoginAdmin() {
+	// 	return "login_admin";
+	// }
 
 	@GetMapping("/registraAdmin")
 	public String showRegistraAdmin() {
 		return "registraAdmin";
 	}
 
+	// @GetMapping("/modificaClasse")
+	// public String showModificaClasse() {
+	// 	return "modificaClasse";
+	// }
+
+	//MODIFICA (11/02/2024) : Gestione sessione tramite JWT
 	@GetMapping("/modificaClasse")
-	public String showModificaClasse() {
-		return "modificaClasse";
+	public ModelAndView showModificaClasse(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+		//Se il token è valido, allora l'admin ha la possibilità di modificare le classi...
+		if(isJwtValid(jwt)) return new ModelAndView("modificaClasse");
+		//altrimenti verrà indirizzato alla pagina di login
+		return new ModelAndView("redirect:/loginAdmin"); 
 	}
-	
+
 	@GetMapping("/uploadClasse")
-	public String showUploadClasse() {
-		return "uploadClasse";
+	public ModelAndView showUploadClasse(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+		//Se il token è valido, allora l'admin ha la possibilità di caricare le classi...
+		if(isJwtValid(jwt)) return new ModelAndView("uploadClasse");
+		//altrimenti verrà indirizzato alla pagina di login
+		return new ModelAndView("redirect:/loginAdmin"); 
 	}
 
 	@GetMapping("/uploadClasseAndTest")
-	public String showUploadClasseAndTest() {
-		return "uploadClasseAndTest";
+	public ModelAndView showUploadClasseAndTest(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+		//Se il token è valido, allora l'admin ha la possibilità di caricare le classi ed i test...
+		if(isJwtValid(jwt)) return new ModelAndView("uploadClasseAndTest");
+		//altrimenti verrà indirizzato alla pagina di login
+		return new ModelAndView("redirect:/loginAdmin"); 
 	}
 
 	@GetMapping("/reportClasse")
-	public String showReportClasse() {
-		return "reportClasse";
+	public ModelAndView showReportClasse(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+		//Se il token è valido, allora l'admin ha la possibilità di visualizzare i report associati alle classi...
+		if(isJwtValid(jwt)) return new ModelAndView("reportClasse");
+		//altrimenti verrà indirizzato alla pagina di login
+		return new ModelAndView("redirect:/loginAdmin"); 
 	}
 
 	@GetMapping("/Reports")
-	public String showReports() {
-		return "Reports";
+	public ModelAndView showReports(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+		//Se il token è valido, allora l'admin ha la possibilità di visualizzare i report...
+		if(isJwtValid(jwt)) return new ModelAndView("Reports");
+		//altrimenti verrà indirizzato alla pagina di login
+		return new ModelAndView("redirect:/loginAdmin"); 
 	}
+	//FINE MODIFICA
+	
+	// @GetMapping("/uploadClasse")
+	// public String showUploadClasse() {
+	// 	return "uploadClasse";
+	// }
+
+	// @GetMapping("/uploadClasseAndTest")
+	// public String showUploadClasseAndTest() {
+	// 	return "uploadClasseAndTest";
+	// }
+
+	// @GetMapping("/reportClasse")
+	// public String showReportClasse() {
+	// 	return "reportClasse";
+	// }
+
+	// @GetMapping("/Reports")
+	// public String showReports() {
+	// 	return "Reports";
+	// }
 
 	@GetMapping("/interaction")
 	@ResponseBody
-	public	List<interaction>	elencaInt()
-	{
+	public	List<interaction>	elencaInt() {
 		return repo_int.findAll();
 	}
 	
 	@GetMapping("/findreport")
 	@ResponseBody
-	public	List<interaction> elencaReport()
-	{
+	public	List<interaction> elencaReport() {
 		return srepo.findReport();
 	}
 	
 	//Solo x testing
 	@GetMapping("/getLikes/{name}")
 	@ResponseBody
-	public long likes(@PathVariable String name)
-	{
+	public long likes(@PathVariable String name) {
 		long likes=srepo.getLikes(name);
 		
 		return likes;
@@ -134,8 +240,7 @@ public class HomeController {
 	
 	@PostMapping("/newinteraction")
 	@ResponseBody
-	public interaction UploadInteraction(@RequestBody interaction interazione)
-	{
+	public interaction UploadInteraction(@RequestBody interaction interazione) {
 		return repo_int.save(interazione);
 	}
 
@@ -211,68 +316,217 @@ public class HomeController {
 	}
 	
 	
+	// @GetMapping("/home")
+	// @ResponseBody
+	// public	List<ClassUT>	elencaClassi() {
+	// 	return repo.findAll();
+	// }
+
+	//MODIFICA (11/02/2024) : Gestione flusso JWT
+
 	@GetMapping("/home")
 	@ResponseBody
-	public	List<ClassUT>	elencaClassi()
-	{
-		return repo.findAll();
+	public ResponseEntity<List<ClassUT>> elencaClassi(@CookieValue(name = "jwt", required = false) String jwt) {
+		// if (isJwtValid(jwt)) {
+		//MODIFICA (13/02/2024) : Controllo validità token proveniente dai players
+		// MultiValueMap<String, String> formData = new LinkedMultiValueMap<String, String>();
+		// formData.add("jwt", jwt);
+
+		// Boolean isAuthenticated = restTemplate.postForObject("http://t23-g1-app-1:8080/validateToken", formData, Boolean.class);
+		// System.out.println("isAuthenticated (home):"+ isAuthenticated);
+
+		// if(isAuthenticated == null || !isAuthenticated) {
+		// 	return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(null); // Ritorna 401 Unauthorized
+		// }
+		//FINE MODIFICA (13/02/2024)
+		
+		//FUNZIONANTE
+		System.out.println("Token valido, il player può visualizzare tutte le classi");
+		List<ClassUT> classi = repo.findAll();
+		return ResponseEntity.ok().body(classi);
+		//FUNZIONANTE
+
+		// } else {
+		// 	return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(null); // Ritorna 401 Unauthorized
+		// }
 	}
-	
+
 	@GetMapping("/orderbydate")
 	@ResponseBody
-	public List<ClassUT> ordinaClassi()
-	{
-		return srepo.orderByDate();
+	public ResponseEntity<List<ClassUT>> ordinaClassi(@CookieValue(name = "jwt", required = false) String jwt) {
+
+		if (isJwtValid(jwt)) {
+
+			System.out.println("Token valido, può ordinare tutte le classi per data (orderbydate)");
+			List<ClassUT> classiOrdinate = srepo.orderByDate();
+        	return ResponseEntity.ok().body(classiOrdinate);
+			
+		} else {
+			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(null); // Ritorna 401 Unauthorized
+		}
 	}
 
 	@GetMapping("/orderbyname")
 	@ResponseBody
-	public List<ClassUT> ordinaClassiNomi()
-	{
-		return srepo.orderByName();
+	public ResponseEntity<List<ClassUT>> ordinaClassiNomi(@CookieValue(name = "jwt", required = false) String jwt) {
+
+		if (isJwtValid(jwt)) {
+
+			System.out.println("Token valido, può ordinare tutte le classi per nome (orderbyname)");
+			List<ClassUT> classiOrdinateNome = srepo.orderByName();
+        	return ResponseEntity.ok().body(classiOrdinateNome);
+			
+		} else {
+			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(null); // Ritorna 401 Unauthorized
+		}
 	}
 	
 	@GetMapping("/Cfilterby/{category}")
 	@ResponseBody
-	public List<ClassUT> filtraClassi(@PathVariable String category)
-	{
-		return srepo.filterByCategory(category);
+	public ResponseEntity<List<ClassUT>> filtraClassi(@PathVariable String category,
+													  @CookieValue(name = "jwt", required = false) String jwt) {
+		if (isJwtValid(jwt)) {
+
+			System.out.println("Token valido, può filtrare le classi per categoria (Cfilterby/{category})");
+			List<ClassUT> classiFiltrate = srepo.filterByCategory(category);
+			return ResponseEntity.ok().body(classiFiltrate);
+		} else {
+			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(null); // Ritorna 401 Unauthorized
+		}
 	}
+
 	
 	@GetMapping("/Cfilterby/{text}/{category}")
 	@ResponseBody
-	public	List<ClassUT>	filtraClassi(@PathVariable String text,@PathVariable String category)
-	{
-		return srepo.searchAndFilter(text,category);
+	public	ResponseEntity<List<ClassUT>> filtraClassi(@PathVariable String text,
+													   @PathVariable String category,
+													   @CookieValue(name = "jwt", required = false) String jwt) {
+
+		if (isJwtValid(jwt)) {
+
+			System.out.println("Token valido, può ricercare e filtrare le classi per categoria (/Cfilterby/{text}/{category})");
+			List<ClassUT> classiFiltrate = srepo.searchAndFilter(text,category);
+			return ResponseEntity.ok().body(classiFiltrate);
+		} else {
+			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(null); // Ritorna 401 Unauthorized
+		}
 	}
 	
 	@GetMapping("/Dfilterby/{difficulty}")
 	@ResponseBody
-	public List<ClassUT> elencaClassiD(@PathVariable String difficulty)
-	{
-		return srepo. filterByDifficulty(difficulty);
+	public ResponseEntity<List<ClassUT>> elencaClassiD(@PathVariable String difficulty,
+													   @CookieValue(name = "jwt", required = false) String jwt) {
+
+		if (isJwtValid(jwt)) {
+
+			System.out.println("Token valido, può filtrare le classi per difficoltà (/Dfilterby/{difficulty}");
+			List<ClassUT> classiFiltrate = srepo. filterByDifficulty(difficulty);
+			return ResponseEntity.ok().body(classiFiltrate);
+		} else {
+			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(null); // Ritorna 401 Unauthorized
+		}
 	}
 	
 	@GetMapping("/Dfilterby/{text}/{difficulty}")
 	@ResponseBody
-	public	List<ClassUT>	elencaClassiD(@PathVariable String text,@PathVariable String difficulty)
-	{
-		return srepo.searchAndDFilter(text,difficulty);
+	public	ResponseEntity<List<ClassUT>>	elencaClassiD(@PathVariable String text,
+														  @PathVariable String difficulty,
+														  @CookieValue(name = "jwt", required = false) String jwt) {
+
+		if (isJwtValid(jwt)) {
+
+			System.out.println("Token valido, può ricercare e  filtrare le classi per difficoltà (/Dfilterby/{text}/{difficulty}");
+			List<ClassUT> classiFiltrate = srepo.searchAndDFilter(text,difficulty);
+			return ResponseEntity.ok().body(classiFiltrate);
+		} else {
+			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(null); // Ritorna 401 Unauthorized
+		}
 	}
 	
-
 	@PostMapping("/insert")
 	@ResponseBody
-	public ClassUT UploadClasse(@RequestBody ClassUT classe)
-	{
-		LocalDate currentDate = LocalDate.now();
-	    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
-        String data = currentDate.format(formatter);
-        Operation operation1= new Operation((int)orepo.count(),userAdmin.getUsername(),classe.getName(),0,data);
-        orepo.save(operation1);
-		return repo.save(classe);
+	public ResponseEntity<ClassUT> uploadClasse(@RequestBody ClassUT classe,
+											    @CookieValue(name = "jwt", required = false) String jwt) {
+		if (isJwtValid(jwt)) {
+
+			System.out.println("Token valido, può inserire una nuova classe (/insert)");
+			LocalDate currentDate = LocalDate.now();
+			DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
+			String data = currentDate.format(formatter);
+			Operation operation1 = new Operation((int)orepo.count(), userAdmin.getUsername(), classe.getName(), 0, data);
+			orepo.save(operation1);
+			ClassUT savedClasse = repo.save(classe);
+
+			System.out.println("Inserimento classe avvenuto con successo (/insert)");
+			return ResponseEntity.ok().body(savedClasse);
+		} else {
+			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(null); // Ritorna 401 Unauthorized
+		}
 	}
 
+
+	// @PostMapping("/insert")
+	// @ResponseBody
+	// public ClassUT UploadClasse(@RequestBody ClassUT classe) {
+	// 	LocalDate currentDate = LocalDate.now();
+	//     DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
+    //     String data = currentDate.format(formatter);
+    //     Operation operation1= new Operation((int)orepo.count(),userAdmin.getUsername(),classe.getName(),0,data);
+    //     orepo.save(operation1);
+	// 	return repo.save(classe);
+	// }
+
+
+	//FINE MODIFICA
+	
+	// @GetMapping("/orderbydate")
+	// @ResponseBody
+	// public List<ClassUT> ordinaClassi() {
+	// 	return srepo.orderByDate();
+	// }
+
+	// @GetMapping("/orderbyname")
+	// @ResponseBody
+	// public List<ClassUT> ordinaClassiNomi() {
+	// 	return srepo.orderByName();
+	// }
+	
+	// @GetMapping("/Cfilterby/{category}")
+	// @ResponseBody
+	// public List<ClassUT> filtraClassi(@PathVariable String category) {
+	// 	return srepo.filterByCategory(category);
+	// }
+	
+	// @GetMapping("/Cfilterby/{text}/{category}")
+	// @ResponseBody
+	// public	List<ClassUT>	filtraClassi(@PathVariable String text,@PathVariable String category) {
+	// 	return srepo.searchAndFilter(text,category);
+	// }
+	
+	// @GetMapping("/Dfilterby/{difficulty}")
+	// @ResponseBody
+	// public List<ClassUT> elencaClassiD(@PathVariable String difficulty) {
+	// 	return srepo. filterByDifficulty(difficulty);
+	// }
+	
+	// @GetMapping("/Dfilterby/{text}/{difficulty}")
+	// @ResponseBody
+	// public	List<ClassUT>	elencaClassiD(@PathVariable String text,@PathVariable String difficulty) {
+	// 	return srepo.searchAndDFilter(text,difficulty);
+	// }
+	
+
+	// @PostMapping("/insert")
+	// @ResponseBody
+	// public ClassUT UploadClasse(@RequestBody ClassUT classe) {
+	// 	LocalDate currentDate = LocalDate.now();
+	//     DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
+    //     String data = currentDate.format(formatter);
+    //     Operation operation1= new Operation((int)orepo.count(),userAdmin.getUsername(),classe.getName(),0,data);
+    //     orepo.save(operation1);
+	// 	return repo.save(classe);
+	// }
+
 	/**
 	 * @param classFile     file inviato come parte della richiesta multipart
 	 *                      L'interfaccia MultipartFile fornisce i metodi per
@@ -283,45 +537,100 @@ public class HomeController {
 	 * 						immagazzina le infromazioni sulla classe
 	 * @throws IOException
 	 */
+
+	 //MODIFICA (20/02/2024) : Eliminazione della riga riguardante il caricamento dei relativi test generati dai Robot (ATTENZIONE)
 	@PostMapping("/uploadFile")
 	@ResponseBody
-	public ResponseEntity<FileUploadResponse> uploadFile(@RequestParam("file") MultipartFile classFile, @RequestParam("model") String model) throws IOException
-	{
-		//Legge i metadati della classe della parte "model" del body HTTP e li salva in un oggetto ClasseUT
-		ObjectMapper mapper = new ObjectMapper();
-		ClassUT classe = mapper.readValue(model, ClassUT.class);
+	//public ResponseEntity<FileUploadResponse> uploadFile(@RequestParam("file") MultipartFile classFile, @RequestParam("model") String model) throws IOException {
+	public ResponseEntity<FileUploadResponse> uploadFile(@RequestParam("file") MultipartFile classFile,
+														 @RequestParam("model") String model, @CookieValue(name = "jwt", required = false) String jwt, HttpServletRequest request) throws IOException {
+
+		//MODIFICA (11/02/2024) : Gestione flusso JWT
+		if (isJwtValid(jwt)) {
+
+			System.out.println("Token valido (uploadFile)");
+			//Legge i metadati della classe della parte "model" del body HTTP e li salva in un oggetto ClasseUT
+			ObjectMapper mapper = new ObjectMapper();
+			ClassUT classe = mapper.readValue(model, ClassUT.class);
+			
+			//Salva il nome del file caricato
+			String fileName = StringUtils.cleanPath(classFile.getOriginalFilename());
+			long size = classFile.getSize();
+			
+			//Salva la classe nel filesystem condiviso
+			FileUploadUtil.saveCLassFile(fileName, classe.getName(), classFile);
+			
+			//Genera e salva i test nel filesystem condiviso
+			RobotUtil.generateAndSaveRobots(fileName, classe.getName(), classFile);
+			
+			//Prepara la risposta per il front-end
+			FileUploadResponse response = new FileUploadResponse();
+			response.setFileName(fileName);
+			response.setSize(size);
+			response.setDownloadUri("/downloadFile");
+			
+			//Setta data di caricamento e percorso di download 
+			classe.setUri("Files-Upload/"+classe.getName()+"/"+fileName);
+			classe.setDate(today.toString());
+
+			//Creazione dell'oggetto riguardante l'operazione appena fatta
+			LocalDate currentDate = LocalDate.now();
+			DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
+			String data = currentDate.format(formatter);
+			Operation operation1= new Operation((int)orepo.count(),userAdmin.getUsername(),classe.getName(),0,data);
+
+			//Salva i dati sull'operazione fatta nel database
+			orepo.save(operation1);
+			//Salva i dati sulla classe nel database
+			repo.save(classe);
+			System.out.println("Operazione completata con successo (uploadFile)");
+			return new ResponseEntity<>(response,HttpStatus.OK);
+			
+		}else {
+
+			System.out.println("Token non valido (uploadFile)");
+			FileUploadResponse response = new FileUploadResponse();
+			response.setErrorMessage("Errore, il token non è valido");
+			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(response);
+
+		}
+		//FINE MODIFICA
+
+		// //Legge i metadati della classe della parte "model" del body HTTP e li salva in un oggetto ClasseUT
+		// ObjectMapper mapper = new ObjectMapper();
+		// ClassUT classe = mapper.readValue(model, ClassUT.class);
 		
-		//Salva il nome del file caricato
-		String fileName = StringUtils.cleanPath(classFile.getOriginalFilename());
-		long size = classFile.getSize();
+		// //Salva il nome del file caricato
+		// String fileName = StringUtils.cleanPath(classFile.getOriginalFilename());
+		// long size = classFile.getSize();
 		
-		//Salva la classe nel filesystem condiviso
-		FileUploadUtil.saveCLassFile(fileName, classe.getName(), classFile);
+		// //Salva la classe nel filesystem condiviso
+		// FileUploadUtil.saveCLassFile(fileName, classe.getName(), classFile);
 		
-		//Genera e salva i test nel filesystem condiviso
-		RobotUtil.generateAndSaveRobots(fileName, classe.getName(), classFile);
+		// //Genera e salva i test nel filesystem condiviso
+		// RobotUtil.generateAndSaveRobots(fileName, classe.getName(), classFile);
 		
-		//Prepara la risposta per il front-end
-		FileUploadResponse response = new FileUploadResponse();
-		response.setFileName(fileName);
-		response.setSize(size);
-		response.setDownloadUri("/downloadFile");
+		// //Prepara la risposta per il front-end
+		// FileUploadResponse response = new FileUploadResponse();
+		// response.setFileName(fileName);
+		// response.setSize(size);
+		// response.setDownloadUri("/downloadFile");
 		
-		//Setta data di caricamento e percorso di download 
-		classe.setUri("Files-Upload/"+classe.getName()+"/"+fileName);
-		classe.setDate(today.toString());
+		// //Setta data di caricamento e percorso di download 
+		// classe.setUri("Files-Upload/"+classe.getName()+"/"+fileName);
+		// classe.setDate(today.toString());
 
-		//Creazione dell'oggetto riguardante l'operazione appena fatta
-		LocalDate currentDate = LocalDate.now();
-	    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
-        String data = currentDate.format(formatter);
-        Operation operation1= new Operation((int)orepo.count(),userAdmin.getUsername(),classe.getName(),0,data);
+		// //Creazione dell'oggetto riguardante l'operazione appena fatta
+		// LocalDate currentDate = LocalDate.now();
+	    // DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
+        // String data = currentDate.format(formatter);
+        // Operation operation1= new Operation((int)orepo.count(),userAdmin.getUsername(),classe.getName(),0,data);
 
-		//Salva i dati sull'operazione fatta nel database
-        orepo.save(operation1);
-		//Salva i dati sullla classe nel database
-		repo.save(classe);
-		return new ResponseEntity<>(response,HttpStatus.OK);
+		// //Salva i dati sull'operazione fatta nel database
+        // orepo.save(operation1);
+		// //Salva i dati sullla classe nel database
+		// repo.save(classe);
+		// return new ResponseEntity<>(response,HttpStatus.OK);
 	}
 
 	/**
@@ -337,167 +646,934 @@ public class HomeController {
 	 */
 	@PostMapping("/uploadTest")
     @ResponseBody
-    public ResponseEntity<FileUploadResponse> uploadTest(@RequestParam("file") MultipartFile classFile, @RequestParam("model") String model, @RequestParam("test") MultipartFile testFile,
+	//public ResponseEntity<FileUploadResponse> uploadTest(@RequestParam("file") MultipartFile classFile, @RequestParam("model") String model, @RequestParam("test") MultipartFile testFile,
 	
-															@RequestParam("testEvo") MultipartFile testFileEvo) throws IOException {
+	//														@RequestParam("testEvo") MultipartFile testFileEvo) throws IOException {
         
-        //Legge i metadati della classe della parte "model" del body HTTP e li salva in un oggetto ClasseUT
-        ObjectMapper mapper = new ObjectMapper();
-        ClassUT classe = mapper.readValue(model, ClassUT.class);
+        // //Legge i metadati della classe della parte "model" del body HTTP e li salva in un oggetto ClasseUT
+        // ObjectMapper mapper = new ObjectMapper();
+        // ClassUT classe = mapper.readValue(model, ClassUT.class);
         
-        //Salva il nome del file della classe caricato
-        String fileNameClass = StringUtils.cleanPath(classFile.getOriginalFilename());
-        long size = classFile.getSize();
+        // //Salva il nome del file della classe caricato
+        // String fileNameClass = StringUtils.cleanPath(classFile.getOriginalFilename());
+        // long size = classFile.getSize();
         
-        //Salva la classe nel filesystem condiviso
-        FileUploadUtil.saveCLassFile(fileNameClass, classe.getName(), classFile);
+        // //Salva la classe nel filesystem condiviso
+        // FileUploadUtil.saveCLassFile(fileNameClass, classe.getName(), classFile);
         
-        //Salva i test nel filesystem condiviso
-        String fileNameTest = StringUtils.cleanPath(testFile.getOriginalFilename());
-		String fileNameTestEvo = StringUtils.cleanPath(testFileEvo.getOriginalFilename());
-        RobotUtil.saveRobots(fileNameClass, fileNameTest,fileNameTestEvo , classe.getName(), classFile ,testFile, testFileEvo);
-
-        FileUploadResponse response = new FileUploadResponse();
-        response.setFileName(fileNameClass);
-        response.setSize(size);
-        response.setDownloadUri("/downloadFile");
-
-        //Setta data di caricamento e percorso di download della classe
-        classe.setUri("Files-Upload/" + classe.getName() + "/" + fileNameClass);
-        classe.setDate(today.toString());
+        // //Salva i test nel filesystem condiviso
+        // String fileNameTest = StringUtils.cleanPath(testFile.getOriginalFilename());
+		// String fileNameTestEvo = StringUtils.cleanPath(testFileEvo.getOriginalFilename());
+        // RobotUtil.saveRobots(fileNameClass, fileNameTest,fileNameTestEvo , classe.getName(), classFile ,testFile, testFileEvo);
+
+        // FileUploadResponse response = new FileUploadResponse();
+        // response.setFileName(fileNameClass);
+        // response.setSize(size);
+        // response.setDownloadUri("/downloadFile");
+
+        // //Setta data di caricamento e percorso di download della classe
+        // classe.setUri("Files-Upload/" + classe.getName() + "/" + fileNameClass);
+        // classe.setDate(today.toString());
         
-        //Creazione dell'oggetto riguardante l'operazione appena fatta
-        LocalDate currentDate = LocalDate.now();
-        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
-        String data = currentDate.format(formatter);
-        Operation operation1 = new Operation((int) orepo.count(), userAdmin.getUsername(), classe.getName() + " con Robot", 0, data);
+        // //Creazione dell'oggetto riguardante l'operazione appena fatta
+        // LocalDate currentDate = LocalDate.now();
+        // DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
+        // String data = currentDate.format(formatter);
+        // Operation operation1 = new Operation((int) orepo.count(), userAdmin.getUsername(), classe.getName() + " con Robot", 0, data);
 
-        //Salva i dati sull'operazione fatta nel database
-        orepo.save(operation1);
-        //Salva i dati sulla classe nel database
-        repo.save(classe);
-        return new ResponseEntity<>(response, HttpStatus.OK);
-    }
+        // //Salva i dati sull'operazione fatta nel database
+        // orepo.save(operation1);
+        // //Salva i dati sulla classe nel database
+        // repo.save(classe);
+        // return new ResponseEntity<>(response, HttpStatus.OK);
+	//}
+
+	//MODIFICA (11/02/2024) : Gestione flusso JWT
+
+    public ResponseEntity<FileUploadResponse> uploadTest(@RequestParam("file") MultipartFile classFile, 
+														 @RequestParam("model") String model,
+														 @RequestParam("test") MultipartFile testFile,
+														 @RequestParam("testEvo") MultipartFile testFileEvo,
+														 @CookieValue(name = "jwt", required = false) String jwt, HttpServletRequest request) throws IOException {
+
+		//Controllo toke JWT
+		System.out.println(("Il token JWT è valido (uploadTest)?"));
+		if (isJwtValid(jwt)) {
+
+			System.out.println("Token valido (uploadTest)");
+			//Legge i metadati della classe della parte "model" del body HTTP e li salva in un oggetto ClasseUT
+			ObjectMapper mapper = new ObjectMapper();
+			ClassUT classe = mapper.readValue(model, ClassUT.class);
+			
+			//Salva il nome del file della classe caricato
+			String fileNameClass = StringUtils.cleanPath(classFile.getOriginalFilename());
+			long size = classFile.getSize();
+			
+			//Salva la classe nel filesystem condiviso
+			System.out.println("Salvataggio di "+fileNameClass+"nel filestystem condiviso");
+			FileUploadUtil.saveCLassFile(fileNameClass, classe.getName(), classFile);
+			
+			//Salva i test nel filesystem condiviso
+			String fileNameTest = StringUtils.cleanPath(testFile.getOriginalFilename());
+			String fileNameTestEvo = StringUtils.cleanPath(testFileEvo.getOriginalFilename());
+			RobotUtil.saveRobots(fileNameClass, fileNameTest,fileNameTestEvo , classe.getName(), classFile ,testFile, testFileEvo);
 	
-	@PostMapping("/delete/{name}")
-	@ResponseBody
-	public ClassUT eliminaClasse(@PathVariable String name) {
-		Query query= new Query(); 
-	   query.addCriteria(Criteria.where("name").is(name));
-	   this.eliminaFile(name);
-	   LocalDate currentDate = LocalDate.now();
-	    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
-       String data = currentDate.format(formatter);
-       Operation operation1= new Operation((int)orepo.count(),userAdmin.getUsername(),name,2,data);
-       orepo.save(operation1);
-	   return mongoTemplate.findAndRemove(query, ClassUT.class);
-	}
+			FileUploadResponse response = new FileUploadResponse();
+			response.setFileName(fileNameClass);
+			response.setSize(size);
+			response.setDownloadUri("/downloadFile");
+	
+			//Setta data di caricamento e percorso di download della classe
+			classe.setUri("Files-Upload/" + classe.getName() + "/" + fileNameClass);
+			classe.setDate(today.toString());
+			
+			//Creazione dell'oggetto riguardante l'operazione appena fatta
+			LocalDate currentDate = LocalDate.now();
+			DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
+			String data = currentDate.format(formatter);
+			Operation operation1 = new Operation((int) orepo.count(), userAdmin.getUsername(), classe.getName() + " con Robot", 0, data);
+	
+			//Salva i dati sull'operazione fatta nel database
+			orepo.save(operation1);
+			//Salva i dati sulla classe nel database
+			repo.save(classe);
+			System.out.println("Operazione completata con successo (uploadTest)");
+			return new ResponseEntity<>(response, HttpStatus.OK);
+
+		} else {
+
+			System.out.println("Token non valido (uploadTest)");
+			FileUploadResponse response = new FileUploadResponse();
+			response.setErrorMessage("Errore, il token non è valido");
+			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(response);
+
+		}
+		
+	 }
+
+	 @PostMapping("/delete/{name}")
+	 @ResponseBody
+	 public ResponseEntity<?> eliminaClasse(@PathVariable String name, 
+	 										@CookieValue(name = "jwt", required = false) String jwt) {
+		 if (isJwtValid(jwt)) {
+
+			System.out.println("Token valido, può rimuovere la classe selezionata (/delete/{name})");
+			 Query query = new Query(); 
+			 query.addCriteria(Criteria.where("name").is(name));
+			 this.eliminaFile(name, jwt);							//Aggiunta parametro jwt
+			 LocalDate currentDate = LocalDate.now();
+			 DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
+			 String data = currentDate.format(formatter);
+			 Operation operation1 = new Operation((int)orepo.count(), userAdmin.getUsername(), name, 2, data);
+			 orepo.save(operation1);
+			 ClassUT deletedClass = mongoTemplate.findAndRemove(query, ClassUT.class);
+			 if (deletedClass != null) {
+
+		         System.out.println("Rimozione avvenuta con successo (/delete/{name})");
+				 return ResponseEntity.ok().body(deletedClass);
+
+			 } else {
+				 return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Classe non trovata");
+			 }
+		 } else {
+			 return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Token JWT non valido");
+		 }
+	 }
+	 
+	
+	// @PostMapping("/delete/{name}")
+	// @ResponseBody
+	// public ClassUT eliminaClasse(@PathVariable String name) {
+	// 	Query query= new Query(); 
+	//    	query.addCriteria(Criteria.where("name").is(name));
+	//    	this.eliminaFile(name);
+	//    	LocalDate currentDate = LocalDate.now();
+	//     DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
+    //    	String data = currentDate.format(formatter);
+    //    	Operation operation1= new Operation((int)orepo.count(),userAdmin.getUsername(),name,2,data);
+    //    	orepo.save(operation1);
+	//    	return mongoTemplate.findAndRemove(query, ClassUT.class);
+	// }
 
 	@PostMapping("/deleteFile/{fileName}")
 	@ResponseBody
-	public ResponseEntity<String> eliminaFile(@PathVariable String fileName) {
-	  String folderPath = "Files-Upload/"+ fileName; 
-	  File directoryRandoop = new File("/VolumeT9/app/FolderTree/" + fileName);
-	File directoryEvo = new File("/VolumeT8/FolderTreeEvo/" +  fileName);
+	public ResponseEntity<String> eliminaFile(@PathVariable String fileName,
+											  @CookieValue(name = "jwt", required = false) String jwt) {
+		if (isJwtValid(jwt)) {
+
+			System.out.println("Token valido, può rimuovere il file selezionato (/deleteFile/{fileName})");
+			String folderPath = "Files-Upload/" + fileName; 
+			File directoryRandoop = new File("/VolumeT9/app/FolderTree/" + fileName);
+			File directoryEvo = new File("/VolumeT8/FolderTreeEvo/" + fileName);
+		
+			File folderToDelete = new File(folderPath);
+			if (folderToDelete.exists() && folderToDelete.isDirectory()) {
+				try {
+					FileUploadUtil.deleteDirectory(folderToDelete);
+					FileUploadUtil.deleteDirectory(directoryRandoop);
+					FileUploadUtil.deleteDirectory(directoryEvo);
+					return new ResponseEntity<>("Cartella eliminata con successo (/deleteFile/{fileName})", HttpStatus.OK);
+
+				} catch (IOException e) {
+					return new ResponseEntity<>("Impossibile eliminare la cartella.", HttpStatus.INTERNAL_SERVER_ERROR);
+				}
+			} else {
+				return new ResponseEntity<>("Cartella non trovata.", HttpStatus.NOT_FOUND);
+			}
+		} else {
+			return new ResponseEntity<>("Token JWT non valido.", HttpStatus.UNAUTHORIZED);
+		}
+	}
+
+	// @PostMapping("/deleteFile/{fileName}")
+	// @ResponseBody
+	// public ResponseEntity<String> eliminaFile(@PathVariable String fileName) {
+	// 	String folderPath = "Files-Upload/"+ fileName; 
+	//   	File directoryRandoop = new File("/VolumeT9/app/FolderTree/" + fileName);
+	// 	File directoryEvo = new File("/VolumeT8/FolderTreeEvo/" +  fileName);
 	  
-	        File folderToDelete = new File(folderPath);
-	        if (folderToDelete.exists() && folderToDelete.isDirectory()) {
-	        	try {
-	        		FileUploadUtil.deleteDirectory(folderToDelete);
-	        		FileUploadUtil.deleteDirectory(directoryRandoop);
-	        		FileUploadUtil.deleteDirectory(directoryEvo);
-	                return new ResponseEntity<>("Cartella eliminata con successo.", HttpStatus.OK);
-	            } catch (IOException e) {
-	                return new ResponseEntity<>("Impossibile eliminare la cartella.", HttpStatus.INTERNAL_SERVER_ERROR);
-	            }
-	        } else {
-	            return new ResponseEntity<>("Cartella non trovata.", HttpStatus.NOT_FOUND);
-	        }
-	 }
+	// 	File folderToDelete = new File(folderPath);
+	// 	if (folderToDelete.exists() && folderToDelete.isDirectory()) {
+	// 		try {
+	// 			FileUploadUtil.deleteDirectory(folderToDelete);
+	// 			FileUploadUtil.deleteDirectory(directoryRandoop);
+	// 			FileUploadUtil.deleteDirectory(directoryEvo);
+	// 			return new ResponseEntity<>("Cartella eliminata con successo.", HttpStatus.OK);
+	// 		} catch (IOException e) {
+	// 			return new ResponseEntity<>("Impossibile eliminare la cartella.", HttpStatus.INTERNAL_SERVER_ERROR);
+	// 		}
+	// 	} else {
+	// 		return new ResponseEntity<>("Cartella non trovata.", HttpStatus.NOT_FOUND);
+	// 	}
+	//  }
 	    
-	
+	// @GetMapping("/home/{text}")
+	// @ResponseBody
+	// public ResponseEntity<List<ClassUT>> ricercaClasse(@PathVariable String text,
+	// 												   @CookieValue(name = "jwt", required = false) String jwt) {
+	// 	if (isJwtValid(jwt)) {
+
+	// 		System.out.println("Token valido, può ricercare classi dalla /home (/home/{text})");
+	// 		List<ClassUT> classiTrovate = srepo.findByText(text);
+	// 		return ResponseEntity.ok().body(classiTrovate);
+	// 	} else {
+	// 		return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(null); // Ritorna 401 Unauthorized
+	// 	}
+	// }
+
+	// @GetMapping("/downloadFile/{name}")
+	// @ResponseBody
+	// public ResponseEntity<?> downloadClasse(@PathVariable("name") String name,
+	// 									    @CookieValue(name = "jwt", required = false) String jwt) throws Exception {
+	// 	if (isJwtValid(jwt)) {
+
+	// 		System.out.println("Token valido (/downloadFile/{name})");
+	// 		List<ClassUT> classe = srepo.findByText(name);
+	// 		if (!classe.isEmpty()) {
+
+	// 			System.out.println("Download classe prescelta (/downloadFile/{name})");
+	// 			return FileDownloadUtil.downloadClassFile(classe.get(0).getcode_Uri());
+	// 		} else {
+	// 			return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Classe non trovata");
+	// 		}
+	// 	} else {
+	// 		return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Token JWT non valido");
+	// 	}
+	// }
+
+	//FINE MODIFICA
 
 	
 	@GetMapping("/home/{text}")
 	@ResponseBody
-	public	List<ClassUT>	ricercaClasse(@PathVariable String text)
-	{
-		return srepo.findByText(text);
+	public	List<ClassUT>	ricercaClasse(@PathVariable String text) {
+	return srepo.findByText(text);
 	}
 	
 	@GetMapping("/downloadFile/{name}")
 	@ResponseBody
-	    public ResponseEntity<?> downloadClasse(@PathVariable("name") String name) throws Exception {
-		 	   List<ClassUT> classe= srepo.findByText(name);
-		 	   
-	           return FileDownloadUtil.downloadClassFile(classe.get(0).getcode_Uri());
-	    }
+	public ResponseEntity<?> downloadClasse(@PathVariable("name") String name) throws Exception {
+	 	List<ClassUT> classe= srepo.findByText(name);
+		System.out.println(classe.get(0).getcode_Uri());
+	 	return FileDownloadUtil.downloadClassFile(classe.get(0).getcode_Uri());
+	}
 	 
 
-@PostMapping("/update/{name}")
-@ResponseBody
-public ResponseEntity<String> modificaClasse(@PathVariable String name, @RequestBody ClassUT newContent) {
+	// @PostMapping("/update/{name}")
+	// @ResponseBody
+	// public ResponseEntity<String> modificaClasse(@PathVariable String name, @RequestBody ClassUT newContent) {
+	// 	Query query= new Query();
+		
+	// 	query.addCriteria(Criteria.where("name").is(name));
+	// 	Update update = new Update().set("name", newContent.getName())
+	// 			.set("date", newContent.getDate())
+	// 			.set("difficulty", newContent.getDifficulty())
+	// 			.set("description", newContent.getDescription())
+	// 			.set("category", newContent.getCategory());
+	// 	long modifiedCount = mongoTemplate.updateFirst(query, update, ClassUT.class).getModifiedCount();
+
+	// 	if (modifiedCount > 0) {
+	// 		LocalDate currentDate = LocalDate.now();
+	// 		DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
+	// 		String data = currentDate.format(formatter);
+	// 		Operation operation1= new Operation((int)orepo.count(),userAdmin.getUsername(),newContent.getName(),1,data);
+	// 		orepo.save(operation1);
+	// 		return new ResponseEntity<>("Aggiornamento eseguito correttamente.", HttpStatus.OK);
+	// 	} else {
+	// 		return new ResponseEntity<>("Nessuna classe trovata o nessuna modifica effettuata.", HttpStatus.NOT_FOUND);
+	// 	}
+	// }
+
+	//MODIFICA (11/02/2024) : Gestione flusso JWT
+
+	@PostMapping("/update/{name}")
+	@ResponseBody
+	public ResponseEntity<String> modificaClasse(@PathVariable String name,
+												 @RequestBody ClassUT newContent,
+												 @CookieValue(name = "jwt", required = false) String jwt, HttpServletRequest request) {
+		
+		//Controllo token
+		if (isJwtValid(jwt)) {
+
+			System.out.println("Token valido, può aggiornare informazioni inerenti le classi (update/{name})");
 			Query query= new Query();
-			
-		   query.addCriteria(Criteria.where("name").is(name));
-		    Update update = new Update().set("name", newContent.getName())
-	                .set("date", newContent.getDate())
-	                .set("difficulty", newContent.getDifficulty())
-	                .set("description", newContent.getDescription())
-	                .set("category", newContent.getCategory());
-		    long modifiedCount = mongoTemplate.updateFirst(query, update, ClassUT.class).getModifiedCount();
-
-	        if (modifiedCount > 0) {
-	        	LocalDate currentDate = LocalDate.now();
-	    	    DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
-	            String data = currentDate.format(formatter);
-	            Operation operation1= new Operation((int)orepo.count(),userAdmin.getUsername(),newContent.getName(),1,data);
-	            orepo.save(operation1);
-	            return new ResponseEntity<>("Aggiornamento eseguito correttamente.", HttpStatus.OK);
-	        } else {
-	            return new ResponseEntity<>("Nessuna classe trovata o nessuna modifica effettuata.", HttpStatus.NOT_FOUND);
-	        }
-	    }
-
-
-@PostMapping("/registraAdmin")
-@ResponseBody
-public Admin registraAdmin(@RequestBody Admin admin1)
-{
-	this.userAdmin.setUsername(admin1.getUsername());
-    this.userAdmin.setPassword(admin1.getPassword());
-	return arepo.save(admin1);
-}
+		
+			query.addCriteria(Criteria.where("name").is(name));
+			Update update = new Update().set("name", newContent.getName())
+					.set("date", newContent.getDate())
+					.set("difficulty", newContent.getDifficulty())
+					.set("description", newContent.getDescription())
+					.set("category", newContent.getCategory());
+			long modifiedCount = mongoTemplate.updateFirst(query, update, ClassUT.class).getModifiedCount();
 
-@PostMapping("/loginAdmin")
-@ResponseBody
-public String loginAdmin(@RequestBody Admin admin1) {
-    Admin admin = srepo.findAdminByUsername(admin1.getUsername());
-    if (admin.getPassword().equals(admin1.getPassword())) {   	
-        this.userAdmin.setUsername(admin.getUsername());
-        this.userAdmin.setPassword(admin.getPassword());
-        return "ok";
-    } else {
-    	return "utente non loggato";
-    }
-}
+			if (modifiedCount > 0) {
+				LocalDate currentDate = LocalDate.now();
+				DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
+				String data = currentDate.format(formatter);
+				Operation operation1= new Operation((int)orepo.count(),userAdmin.getUsername(),newContent.getName(),1,data);
+				orepo.save(operation1);
+				return new ResponseEntity<>("Aggiornamento eseguito correttamente.", HttpStatus.OK);
+			} else {
+				return new ResponseEntity<>("Nessuna classe trovata o nessuna modifica effettuata.", HttpStatus.NOT_FOUND);
+			}
 
-@GetMapping("/admins/{username}")
-@ResponseBody
-public Admin getAdminByUsername(@PathVariable String username) {
-    return srepo.findAdminByUsername(username);
-}
+		} else {
+
+			System.out.println("Token non valido ((update/{name}))");
+			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Errore nel completamente dell'operazione");
+		}
+		
+	}
+
+	@PostMapping("/registraAdmin")
+	@ResponseBody
+	public ResponseEntity<?> registraAdmin(@RequestBody Admin admin1,
+										   @CookieValue(name = "jwt", required = false) String jwt) {
+		if (isJwtValid(jwt)) {
+			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Already logged in");
+		}
+
+		// Se il token JWT non è valido, procedi con la registrazione dell'admin
+		System.out.println("Token non valido, procedere con la registrazione");
+
+		//Controlli
+		//1: Possibilità di inserire più nomi separati da uno spazio
+		if (admin1.getNome().length() >=2 && admin1.getNome().length() <= 30 && Pattern.matches("[a-zA-Z]+(\\s[a-zA-Z]+)*", admin1.getNome()) ) {
+
+			this.userAdmin.setNome(admin1.getNome());
+			System.out.println("Nome settato con successo");
+
+		} else {
+
+			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Nome non valido");
 
-@GetMapping("/player")
-	public String showplayer() {
-		return "player";
+		}
+
+		//2: Possibilità di inserire più parole separate da uno spazio ed eventualmente da un apostrofo
+
+		if ((admin1.getCognome().length() >= 2) && (admin1.getCognome().length() <= 30) && (Pattern.matches("[a-zA-Z]+(\\s?[a-zA-Z]+\\'?)*", admin1.getCognome()))) {
+            
+			this.userAdmin.setCognome(admin1.getCognome());
+			System.out.println("Cognome settato con successo");
+
+        } else {
+            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Cognome non valido");
+        }
+
+		//3: L'username deve rispettare necessariamente il seguente formato: "[username di lunghezza compresa tra 2 e 30 caratteri]_unina"
+		if (admin1.getUsername().length() >=2 && admin1.getUsername().length() <= 30 && (Pattern.matches(".*_unina$", admin1.getUsername()))) {
+
+			this.userAdmin.setUsername(admin1.getUsername());
+			System.out.println("Username settato con successo");
+
+		} else {
+
+			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Username non valido, deve rispettare il seguente formato: [username di lunghezza compresa tra 2 e 30 caratteri]_unina");
+		}
+
+		//4: L'email deve essere necessariamente quella istituzionale e terminare: o con [nome]@studenti.unina.it oppure [nome]@unina.it
+		if (Pattern.matches("^[a-zA-Z0-9._%+-]+@(?:studenti\\.)?unina\\.it$", admin1.getEmail())) {
+
+			System.out.println("Formato email corretto (registraAdmin)");
+			//Controllare che la mail non sia già presente nel DB
+			Admin existingAdmin = srepo.findAdminByEmail(admin1.getEmail());
+
+			if (existingAdmin != null) {
+
+				System.out.println("Mail già utilizzata (registraAdmin)");
+				return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Admin con questa mail già registrato");
+			}
+			System.out.println("Mail non ancora utilizzata (registraAdmin)");
+			this.userAdmin.setEmail(admin1.getEmail());
+			System.out.println("Email settata con successo");
+		}else {
+
+			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Email non valida, registrarsi con le credenziali istituzionali!");
+		}
+
+		//5: La password deve contenere almeno una lettera maiuscola, una minuscola, un numero ed un carattere speciale e deve essere lunga tra gli 8 e i 16 caratteri
+		Matcher m = p.matcher(admin1.getPassword());
+
+        if ((admin1.getPassword().length() >16) || (admin1.getPassword().length() < 8) || !(m.matches())) {
+
+            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Password non valida! La password deve contenere almeno una lettera maiuscola, una minuscola, un numero ed un carattere speciale e deve essere lunga tra gli 8 e i 16 caratteri");
+        }
+
+		//N.B: Aggiungere un ulteriore campo per poter gesitre il check_password
+        //if (password.equals(check_password)) {
+		String crypted = myPasswordEncoder.encoder().encode(admin1.getPassword());
+		System.out.println("Password memorizzata e crittata con successo");
+		this.userAdmin.setPassword(crypted);
+
+		//Salvataggio admin nel db
+		Admin savedAdmin = arepo.save(this.userAdmin);
+		System.out.println("Registrazione avvenuta con successo");
+		return ResponseEntity.ok().body(savedAdmin);
+	}
+
+
+	//FINE MODIFICA
+
+
+	// @PostMapping("/registraAdmin")
+	// @ResponseBody
+	// public Admin registraAdmin(@RequestBody Admin admin1) {
+	// 	//NB:Aggiungere setCognome
+	// 	this.userAdmin.setUsername(admin1.getUsername());
+	// 	this.userAdmin.setPassword(admin1.getPassword());
+	// 	return arepo.save(admin1);
+	// }
+
+	@PostMapping("/loginAdmin")
+	@ResponseBody
+	//public String loginAdmin(@RequestBody Admin admin1, @CookieValue(name = "jwt", required = false) String jwt, HttpServletRequest request, HttpServletResponse response) {
+	public ResponseEntity<String> loginAdmin(@RequestBody Admin admin1, @CookieValue(name = "jwt", required = false) String jwt, HttpServletRequest request, HttpServletResponse response) {
+		//NB: Bisognerebbe controllare in base all'email
+
+		//Controllo token
+		System.out.println("Token JWT valido?");
+		if(isJwtValid(jwt)) {
+			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Sei già loggato.");
+		}
+
+		//MODIFICA (11/02/2024)
+		System.out.println("Token valido");
+
+		//Controllare di aver compilato tutti i campi
+		if (admin1.getUsername().isEmpty() && admin1.getPassword().isEmpty()) {
+
+			System.out.println("Per favore, compila tutti i campi!");
+			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Per favore, compila tutti i campi!");
+		}
+		else if (admin1.getUsername().isEmpty()) {
+
+			System.out.println("Per favore, compila questo campo [username]!");
+			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Lo username è un campo obbligatorio!");
+		}
+		else if (admin1.getPassword().isEmpty()) {
+
+			System.out.println("Per favore, compila questo campo [passwrod]!");
+			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("La password è un campo obbligatorio!");
+		}
+		else {
+				System.out.println("Campi compilati.");
+				Admin admin = srepo.findAdminByUsername(admin1.getUsername());
+				boolean passwordMatches = myPasswordEncoder.matches(admin1.getPassword(), admin.getPassword());
+
+				if ((admin != null) && passwordMatches) { 
+					//Se l'admin esiste (username trovata nel db) e le password crittate coincidono...
+					System.out.println("Admin registrato (username trovato nel database)"); 	
+					this.userAdmin.setUsername(admin.getUsername());
+					this.userAdmin.setPassword(admin.getPassword());
+		
+					//MODIFICA (Gestione token JWT)
+		
+					//Flusso JWT
+					System.out.println("Generazione token JWT...");
+					String token = generateToken(admin1);
+
+					//Generazione AuthenticatedAdmin
+					// AuthenticatedAdmin authenticatedAdmin = new AuthenticatedAdmin(admin1, token);
+					// authenticatedAdminRepository.save(authenticatedAdmin);
+					// System.out.println("creazione AuthenticatedAdmin avvenuta con successo");
+
+					Cookie jwtTokenCookie = new Cookie("jwt", token);
+					jwtTokenCookie.setMaxAge(3600);
+					response.addCookie(jwtTokenCookie);
+					System.out.println("Cookie aggiunto alla risposta");
+					return ResponseEntity.ok().body("Autenticazione avvenuta con successo");
+
+				} else {
+						return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Errore nella fase di login, per favore ricontrolla di aver inserito tutti i dati corretti");
+					}
+		}
+		
+	}
+
+	//MODIFICA (11/02): Gestione flusso JWT
+	public static String generateToken(Admin admin) {
+		Instant now = Instant.now();
+		Instant expiration = now.plus(1, ChronoUnit.HOURS);
+
+		String token = Jwts.builder()
+				.setSubject(admin.getUsername())  // .setSubject() imposta il soggetto del token JWT; il soggetto di solito rappresenta l'identità a cui si applica il token
+				.setIssuedAt(Date.from(now)) 	  // .setIssuedAt() imposta il timestamp di emissione del token
+				.setExpiration(Date.from(expiration)) //.setExpiration() imposta il timestamp di scadenza del token
+				.claim("admin_username", admin.getUsername()) //.claim() aggiunge una serie di informazioni aggiuntive
+				.claim("role", "admin")
+				.signWith(SignatureAlgorithm.HS256, "mySecretKeyAdmin") //.signWith() serve per firmare il token JWT utilizzando l'algoritmo di firma HMAC-SHA256 e una chiave segreta specificata
+				.compact(); //.compact() serve a compattare il token JWT in una stringa valida che può essere facilmente trasferita tramite HTTP o memorizzata in altri luoghi di archiviazione come cookie
+
+		return token;
+	}
+
+	public boolean isJwtValid(String jwt) {
+		try {
+			Claims c = Jwts.parser().setSigningKey("mySecretKeyAdmin").parseClaimsJws(jwt).getBody();
+
+			if((new Date()).before(c.getExpiration())) {
+				return true;
+			}
+		} catch(Exception e) {
+			System.err.println(e);
+		}
+
+		return false;
+	}
+
+	@GetMapping("/loginAdmin")
+	public ModelAndView showLoginForm(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+		if(isJwtValid(jwt)) return new ModelAndView("redirect:/home_adm"); 
+
+		return new ModelAndView("login_admin");
+	}
+
+	// @GetMapping("/registraAdmin")
+	// public ModelAndView showRegistrationForm(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+	// 	if(isJwtValid(jwt)) return new ModelAndView("redirect:/home_adm"); 
+
+	// 	return new ModelAndView("registraAdmin");
+	// }
+	//FINE MODIFICA
+
+	// @GetMapping("/admins/{username}")
+	// @ResponseBody
+	// public Admin getAdminByUsername(@PathVariable String username) {
+	// 	return srepo.findAdminByUsername(username);
+	// }
+
+	@GetMapping("/admins/{username}")
+	@ResponseBody
+	public ResponseEntity<Admin> getAdminByUsername(@PathVariable String username,
+												    @CookieValue(name = "jwt", required = false) String jwt) {
+		if (isJwtValid(jwt)) {
+
+			System.out.println("Token valido, può ricercare admin per username (/admins/{username})");
+			Admin admin = srepo.findAdminByUsername(username);
+			if (admin != null) {
+
+				System.out.println("Operazione avvenuta con successo (/admins/{username})");
+				return ResponseEntity.ok().body(admin);
+			} else {
+				return ResponseEntity.status(HttpStatus.NOT_FOUND).body(null); // Ritorna 404 Not Found
+			}
+		} else {
+			return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body(null); // Ritorna 401 Unauthorized
+		}
+	}
+
+	// @GetMapping("/player")
+	// public String showplayer() {
+	// 	return "player";
+	// }
+
+	//MODIFICA (11/02/2024) : Gestione flusso JWT
+
+	@GetMapping("/player")
+	public ModelAndView showplayer(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+
+		if(isJwtValid(jwt)) return new ModelAndView("player");
+
+        return new ModelAndView("login_admin");
 	}
 
 	@GetMapping("class")
-	public String showclass() {
-		return "class";
+	public ModelAndView showclass(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+
+		if(isJwtValid(jwt)) return new ModelAndView("class");
+
+        return new ModelAndView("login_admin");
 	}
 
+	//FINE MODIFICA
+
+	// @GetMapping("class")
+	// public String showclass() {
+	// 	return "class";
+	// }
+
+	//MODIFICA (12/02/2024) : Logout amministratore
+    @GetMapping("/logout_admin")
+    public ModelAndView logoutAdmin(HttpServletResponse response) {
+
+		System.out.println("GetMapping(\"/logout_admin\")");
+        Cookie jwtTokenCookie = new Cookie("jwt", null);
+		System.out.println("Logout (GET)");
+        jwtTokenCookie.setMaxAge(0);
+        response.addCookie(jwtTokenCookie);
+
+        return new ModelAndView("login_admin"); 
+    }
+
+	//MODIFICA (15/02/2024) : Elenco di tutti gli amministratori
+	// @GetMapping("/admins_list")
+	// @ResponseBody 						// Questa annotazione indica a Spring di restituire direttamente il risultato come corpo della risposta HTTP
+    // public List<Admin> getAllAdmins() {
+    //     return arepo.findAll();
+    // }
+	//MODIFICA (1/3/2024) : Aggiunto controllo token jwt
+	@GetMapping("/admins_list")
+    @ResponseBody
+    public Object getAllAdmins(@CookieValue(name = "jwt", required = false) String jwt) {
+        System.out.println("GET /admins_list");
+        if (isJwtValid(jwt)) {
+            return arepo.findAll();
+        } else {
+            return new RedirectView("/loginAdmin"); // Reindirizza alla pagina di loginAdmin
+        }
+    }
+
+	@GetMapping("/info")
+	public ModelAndView showadmin(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+
+		System.out.println("GET /info");
+		if(isJwtValid(jwt)) return new ModelAndView("info");
+
+        return new ModelAndView("login_admin");
+	}
+
+	@PostMapping("/password_change_admin")
+	@ResponseBody
+	public ResponseEntity<?> changePasswordAdmin (@RequestBody Admin admin1,
+												  //@RequestParam("resetToken") String resetToken,
+												  @CookieValue(name = "jwt", required = false) String jwt, HttpServletRequest request) {
+		//Controllo validità token
+		System.out.println("Token valido? (password_change_admin)");
+		if(isJwtValid(jwt)) {
+            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Già loggato");
+        }
+		System.out.println("Token valido, si può procedere al cambio password (password_change_admin)");
+		
+		//Definizione amministratore
+		Admin admin = srepo.findAdminByEmail(admin1.getEmail());
+		System.out.println("La mail esiste? (password_change_admin)");
+
+		if (admin == null) {
+            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Email non trovata");
+        }
+		Admin admin_reset = srepo.findAdminByResetToken(admin1.getResetToken());
+		System.out.println("Mail trovata nel database (password_change_admin)");
+		System.out.println("admin: " + admin_reset);
+		
+		// System.out.println("admin1.getResetToken: " + admin1.getResetToken() + "\n");		//OK
+		// System.out.println("admin.getResetToken: " + admin_reset.getResetToken() + "\n");	//OK
+
+		System.out.println("Token di reset valido?");
+		if(!admin_reset.getResetToken().equals(admin1.getResetToken())) {
+			System.out.println("Token non valido");
+            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Token di reset invalido!");
+        }
+		System.out.println("Token di reset valido! (password_change_admin)");
+		System.out.println("Si può procedere al cambio password");
+
+		//5: La password deve contenere almeno una lettera maiuscola, una minuscola, un numero ed un carattere speciale e deve essere lunga tra gli 8 e i 16 caratteri
+		Matcher m = p.matcher(admin1.getPassword());
+
+        if ((admin1.getPassword().length() >16) || (admin1.getPassword().length() < 8) || !(m.matches())) {
+
+            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Password non valida! La password deve contenere almeno una lettera maiuscola, una minuscola, un numero ed un carattere speciale e deve essere lunga tra gli 8 e i 16 caratteri");
+        }
+		String crypted = myPasswordEncoder.encoder().encode(admin1.getPassword());
+		admin1.setPassword(crypted);
+		admin.setPassword(admin1.getPassword());
+		System.out.println("Password memorizzata e crittata con successo");
+
+		admin1.setResetToken(null);
+		admin.setResetToken(admin1.getResetToken());
+
+		//Salvataggio admin nel db
+		Admin savedAdmin = arepo.save(admin);
+		System.out.println("Password cambiata con successo");
+		return ResponseEntity.ok().body(savedAdmin);
+											
+	}
+	@GetMapping("/password_change_admin")
+    public ModelAndView showChangePswAdminForm(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+        
+		System.out.println("GET /password_change_admin");
+		if(isJwtValid(jwt)) return new ModelAndView("redirect:/login_admin"); 
+
+        return new ModelAndView("password_change_admin");
+    }
+	@PostMapping("/password_reset_admin")
+	@ResponseBody
+	public ResponseEntity<?> resetPasswordAdmin (@RequestBody Admin admin1,
+												 @CookieValue(name = "jwt", required = false) String jwt, HttpServletRequest request) {
+		System.out.println("Token valido? (password_reset_admin)");
+		if( isJwtValid(jwt)){
+			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Già loggato");
+		}
+		System.out.println("Token non valido (password_reset_admin)");
+
+		//Definizione amministratore
+		//Controlliamo che esista nel repository un admin con la mail specificata
+		Admin admin = srepo.findAdminByEmail(admin1.getEmail());
+		System.out.println("La mail esiste? (password_change_admin)");
+		if (admin == null){
+			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Email non trovata");
+		}
+		
+		//Generazione token di reset
+		System.out.println("Generazione token di reset...");
+		// String resetToken = generateToken(admin1);
+		String resetToken = generateToken(admin);
+		System.out.println("resetToken:" + resetToken);
+		System.out.println("Token creato correttamente");
+		admin.setResetToken(resetToken);
+		
+
+		//Salvataggio admin nel db
+		Admin savedAdmin = arepo.save(admin);
+		System.out.println("savedAdmin: " + savedAdmin);
+		System.out.println("Amministratore salvato correttamente nel DB");
+		try {
+            emailService.sendPasswordResetEmail(savedAdmin.getEmail(), savedAdmin.getResetToken());
+			// System.out.println("admin.getEmail"+ savedAdmin.getEmail()+"admin.getResetToken"+ savedAdmin.getResetToken());
+			System.out.println("Congratulazioni! Controlla il tuo indirizzo di posta elettronica, ti è stato inviato un token di reset");
+            return ResponseEntity.ok().body(savedAdmin);
+        } catch (MessagingException e) {
+            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Errore nell'invio del messaggio di posta");
+        }
+		
+	}
+	@GetMapping("/password_reset_admin")
+    public ModelAndView showResetPswAdminForm(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+        
+		System.out.println("GET /password_reset_admin");
+		if(isJwtValid(jwt)) return new ModelAndView("redirect:/login_admin"); 
+
+        return new ModelAndView("password_reset_admin");
+    }
+	@GetMapping("/invite_admins")
+	public ModelAndView showInviteAdmins(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+
+		System.out.println("GET /invite_admins");
+		if(isJwtValid(jwt)) return new ModelAndView("invite_admins");
+
+        return new ModelAndView("login_admin");
+	}
+	@PostMapping("/invite_admins")
+	@ResponseBody
+	public ResponseEntity<?> inviteAdmins(@RequestBody Admin admin1,
+										  @CookieValue(name = "jwt", required = false) String jwt, HttpServletRequest request) {
+		System.out.println("Token valido? (invite_admins)");
+		if( !isJwtValid(jwt)){
+			return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Attenzione, non sei loggato");
+		}
+		System.out.println("Token valido (invite_admins)");
+
+		
+		//Controlliamo che non esista nel repository un admin con la mail specificata nell'invito
+		Admin admin = srepo.findAdminByEmail(admin1.getEmail());
+		System.out.println("La mail esiste? (invite_admins)");
+		if (admin != null){
+			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Email trovata, la persona che stai tentando di invitare è già un amministratore!");
+		}
+		//Creazione nuovo admin
+		//Admin new_admin = new Admin("", "", "", admin1.getEmail(), "");
+		this.userAdmin.setEmail(admin1.getEmail());
+		System.out.println("Nuovo admin creato correttamente");
+		
+		//Generazione token di invito per quella specifica mail
+		System.out.println("Generazione token diinvito...");
+		String invitationToken = generateToken(this.userAdmin);
+		System.out.println("invitationToken:" + invitationToken);
+		System.out.println("Token creato correttamente");
+		this.userAdmin.setInvitationToken(invitationToken);
+		System.out.println(this.userAdmin);
+		
+
+		//Salvataggio admin nel db
+		Admin savedAdmin = arepo.save(this.userAdmin);
+		System.out.println("savedAdmin: " + savedAdmin);
+		System.out.println("Amministratore salvato correttamente nel DB");
+		try {
+            emailService.sendInvitationToken(savedAdmin.getEmail(), savedAdmin.getInvitationToken());
+			// System.out.println("admin.getEmail"+ savedAdmin.getEmail()+"admin.getResetToken"+ savedAdmin.getResetToken());
+			System.out.println("Mail inviata correttamente all'indirizzo specificato");
+            return ResponseEntity.ok().body(savedAdmin);
+        } catch (MessagingException e) {
+            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Errore nell'invio del messaggio di posta");
+        }
+		
+	}
+	@GetMapping("/login_with_invitation")
+	public ModelAndView showLoginWithInvitationForm(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+
+		System.out.println("GET /login_with_invitation");
+		if(isJwtValid(jwt)) return new ModelAndView("login_admin");
+
+        return new ModelAndView("login_with_invitation");
+	}
+	@PostMapping("/login_with_invitation")
+	@ResponseBody
+	public ResponseEntity<?> loginWithInvitation (@RequestBody Admin admin1,
+												  @CookieValue(name = "jwt", required = false) String jwt, HttpServletRequest request) {
+		//Controllo validità token
+		System.out.println("Token valido? (login_with_invitation)");
+		if(isJwtValid(jwt)) {
+            return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Attenzione, hai già un token valido!");
+        }
+		System.out.println("Token invalido, si può procedere alla registrazione tramite invito (login_with_invitation)");
+		
+		//Definizione amministratore
+		Admin admin = srepo.findAdminByEmail(admin1.getEmail());
+		System.out.println("La mail esiste? (login_with_invitation)");
+
+		if (admin == null) {
+            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Email non trovata");
+        }
+
+		System.out.println("Mail trovata nel database (login_with_invitation)");
+		Admin admin_invited = srepo.findAdminByInvitationToken(admin1.getInvitationToken());
+		System.out.println("admin: " + admin_invited);
+		
+		// System.out.println("admin1.getInvitationToken: " + admin1.getInvitationToken() + "\n");				//OK
+		// System.out.println("admin_invited.getInvitationToken: " + admin_invited.getResetToken() + "\n");		//OK
+
+		System.out.println("Token di invio valido?");
+		if(!admin_invited.getInvitationToken().equals(admin1.getInvitationToken())) {
+			System.out.println("Token non valido");
+            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Token di invito invalido!");
+        }
+		System.out.println("Token di invito valido! (login_with_invitation)");
+		System.out.println("Si può procedere alla registrazione");
+
+		//Salvataggio email
+		admin.setEmail(admin1.getEmail());
+		System.out.println("Mail correttamente salvata!");
+
+		//Fase di registrazione
+		//Controlli
+		//1: Possibilità di inserire più nomi separati da uno spazio
+		if (admin1.getNome().length() >=2 && admin1.getNome().length() <= 30 && Pattern.matches("[a-zA-Z]+(\\s[a-zA-Z]+)*", admin1.getNome()) ) {
+
+			admin.setNome(admin1.getNome());
+			System.out.println("Nome settato con successo");
+
+		} else {
+
+			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Nome non valido");
+
+		}
+
+		//2: Possibilità di inserire più parole separate da uno spazio ed eventualmente da un apostrofo
+
+		if ((admin1.getCognome().length() >= 2) && (admin1.getCognome().length() <= 30) && (Pattern.matches("[a-zA-Z]+(\\s?[a-zA-Z]+\\'?)*", admin1.getCognome()))) {
+            
+			admin.setCognome(admin1.getCognome());
+			System.out.println("Cognome settato con successo");
+
+        } else {
+            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Cognome non valido");
+        }
+
+		//3: L'username deve rispettare necessariamente il seguente formato: "[username di lunghezza compresa tra 2 e 30 caratteri]_invited"
+		if (admin1.getUsername().length() >=2 && admin1.getUsername().length() <= 30 && (Pattern.matches(".*_invited$", admin1.getUsername()))) {
+
+			admin.setUsername(admin1.getUsername());
+			System.out.println("Username settato con successo");
+
+		} else {
+
+			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Username non valido, deve rispettare il seguente formato: [username di lunghezza compresa tra 2 e 30 caratteri]_invited");
+		}
+
+		//5: La password deve contenere almeno una lettera maiuscola, una minuscola, un numero ed un carattere speciale e deve essere lunga tra gli 8 e i 16 caratteri
+		Matcher m = p.matcher(admin1.getPassword());
+
+        if ((admin1.getPassword().length() >16) || (admin1.getPassword().length() < 8) || !(m.matches())) {
+
+            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Password non valida! La password deve contenere almeno una lettera maiuscola, una minuscola, un numero ed un carattere speciale e deve essere lunga tra gli 8 e i 16 caratteri");
+        }
+		String crypted = myPasswordEncoder.encoder().encode(admin1.getPassword());
+		admin1.setPassword(crypted);
+		admin.setPassword(admin1.getPassword());
+		System.out.println("Password memorizzata e crittata con successo");
+
+		admin1.setInvitationToken(null);
+		admin.setInvitationToken(admin1.getInvitationToken());
+
+		//Salvataggio admin nel db
+		Admin savedAdmin = arepo.save(admin);
+		System.out.println(savedAdmin);
+		System.out.println("Registrazione avvenuta con successo!");
+		return ResponseEntity.ok().body(savedAdmin);
+											
+	}
+	// //MODIFICA (18/02/2024) : Aggiunta menù
+    // @GetMapping("/menu")
+    // public ModelAndView showMenuForm(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+
+    //     System.out.println("GET (/menu)");
+    //     if(isJwtValid(jwt)) return new ModelAndView("redirect:/loginAdmin"); 
+
+    //     return new ModelAndView("menu");
+    // }
+	//FINE MODIFICA
+
+    // @PostMapping("/logout_admin")
+	// @ResponseBody
+    // public ResponseEntity<String> logoutAdmin(@RequestParam("authToken") String authToken, HttpServletResponse response) {
+        
+	// 	System.out.println("PostMapping(\"/logout_admin\")");
+	// 	AuthenticatedAdmin authenticatedAdmin = authenticatedAdminRepository.findByAuthToken(authToken);
+	// 	System.out.println("Admin autenticato?");
+    //     if (authenticatedAdmin == null) {
+    //         return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Admin non autenticato");
+    //     }
+
+    //     Cookie jwtTokenCookie = new Cookie("jwt", null);
+	// 	System.out.println("Logout (POST)");
+    //     jwtTokenCookie.setMaxAge(0);
+    //     response.addCookie(jwtTokenCookie);
+
+    //     authenticatedAdminRepository.delete(authenticatedAdmin);
+    //     return ResponseEntity.ok("Logout avvenuto con successo");
+    // }
+
+	//FINE MODIFICA
+
 
 	
 }
diff --git a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/Admin.java b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/Admin.java
index bba44cb..d60d5ae 100644
--- a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/Admin.java
+++ b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/Admin.java
@@ -7,12 +7,25 @@ public class Admin {
 	private String	nome;
 	private String	cognome;
 	private	String	username;
+
+	//MODIFICA (15/02/2024) : Aggiunta campo email
+	private String email;
+
+	//MODIFICA (15/02/2024) : Aggiunta campo resetToken
+	private String resetToken;
+
+	//MODIFICA (16/02/2024) : Aggiunta campo invitationToken
+	private String invitationToken;
+
+	//FINE MODIFICA (15/02/2024	)
+
 	private String password;
 	
-	public Admin(String nome, String cognome, String username, String password) {
+	public Admin(String nome, String cognome, String username, String email,String password) {
 		this.nome = nome;
 		this.cognome = cognome;
 		this.username = username;
+		this.email = email;
 		this.password = password;
 	}
 	 
@@ -40,6 +53,28 @@ public class Admin {
 	public void setPassword(String password) {
 		this.password = password;
 	}
+	public String getEmail() {
+		return email;
+	}
+	public void setEmail(String email) {
+		this.email = email;
+	}
+	// Getter e setter per il campo resetToken
+    public String getResetToken() {
+        return resetToken;
+    }
+
+    public void setResetToken(String resetToken) {
+        this.resetToken = resetToken;
+    }
+	//Getter e setter per il campo invitationToken
+	public String getInvitationToken() {
+        return invitationToken;
+    }
+
+    public void setInvitationToken(String invitationToken) {
+        this.invitationToken = invitationToken;
+    }
 	
 	@Override
     public String toString() {
@@ -47,9 +82,10 @@ public class Admin {
                 "nome='" + nome + '\'' +
                 ", cognome='" + cognome + '\'' +
                 ", username='" + username + '\'' +
+				", email='" + email + '\'' +
                 ", password='" + password + '\'' +
+				", resetToken='" + resetToken + '\'' +
+				", invitationToken='" + invitationToken + '\'' +
                 '}';
     }
-	
-	
 }
\ No newline at end of file
diff --git a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/filesystem/download/FileDownloadUtil.java b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/filesystem/download/FileDownloadUtil.java
index 8c18038..5ddb4d0 100644
--- a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/filesystem/download/FileDownloadUtil.java
+++ b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/filesystem/download/FileDownloadUtil.java
@@ -14,7 +14,7 @@ public class FileDownloadUtil {
 	public static ResponseEntity<Resource> downloadClassFile(String downloadpath) throws Exception {
      
 		// Percorso del file Java da scaricare
-		 Path path = Paths.get(downloadpath);
+        Path path = Paths.get(downloadpath);
         // Rappresentazione del file come Resource
         Resource resource = new UrlResource(path.toUri());
 
diff --git a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/filesystem/upload/FileUploadResponse.java b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/filesystem/upload/FileUploadResponse.java
index 9175fad..9ab05ba 100644
--- a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/filesystem/upload/FileUploadResponse.java
+++ b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/filesystem/upload/FileUploadResponse.java
@@ -22,5 +22,21 @@ public class FileUploadResponse {
 	public void setSize(long size) {
 		this.size = size;
 	}
+    //MODIFICA (11/02/2024)
+	private String errorMessage;
+
+    // public FileUploadResponse(String errorMessage) {
+    //     this.errorMessage = errorMessage;
+    // }
+
+    public String getErrorMessage() {
+        return errorMessage;
+    }
+
+    public void setErrorMessage(String errorMessage) {
+        this.errorMessage = errorMessage;
+    }
+
+	//FINE MODIFICA
 	
 }
diff --git a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/filesystem/upload/FileUploadUtil.java b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/filesystem/upload/FileUploadUtil.java
index 7d72a94..2cf1e0f 100644
--- a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/filesystem/upload/FileUploadUtil.java
+++ b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/filesystem/upload/FileUploadUtil.java
@@ -24,23 +24,23 @@ public class FileUploadUtil {
 	public static void saveCLassFile(String fileName,String className,MultipartFile classFile) throws IOException {
 		
 		// Percorso della directory dove verranno salvati i file
-		 String directoryPath = "Files-Upload/"+className;
-		 // Converto la directory espressa come stringa in un oggetto di tipo Path
-	        Path directory = Paths.get(directoryPath);
-	        
-	        try {
-	            // Verifica se la directory esiste già
-	            if (!Files.exists(directory)) {
-	                // Crea la directory
-	                Files.createDirectories(directory);
-	                System.out.println("La directory è stata creata con successo.");
-	            } else {
-	                System.out.println("La directory esiste già.");
-	            }
-	        } catch (Exception e) {
-	            System.out.println("Errore durante la creazione della directory: " + e.getMessage());
-	        }
-	    
+		String directoryPath = "Files-Upload/"+className;
+		// Converto la directory espressa come stringa in un oggetto di tipo Path
+		Path directory = Paths.get(directoryPath);
+		System.out.println("creazione directory:"+directory);
+		try {
+			// Verifica se la directory esiste già
+			if (!Files.exists(directory)) {
+				// Crea la directory
+				Files.createDirectories(directory);
+				System.out.println("La directory:"+directory+"è stata creata con successo.");
+			} else {
+				System.out.println("La directory:"+directory+" esiste già.");
+			}
+		} catch (Exception e) {
+			System.out.println("Errore durante la creazione della directory: " +directory+ e.getMessage());
+		}
+	
 		// Percorso completo della directory di upload
 		Path uploadDirectory = Paths.get("Files-Upload/"+className);
 		
@@ -57,6 +57,9 @@ public class FileUploadUtil {
 			
 			// Copia il file nell'uploadDirectory con opzione di sovrascrittura se esiste già
 			Files.copy(inputStream,filePath,StandardCopyOption.REPLACE_EXISTING);
+		}  catch (Exception e) {
+			e.printStackTrace();
+			System.out.println("Errore durante il salvataggio del file in Files-Upload:" + e.getMessage());
 		}
 	}
 
diff --git a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/repository/AdminRepository.java b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/repository/AdminRepository.java
index 02a7064..acbe19f 100644
--- a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/repository/AdminRepository.java
+++ b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/repository/AdminRepository.java
@@ -5,6 +5,6 @@ import org.springframework.data.mongodb.repository.MongoRepository;
 import com.groom.manvsclass.model.Admin;
 
 
-public interface AdminRepository	extends MongoRepository<Admin,String>{
+public interface AdminRepository extends MongoRepository<Admin,String>{
 	
 }
diff --git a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/repository/SearchRepositoryImpl.java b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/repository/SearchRepositoryImpl.java
index c7b728b..8bcc321 100644
--- a/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/repository/SearchRepositoryImpl.java
+++ b/T1-G11/applicazione/manvsclass/src/main/java/com/groom/manvsclass/model/repository/SearchRepositoryImpl.java
@@ -83,12 +83,60 @@ public class SearchRepositoryImpl {
         if (result == null) {
             return null;
         }
-        Admin admin = new Admin("gg","ff","gg","hh");
+        //Admin admin = new Admin("gg","ff","gg","hh");
+        Admin admin = new Admin("gg","ff","gg","hh","jj");
         admin.setUsername(result.getString("username"));
         admin.setPassword(result.getString("password"));
         return admin;
     }
-    
+
+    //MODIFICA (15/02/2024) : Aggiunta ricerca per email
+    public Admin findAdminByEmail(String email) {
+    	MongoDatabase database = client.getDatabase("manvsclass");
+    	MongoCollection<Document> collection = database.getCollection("Admin");
+        Bson filter = Filters.eq("email", email);
+        Document result = collection.find(filter).first();
+        if (result == null) {
+            return null;
+        }
+        //Admin admin = new Admin("gg","ff","gg","hh");
+        Admin admin = new Admin("gg","ff","gg","hh","jj");
+        admin.setEmail(result.getString("email"));
+        admin.setNome(result.getString("nome"));
+        admin.setCognome(result.getString("cognome"));
+        admin.setUsername(result.getString("username"));
+        // admin.setResetToken(result.getString("resetToken"));
+        return admin;
+    }
+
+     public Admin findAdminByResetToken(String resetToken) {
+     	MongoDatabase database = client.getDatabase("manvsclass");
+     	MongoCollection<Document> collection = database.getCollection("Admin");
+         Bson filter = Filters.eq("resetToken", resetToken);
+         Document result = collection.find(filter).first();
+         if (result == null) {
+             return null;
+         }
+         //Admin admin = new Admin("gg","ff","gg","hh");
+         Admin admin = new Admin("gg","ff","gg","hh","jj");
+         admin.setResetToken(result.getString("resetToken"));
+         return admin;
+     }
+     public Admin findAdminByInvitationToken(String invitationToken) {
+        MongoDatabase database = client.getDatabase("manvsclass");
+        MongoCollection<Document> collection = database.getCollection("Admin");
+        Bson filter = Filters.eq("invitationToken", invitationToken);
+        Document result = collection.find(filter).first();
+        if (result == null) {
+            return null;
+        }
+        //Admin admin = new Admin("gg","ff","gg","hh");
+        Admin admin = new Admin("gg","ff","gg","hh","jj");
+        admin.setInvitationToken(result.getString("invitationToken"));
+        return admin;
+    }
+
+    //FINE MODIFICA (15/02/2024)
     public List<ClassUT> searchAndFilter(String text, String category) {
 
         final List<ClassUT> posts = new ArrayList<>();
diff --git a/T1-G11/applicazione/manvsclass/src/main/resources/application.properties b/T1-G11/applicazione/manvsclass/src/main/resources/application.properties
index 771e266..ab38a65 100644
--- a/T1-G11/applicazione/manvsclass/src/main/resources/application.properties
+++ b/T1-G11/applicazione/manvsclass/src/main/resources/application.properties
@@ -4,4 +4,12 @@ spring.data.mongodb.port=27017
 spring.datasource.username=root
 spring.datasource.password=osimhen
 spring.servlet.multipart.max-file-size=5MB
-spring.servlet.multipart.max-request-size=5MB
\ No newline at end of file
+spring.servlet.multipart.max-request-size=5MB
+
+spring.mail.host=smtp.gmail.com
+spring.mail.port=587
+spring.mail.username=gamesapp052023@gmail.com
+spring.mail.password=uofjilbsnraczxbk
+spring.mail.properties.mail.smtp.auth=true
+spring.mail.properties.mail.smtp.starttls.enable=true
+spring.main.allow-circular-references=true
\ No newline at end of file
diff --git a/T1-G11/applicazione/manvsclass/src/main/resources/templates/home_adm.html b/T1-G11/applicazione/manvsclass/src/main/resources/templates/home_adm.html
index b17a4f0..a0b0daa 100644
--- a/T1-G11/applicazione/manvsclass/src/main/resources/templates/home_adm.html
+++ b/T1-G11/applicazione/manvsclass/src/main/resources/templates/home_adm.html
@@ -1,4 +1,4 @@
-<!DOCTYPE html>
+<!-- <!DOCTYPE html>
 <html lang="en" >
 <head>
   <meta charset="UTF-8">
@@ -279,4 +279,495 @@ setTimeout(function(){
 }, 800);
 </script>
 
+</html> -->
+
+<!--MODIFICA (12/02/2024): Restyling pagina-->
+
+<!DOCTYPE html>
+<html lang="en" >
+<head>
+<meta charset="UTF-8">
+<meta name="viewport" content="width=device-width, initial-scale=1">
+<title>Home Admin</title>
+<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css">
+
+<style type="text/css">
+
+/*Stile CSS qui*/
+
+@import url("https://fonts.googleapis.com/css?family=Alegreya+Sans:800,900");
+html, body {
+  height: 100%;
+}
+
+h1 {
+  font-family: Alegreya Sans, sans-serif;
+	font-size: 100px;
+	text-align: center;
+}
+
+h2 {
+	font-size: 70px;
+	text-align: center;
+}
+
+h3 {
+	font-size: 50px;
+	text-align: center;
+}
+
+body {
+  background: beige;
+  font-family: Alegreya Sans, sans-serif;
+}
+
+nav {
+  display: block;
+  position: fixed;
+  width: 500px;
+  height: 500px;
+  -webkit-user-select: none;
+     -moz-user-select: none;
+      -ms-user-select: none;
+          user-select: none;
+  transform: translate3d(25px, -25px, 0);
+  transition: transform 0.5s cubic-bezier(0.3, 1.4, 0.5, 0.9);
+}
+
+nav.open {
+  transform: translate3d(0, 0, 0);
+}
+
+nav.top-right {
+  top: 0px;
+  right: 0px;
+}
+
+.disc {
+  position: absolute;
+  display: inline-block;
+  text-align: center;
+  cursor: pointer;
+  font: 25px Alegreya Sans, sans-serif;
+  line-height: 40px;
+  padding-top: 10px;
+  border-radius: 250px;
+  transform: scale3d(0.5, 0.5, 0.5) rotate3d(0, 0, 1, 190deg);
+  pointer-events: none;
+  opacity: 0;
+  cursor: pointer;
+  transition: transform 0.5s cubic-bezier(0.3, 1.4, 0.5, 0.9), opacity 0.5s;
+}
+
+.disc div {
+  transform: rotate(180deg);
+}
+
+.open .disc {
+  pointer-events: auto;
+  opacity: 1;
+}
+
+.l1 {
+  top: 0px;
+  left: 0px;
+  right: 0px;
+  bottom: 0px;
+  background: tomato;
+  transition-delay: 0s;
+}
+
+.open .l1 {
+  transition-delay: 0s;
+  transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 190deg);
+  opacity: 1;
+
+}
+.open .l1:hover {
+  /*background: shade(tomato, 90%);*/
+  color: white;
+  transition-delay: 0s;
+  background-color: rgb(255, 22, 84);
+}
+
+.open .l1:active {
+  background: shade(tomato, 50%);
+  color: tomato;
+}
+
+.open .l1.toggle {
+  transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, 10deg);
+}
+
+.l2 {
+  top: 50px;
+  left: 50px;
+  right: 50px;
+  bottom: 50px;
+  background: #ff7a39;
+  transition-delay: 0.1s;
+}
+
+.open .l2 {
+  transition-delay: 0.1s;
+  transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 190deg);
+  opacity: 1;
+}
+
+.open .l2:hover {
+  /*background: shade(#ff7a39, 90%);*/
+  /*color: #ff7a39;*/
+  color: rgb(18, 102, 79);
+  transition-delay: 0s;
+  background-color: rgb(243, 255, 189);
+}
+
+.open .l2:active {
+  background: shade(#ff7a39, 50%);
+  color: #ff7a39;
+}
+
+.open .l2.toggle {
+  transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, 10deg);
+}
+
+
+.l3 {
+  top: 100px;
+  left: 100px;
+  right: 100px;
+  bottom: 100px;
+  background: #ff912b;
+  transition-delay: 0.2s;
+}
+
+.open .l3 {
+  transition-delay: 0.2s;
+  transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 190deg);
+  opacity: 1;
+}
+
+.open .l3:hover {
+  /*background: shade(#ff912b, 90%);*/
+  /*color: #ff912b;*/
+  color: rgb(239, 156, 218);
+  transition-delay: 0s;
+  background-color: rgb(178, 219, 191);
+}
+
+.open .l3:active {
+  background: shade(#ff912b, 50%);
+  color: #ff912b;
+}
+
+.open .l3.toggle {
+  transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, 10deg);
+}
+
+/*Sfruttiamo lo stile già definito (l4) per caratterizzare il logout*/ 
+.l4 {
+  top: 150px;
+  left: 150px;
+  right: 150px;
+  bottom: 150px;
+  background: #ffa91c;
+  transition-delay: 0.3s;
+}
+
+.open .l4 {
+  transition-delay: 0.3s;
+  transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 190deg);
+  opacity: 1;
+}
+
+.open .l4:hover {
+  /*background: shade(#ffa91c, 90%);*/
+  /*color: #ffa91c;*/
+  color: rgb(219, 153, 90);
+  transition-delay: 0s;
+  background-color: rgb(112, 193, 179);
+}
+
+.open .l4:active {
+  background: shade(#ffa91c, 50%);
+  color: #ffa91c;
+}
+
+.open .l4.toggle {
+  transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, 10deg);
+}
+
+.l5 {
+  top: 200px;
+  left: 200px;
+  right: 200px;
+  bottom: 200px;
+  background: #ffc00e;
+  transition-delay: 0.4s;
+}
+
+.open .l5 {
+  transition-delay: 0.4s;
+  transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 190deg);
+  opacity: 1;
+}
+
+.open .l5:hover {
+  /*background: shade(#ffc00e, 90%);*/
+  /*color: #ffc00e;*/
+  color: rgb(219, 153, 90);
+  transition-delay: 0s;
+  background-color: rgb(36, 123, 160);
+}
+
+.open .l5:active {
+  background: shade(#ffc00e, 50%);
+  color: #ffc00e;
+}
+
+.open .l5.toggle {
+  transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, 10deg);
+}
+
+.toggle {
+  line-height: 100px;
+  padding: 0;
+  width: 100px;
+  background: gold;
+  opacity: 1;
+  transform: none;
+  pointer-events: auto;
+  transition-delay: 0s;
+}
+
+.open .toggle {
+  transform: rotate3d(0, 0, 1, 0deg);
+}
+
+.toggle:hover {
+  /*background: shade(gold, 90%);*/
+  text-decoration: underline;
+  background-color: rgb(68, 222, 231);
+}
+
+.toggle:active {
+  background: shade(gold, 50%);
+  color: rgba(255, 215, 0, 0.5);
+  transform: scale(0.9);
+  transition-duration: 0s;
+}
+
+/*MODIFICA (12/02/2024) : Aggiunta bottone logout*/
+.logout-admin-container {
+    position: fixed;
+    top: 50%;
+    left: 0;
+    transform: translateY(-50%);
+    z-index: 9999; /* Assicura che il bottone sia sopra agli altri elementi */
+}
+
+.logout-admin-container form {
+    position: relative;
+    display: inline-block;
+}
+
+.logout-admin-container button {
+    width: 100px;
+    height: 100px;
+    border-radius: 50%;
+    background-color: blueviolet;
+    color: black;
+    font-size: 25px;
+    border: none;
+    cursor: pointer;
+    transition: background-color 0.3s;
+    font-family: Alegreya Sans, sans-serif;
+    text-align: center;
+}
+
+.logout-admin-container button:hover {
+    background-color: green; /* Color shade of green */
+    font-weight: bold;
+    text-decoration: underline;
+}
+
+/*MODIIFCA (16/02/2024) : Aggiunta bottone di invito amministratori*/
+.invita-admin-container {
+    position: fixed;
+    top: 80%;
+    left: 0;
+    transform: translateY(-50%);
+    z-index: 9999; /* Assicura che il bottone sia sopra agli altri elementi */
+}
+
+.invita-admin-container form {
+    position: relative;
+    display: inline-block;
+}
+
+.invita-admin-container button {
+    width: 150px;
+    height: 150px;
+    border-radius: 50%;
+    background-color: rgb(226, 43, 110);
+    color: black;
+    font-size: 30px;
+    border: none;
+    cursor: pointer;
+    transition: background-color 0.3s;
+    font-family: Alegreya Sans, sans-serif;
+    text-align: center;
+}
+
+.invita-admin-container button:hover {
+    background-color: rgb(128, 75, 0); /* Color shade of green */
+    font-weight: bold;
+    text-decoration: underline;
+}
+/*FINE MODIFICA*/
+
+</style>
+</head>
+
+<body>
+<!--Codice HTML qui-->
+<br>
+<br>
+<h1>Home Admin</h1>
+<h2>Welcome</h2>
+<h3>Choose an option</h3>
+
+<nav class="top-right open">
+	<a href = "/player" class="disc l1">
+		<div>Players</div>
+	</a>
+	<a href = "class" class="disc l2">
+		<div>Classes</div>
+	</a>
+  <!--MODIFICA (15/02/2024): Aggiunta pagina di informazioni riguardo tutti gli amministratori del sistema-->
+	<a href = "info" class="disc l3">
+		<div>Info</div>
+	</a>
+  <!--FINE MODIFICA (15/02/2024)-->
+	<a class="disc l5 toggle">
+		Menu
+	</a>
+</nav>
+<!--MODIFICA (12/02/2024): Aggiunta opzione di disconnessione-->
+  
+<div class="logout-admin-container">
+  <button type="button" onclick="Disconnessione()">Logout</button>
+</div>
+
+<!--MODIFICA (16/02/2024) : Aggiunta bottone di invito-->
+
+<div class="invita-admin-container">
+  <button type="button" onclick="Invita()">Invita</button>
+</div>
+
+<!--FINE MODIFICA-->
+</body>
+
+<!--Includi JQuery-->
+<script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
+<script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
+<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>
+
+<script>
+//Script Javascript qui
+
+toggle = document.querySelectorAll(".toggle")[0];
+nav = document.querySelectorAll("nav")[0];
+toggle_open_text = 'Menu';
+toggle_close_text = 'Close';
+
+toggle.addEventListener('click', function() {
+	nav.classList.toggle('open');
+	
+  if (nav.classList.contains('open')) {
+    toggle.innerHTML = toggle_close_text;
+  } else {
+    toggle.innerHTML = toggle_open_text;
+  }
+}, false);
+
+setTimeout(function(){
+	nav.classList.toggle('open');	
+}, 800);
+
+
+function Disconnessione() {
+
+  fetch('/logout_admin', {
+    method: 'GET',
+    headers: {
+      'Content-Type': 'application/json'
+    },
+    
+  })
+  .then(response => {
+    console.log('Response:', response);
+    if(response.status == 200) {
+      
+      //MODIFICA
+      response.text().then(okMessage => {
+        //alert(okMessage);
+        alert("Logout avvenuto con successo, a breve verrai indirizzato nella pagina di login");
+      })
+
+      //FINE MODIFICA
+      window.location.href = "/loginAdmin";
+    }
+    else {
+      response.text().then(errorMessage => {
+        alert(errorMessage);
+      })
+    }
+  })
+  .catch((error) => {
+    console.error('Error:', error);
+    //Aggiungi qui il codice per gestire gli errori
+  });
+
+
+}
+
+function Invita() {
+
+  fetch('/invite_admins', {
+    method: 'GET',
+    headers: {
+      'Content-Type': 'application/json'
+    },
+    
+  })
+  .then(response => {
+    console.log('Response:', response);
+    if(response.status == 200) {
+      
+      //MODIFICA
+      response.text().then(okMessage => {
+        //alert(okMessage);
+        alert("Verrai reindirizzato alla pagina di invito di nuovi amministratori.");
+      })
+
+      //FINE MODIFICA
+      window.location.href = "/invite_admins";
+    }
+    else {
+      response.text().then(errorMessage => {
+        alert(errorMessage);
+      })
+    }
+  })
+  .catch((error) => {
+    console.error('Error:', error);
+    //Aggiungi qui il codice per gestire gli errori
+  });
+
+
+}
+
+</script>
 </html>
+
diff --git a/T1-G11/applicazione/manvsclass/src/main/resources/templates/login_admin.html b/T1-G11/applicazione/manvsclass/src/main/resources/templates/login_admin.html
index 1aa8cfd..884e0ce 100644
--- a/T1-G11/applicazione/manvsclass/src/main/resources/templates/login_admin.html
+++ b/T1-G11/applicazione/manvsclass/src/main/resources/templates/login_admin.html
@@ -1,4 +1,4 @@
-<!DOCTYPE html>
+<!-- <!DOCTYPE html>
 <html lang="it">
 <head>
 <meta charset="utf-8">
@@ -104,7 +104,25 @@
 a:hover {
     text-decoration:none;
 }
-    </style>
+
+/*MODIFICA (12/02/2024) : Gestione errori compilazione all'interno del form di login*/
+.input-error {
+    border: 2px solid red;      /* Modifica il bordo per evidenziare l'errore */
+    background-color: #ffebeb; /* Modifica il colore di sfondo per evidenziare l'errore */
+}
+
+/* Nel caso in cui il campo username sia vuoto*/
+const usernameInput = document.getElementById('username');
+usernameInput.classList.add('input-error'); // Aggiungi la classe input-error
+
+/* Nel caso in cui il campo password sia vuoto*/
+const passwordInput = document.getElementById('password');
+passwordInput.classList.add('input-error'); // Aggiungi la classe input-error
+
+
+/*FINE MODIFICA*/
+
+</style>
 </head>
 <body>
 <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
@@ -140,46 +158,332 @@ a:hover {
   <div class="mb-3">
     <label for="password" class="form-label">Password</label>
     <input type="password" class="form-control" id="password" aria-describedby="passwordHelp">
-</div>
+  </div>
   
- <div class="col-12">
+  <div class="col-12">
     <button type="button" onclick="Logi()" class="btn btn-primary">Login</button>
   </div>
-</form>
+  </form>
 
   </div>
 
 </div>
+<br>
+</a>
+</div>
+</div>
+<script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
+<script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
+<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>
+<script type="text/javascript"></script>
 
 
+ <script>
 
+// function Logi() {
+//   const username = document.getElementById('username').value;
+//   const password = document.getElementById('password').value;
+ 
+//   const data = {
+//     username: username,
+//     password: password
+//   };
+
+//   fetch('/loginAdmin', {
+//     method: 'POST',
+//     headers: {
+//       'Content-Type': 'application/json'
+//     },
+//     body: JSON.stringify(data)
+//   })
+//   .then(response => response.text())
+//   .then(data => {
+//     console.log('Success:', data);
+// 	if (data === "ok") {
+// 	  window.location.href = "/home_adm";
+// 	} else {
+// 	  alert("Utente non registrato");
+// 	}
+//   })
+//   .catch((error) => {
+//     console.error('Error:', error);
+//     // Aggiungi qui il codice per gestire gli errori
+//   });
+// }
+
+//MODIFICA (11/02/2024) : Controllo form login
+function Logi() {
+  const username = document.getElementById('username').value;
+  const password = document.getElementById('password').value;
+ 
+  const data = {
+    username: username,
+    password: password
+  };
 
+  fetch('/loginAdmin', {
+    method: 'POST',
+    headers: {
+      'Content-Type': 'application/json'
+    },
+    body: JSON.stringify(data)
+  })
+  .then(response => {
+    console.log('Response:', response);
+    if(response.status == 200) {
+      
+      //MODIFICA
+      response.text().then(okMessage => {
+        alert(okMessage);
+      })
+
+      //FINE MODIFICA
+      window.location.href = "/home_adm";
+    }
+    else {
+      response.text().then(errorMessage => {
+        alert(errorMessage);
+      })
+    }
+  })
+  .catch((error) => {
+    //window.location.href = "/loginAdmin";
+    console.error('Error:', error);
+    // Aggiungi qui il codice per gestire gli errori
+  });
+}
 
+//FINE MODIFICA
+</script>
 
-<br>
+</body>
+</html> -->
 
 
-</a>
+<!--MODIFICA: Restyling file-->
+<!DOCTYPE html>
+<html lang="it">
+<head>
+<meta charset="utf-8">
+<title>documents app - Bootdey.com</title>
+<meta name="viewport" content="width=device-width, initial-scale=1">
+<link href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css" rel="stylesheet">
+<style type="text/css">
+  
+/*Il mio stile CSS qui*/
+body{
+  background-color: #f4f7f6;
+  margin-top:20px;
+}
+
+.file_manager .file a:hover .hover,
+.file_manager .file .file-name small{
+  display: block
+}
+
+.file_manager .file {
+  padding: 0 !important
+}
+
+.file_manager .file .icon{
+  text-align: center
+}
+
+.file_manager .file {
+  position: relative;
+  border-radius: .55rem;
+  overflow: hidden
+}
+
+.file_manager .file .image,
+.file_manager .file .icon {
+  max-height: 180px;
+  overflow: hidden;
+  background-size: cover;
+  background-position: top
+}
+
+.file_manager .file .hover {
+  position: absolute;
+  right: 10px;
+  top: 10px;
+  display: none;
+  transition: all 0.2s ease-in-out
+}
+
+.file_manager .file a:hover .hover {
+  transition: all 0.2s ease-in-out
+}
+
+.file_manager .file .icon {
+  padding: 15px 10px;
+  display: table;
+  width: 100%
+}
+
+.file_manager .file .icon i {
+  display: table-cell;
+  font-size: 30px;
+  vertical-align: middle;
+  color: #777;
+  line-height: 100px
+}
+
+.file_manager .file .file-name {
+  padding: 10px;
+  border-top: 1px solid #f7f7f7
+}
+
+.file_manager .file .file-name small .date {
+  float: right
+}
+
+.folder {
+  padding: 20px;
+  display: block;
+  color: #777
+}
+
+@media only screen and (max-width: 992px) {
+  .file_manager .nav-tabs {
+    padding-left: 0;
+    padding-right: 0
+  }
+  .file_manager .nav-tabs .nav-item {
+    display: inline-block
+  }
+}
+
+.card {
+  background: #fff;
+  transition: .5s;
+  border: 0;
+  margin-bottom: 30px;
+  border-radius: .55rem;
+  position: relative;
+  width: 100%;
+  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 10%);
+  
+}
+
+a:hover {
+  text-decoration:none;
+}
+
+/*MODIFICA (12/02/2024) : Gestione errori compilazione all'interno del form di login*/
+.input-error {
+  border: 2px solid red;      /* Modifica il bordo per evidenziare l'errore */
+  background-color: #ffebeb; /* Modifica il colore di sfondo per evidenziare l'errore */
+}
+.input-error::placeholder {
+  color: red;
+}
+
+.login-signup-now {
+    display: block;
+    margin-top: 40px;
+    text-align: center;
+    font-size: 15px;
+    color: rgb(37, 150, 190);
+}
+
+.login-signup-now:hover {
+  text-decoration: underline;
+  color: rgb(63, 176, 241);
+}
+.login-change-psw {
+    display: block;
+    margin-top: 40px;
+    text-align: center;
+    font-size: 15px;
+    color: rgb(37, 150, 190);
+}
+
+.login-change-psw:hover {
+  text-decoration: underline;
+  color: rgb(63, 176, 241);
+}
+
+.login-invitation {
+    display: block;
+    margin-top: 40px;
+    text-align: center;
+    font-size: 15px;
+    color: rgb(37, 150, 190);
+}
+
+.login-invitation:hover {
+  text-decoration: underline;
+  color: rgb(63, 176, 241);
+}
+
+</style>
+</head>
+<body>
+
+<!--Il mio codice HTML qui-->
+<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"/>
+<div id="main-content" class="file_manager">
+<div class="container w-50">
+<div class="card">
+<div class="file">
+<br>
+<center><p class="h3">Login Amministratore</p></center>
+<div class="icon">
+<svg xmlns="http://www.w3.org/2000/svg" width="55" height="55" fill="currentColor" class="bi bi-person-fill-gear text-primary" viewBox="0 0 16 16">
+  <path d="M11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm-9 8c0 1 1 1 1 1h5.256A4.493 4.493 0 0 1 8 12.5a4.49 4.49 0 0 1 1.544-3.393C9.077 9.038 8.564 9 8 9c-5 0-6 3-6 4Zm9.886-3.54c.18-.613 1.048-.613 1.229 0l.043.148a.64.64 0 0 0 .921.382l.136-.074c.561-.306 1.175.308.87.869l-.075.136a.64.64 0 0 0 .382.92l.149.045c.612.18.612 1.048 0 1.229l-.15.043a.64.64 0 0 0-.38.921l.074.136c.305.561-.309 1.175-.87.87l-.136-.075a.64.64 0 0 0-.92.382l-.045.149c-.18.612-1.048.612-1.229 0l-.043-.15a.64.64 0 0 0-.921-.38l-.136.074c-.561.305-1.175-.309-.87-.87l.075-.136a.64.64 0 0 0-.382-.92l-.148-.045c-.613-.18-.613-1.048 0-1.229l.148-.043a.64.64 0 0 0 .382-.921l-.074-.136c-.306-.561.308-1.175.869-.87l.136.075a.64.64 0 0 0 .92-.382l.045-.148ZM14 12.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0Z"/>
+</svg>
+<br><br>
 </div>
+</a>
 </div>
 
+<div class="card-body">
+  <form id="uploadForm">
+  <div class="mb-3">
+    <label for="username" class="form-label">Username</label>
+    <input type="text" class="form-control" id="username" aria-describedby="classNameHelp" autocomplete="username" placeholder="*campo obbligatorio">
+  </div>
+
+  <div class="mb-3">
+    <label for="password" class="form-label">Password</label>
+    <input type="password" class="form-control" id="password" aria-describedby="passwordHelp" autocomplete="current-password" placeholder="*campo obbligatorio">
+  </div>
 
+  <div class="col-12 text-center">    <!--MODIFICA (18/02/2024): Accentramento bottone-->
+    <button type="button" onclick="Logi()" class="btn btn-primary">Login</button>
+  </div>
 
+  <!--MODIFICA (18/02/2024) : Aggiunta bottone Menu + accentramento bottone-->
+  <div class="col-12 mt-3 text-center">         <!-- Aggiungi la classe "mt-3" per un margine top di 3 unità di misura -->
+    <button type="button" onclick="window.location.href='/menu'" class="btn btn-primary">Menu</button>
+</div>
+  </form>
+</div>
 
+<a class="login-signup-now" data-uia="login-signup-now" href="/registraAdmin">Non sei ancora registrato? Registrati.</a>
+<a class="login-change-psw" data-uia="login-change-psw" href="/password_reset_admin">Hai dimenticato la password? </a>
+<a class="login-invitation" data-uia="login-invitation" href="/login_with_invitation">Hai ricevuto un token di invito? </a>
+<!--</div>
+<br>
+</a>
+</div>
+</div>-->
 
+<!--Includi JQuery-->
 <script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
 <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
 <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>
-<script type="text/javascript">
-</script>
-
 
-<script>
+<!--Il mio script Javascript qui-->
+<script type="text/javascript">
 
+//MODIFICA (11/02/2024) : Controllo form login */
 function Logi() {
+
   const username = document.getElementById('username').value;
   const password = document.getElementById('password').value;
- 
+
   const data = {
     username: username,
     password: password
@@ -192,27 +496,31 @@ function Logi() {
     },
     body: JSON.stringify(data)
   })
-  .then(response => response.text())
-  .then(data => {
-    console.log('Success:', data);
-	if (data === "ok") {
-	  window.location.href = "/home_adm";
-	} else {
-	  alert("Utente non registrato");
-	}
+  .then(response => {
+    console.log('Response:', response);
+    if(response.status == 200) {
+      
+      //MODIFICA
+      response.text().then(okMessage => {
+        alert(okMessage);
+      })
+
+      //FINE MODIFICA
+      window.location.href = "/home_adm";
+    }
+    else {
+      response.text().then(errorMessage => {
+        alert(errorMessage);
+      })
+    }
   })
   .catch((error) => {
     console.error('Error:', error);
-    // Aggiungi qui il codice per gestire gli errori
+    //Aggiungi qui il codice per gestire gli errori
   });
+
 }
 </script>
-
-
- 
-
-
-
-
 </body>
-</html>
\ No newline at end of file
+</html>
+<!--FINE MODIFICA-->
\ No newline at end of file
diff --git a/T1-G11/applicazione/manvsclass/src/main/resources/templates/registraAdmin.html b/T1-G11/applicazione/manvsclass/src/main/resources/templates/registraAdmin.html
index fa5e3e8..96c73d6 100644
--- a/T1-G11/applicazione/manvsclass/src/main/resources/templates/registraAdmin.html
+++ b/T1-G11/applicazione/manvsclass/src/main/resources/templates/registraAdmin.html
@@ -8,125 +8,122 @@
 <meta name="viewport" content="width=device-width, initial-scale=1">
 <link href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css" rel="stylesheet">
 <style type="text/css">
-    	body{
+  body{
     background-color: #f4f7f6;
     margin-top:20px;
 }
+
 .file_manager .file a:hover .hover,
 .file_manager .file .file-name small{
-    display: block
+  display: block
 }
+
 .file_manager .file {
-    padding: 0 !important
+  padding: 0 !important
 }
 
 .file_manager .file .icon{
-    text-align: center
+  text-align: center
 }
 
-
 .file_manager .file {
-    position: relative;
-    border-radius: .55rem;
-    overflow: hidden
+  position: relative;
+  border-radius: .55rem;
+  overflow: hidden
 }
 
 .file_manager .file .image,
 .file_manager .file .icon {
-    max-height: 180px;
-    overflow: hidden;
-    background-size: cover;
-    background-position: top
+  max-height: 180px;
+  overflow: hidden;
+  background-size: cover;
+  background-position: top
 }
 
 .file_manager .file .hover {
-    position: absolute;
-    right: 10px;
-    top: 10px;
-    display: none;
-    transition: all 0.2s ease-in-out
+  position: absolute;
+  right: 10px;
+  top: 10px;
+  display: none;
+  transition: all 0.2s ease-in-out
 }
 
 .file_manager .file a:hover .hover {
-    transition: all 0.2s ease-in-out
+  transition: all 0.2s ease-in-out
 }
 
 .file_manager .file .icon {
-    padding: 15px 10px;
-    display: table;
-    width: 100%
+  padding: 15px 10px;
+  display: table;
+  width: 100%
 }
 
 .file_manager .file .icon i {
-    display: table-cell;
-    font-size: 30px;
-    vertical-align: middle;
-    color: #777;
-    line-height: 100px
+  display: table-cell;
+  font-size: 30px;
+  vertical-align: middle;
+  color: #777;
+  line-height: 100px
 }
 
 .file_manager .file .file-name {
-    padding: 10px;
-    border-top: 1px solid #f7f7f7
+  padding: 10px;
+  border-top: 1px solid #f7f7f7
 }
 
 .file_manager .file .file-name small .date {
-    float: right
+  float: right
 }
 
 .folder {
-    padding: 20px;
-    display: block;
-    color: #777
+  padding: 20px;
+  display: block;
+  color: #777
 }
 
 @media only screen and (max-width: 992px) {
     .file_manager .nav-tabs {
-        padding-left: 0;
-        padding-right: 0
+      padding-left: 0;
+      padding-right: 0
     }
     .file_manager .nav-tabs .nav-item {
-        display: inline-block
+      display: inline-block
     }
 }
 
 .card {
-    background: #fff;
-    transition: .5s;
-    border: 0;
-    margin-bottom: 30px;
-    border-radius: .55rem;
-    position: relative;
-    width: 100%;
-    box-shadow: 0 1px 2px 0 rgb(0 0 0 / 10%);
+  background: #fff;
+  transition: .5s;
+  border: 0;
+  margin-bottom: 30px;
+  border-radius: .55rem;
+  position: relative;
+  width: 100%;
+  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 10%);
 }
 
 a:hover {
-    text-decoration:none;
+  text-decoration:none;
 }
-    </style>
+</style>
 </head>
+
 <body>
-<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
 
+<!--Codice HTML qui-->
+<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
 <div id="main-content" class="file_manager">
-
 <div class="container w-50">
-
-
 <div class="card">
 <div class="file">
-
 <br>
 <center><p class="h3">Registrazione Amministratore</p></center>
 <div class="icon">
-
 <svg xmlns="http://www.w3.org/2000/svg" width="55" height="55" fill="currentColor" class="bi bi-person-fill-gear" viewBox="0 0 16 16">
   <path d="M11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm-9 8c0 1 1 1 1 1h5.256A4.493 4.493 0 0 1 8 12.5a4.49 4.49 0 0 1 1.544-3.393C9.077 9.038 8.564 9 8 9c-5 0-6 3-6 4Zm9.886-3.54c.18-.613 1.048-.613 1.229 0l.043.148a.64.64 0 0 0 .921.382l.136-.074c.561-.306 1.175.308.87.869l-.075.136a.64.64 0 0 0 .382.92l.149.045c.612.18.612 1.048 0 1.229l-.15.043a.64.64 0 0 0-.38.921l.074.136c.305.561-.309 1.175-.87.87l-.136-.075a.64.64 0 0 0-.92.382l-.045.149c-.18.612-1.048.612-1.229 0l-.043-.15a.64.64 0 0 0-.921-.38l-.136.074c-.561.305-1.175-.309-.87-.87l.075-.136a.64.64 0 0 0-.382-.92l-.148-.045c-.613-.18-.613-1.048 0-1.229l.148-.043a.64.64 0 0 0 .382-.921l-.074-.136c-.306-.561.308-1.175.869-.87l.136.075a.64.64 0 0 0 .92-.382l.045-.148ZM14 12.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0Z"/>
 </svg>
 <br><br>
 </div>
-
 </a>
 </div>
 
@@ -134,28 +131,31 @@ a:hover {
  <form id="uploadForm">
   <div class="mb-3">
     <label for="nome" class="form-label">Nome</label>
-    <input type="text" class="form-control" id="nome" aria-describedby="classNameHelp">
+    <input type="text" class="form-control" id="nome" aria-describedby="classNameHelp" placeholder="*campo obbligatorio">
   </div>
   
   <div class="mb-3">
     <label for="cognome" class="form-label">Cognome</label>
-    <input type="text" class="form-control" id="cognome" aria-describedby="classNameHelp">
+    <input type="text" class="form-control" id="cognome" aria-describedby="classNameHelp" placeholder="*campo obbligatorio">
   </div>
   
   <div class="mb-3">
-    <label for="username" class="form-label">username</label>
-    <input type="text" class="form-control" id="username" aria-describedby="classNameHelp">
+    <label for="username" class="form-label">Username</label>
+    <input type="text" class="form-control" id="username" aria-describedby="classNameHelp" placeholder="*campo obbligatorio">
   </div>
   
+  <!--MODIFICA (15/02/2024) : Aggiunta campo e-mail-->
+  <div class="mb-3">
+    <label for="email" class="form-label">E-mail</label>
+    <input type="text" class="form-control" id="email" aria-describedby="classNameHelp" placeholder="*campo obbligatorio">
+  </div>
+
+  <!--FINE MODIFICA (15/02/2024)-->
   <div class="mb-3">
     <label for="password" class="form-label">Password</label>
-    <input type="password" class="form-control" id="password" aria-describedby="passwordHelp">
-</div>
-  
-  
-  
+    <input type="password" class="form-control" id="password" aria-describedby="passwordHelp" placeholder="*campo obbligatorio">
+  </div>
   
-
   <div class="col-12">
     <button type="button" onclick="Regi()" class="btn btn-success">Registrati</button>
   </div>
@@ -165,11 +165,6 @@ a:hover {
 
 </div>
 
-
-
-
-
-
 <br>
 
 
@@ -177,19 +172,12 @@ a:hover {
 </div>
 </div>
 
-
-
-
-
 <script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
 <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
 <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>
 <script type="text/javascript">
 </script>
 
-
-
-
 <script>
 
 function Regi() {
@@ -197,6 +185,10 @@ function Regi() {
   const nome = document.getElementById('nome').value;
   const cognome = document.getElementById('cognome').value;
   const username = document.getElementById('username').value;
+
+  //MODIFICA (15/02/2024) : Aggiunta campo email
+  const email = document.getElementById('email').value;
+  //FINE MODIFICA (15/02/2024)
   const password = document.getElementById('password').value;
  
   
@@ -204,9 +196,13 @@ function Regi() {
     nome: nome,
     cognome: cognome,
     username: username,
+    //MODIFICA (15/02/2024) : Aggiunta campo email
+    email: email,
+  //FINE MODIFICA (15/02/2024)
     password: password
   };
 
+  //MODIFICA (11/02/2024) : Gestione feedback form registrazione
    fetch('/registraAdmin', {
     method: 'POST',
     headers: {
@@ -214,23 +210,26 @@ function Regi() {
     },
     body: JSON.stringify(data)
   })
-  .then(response => response.json())
-  .then(data => {
-    console.log('Success:', data);
-	window.location.href = "/home_adm";
-    // Aggiungi qui il codice per gestire la risposta dal server
+  .then(response => {
+    console.log('Response:', response);
+    if(response.status == 200) {
+      window.location.href = "/home_adm";
+    }
+    else {
+      response.text().then(errorMessage => {
+        alert(errorMessage);                  // pop-up che mostra il messaggio di errore restituito dal controller
+      });
+    }
   })
   .catch((error) => {
-  window.location.href = "/registraAdmin";
-    console.error('Error:', error);
-    // Aggiungi qui il codice per gestire gli errori
+   window.location.href = "/registraAdmin";
+   console.error('Error:', error);
+  //Aggiungi qui il codice per gestire gli errori
   });
 }
-</script>
- 
-
-
 
+//FINE MODIFICA
+</script>
 
 </body>
 </html>
\ No newline at end of file
diff --git a/T1-G11/applicazione/manvsclass/src/main/resources/templates/uploadClasseAndTest.html b/T1-G11/applicazione/manvsclass/src/main/resources/templates/uploadClasseAndTest.html
index 4585097..2fb2108 100644
--- a/T1-G11/applicazione/manvsclass/src/main/resources/templates/uploadClasseAndTest.html
+++ b/T1-G11/applicazione/manvsclass/src/main/resources/templates/uploadClasseAndTest.html
@@ -267,7 +267,7 @@ a:hover {
       //Costante che rappresenta il file .zip in input dei test Randoop
       const testInput = document.getElementById('testInput');
       const test = testInput.files[0];
-      //Costante che rappresenta il file .zip in input dei test Randoop
+      //Costante che rappresenta il file .zip in input dei test EvoSuite
       const testInputEvo = document.getElementById('testInputEvo');
       const testEvo = testInputEvo.files[0];
     
diff --git a/T1-G11/applicazione/manvsclass/target/classes/application.properties b/T1-G11/applicazione/manvsclass/target/classes/application.properties
index 771e266..ab38a65 100644
--- a/T1-G11/applicazione/manvsclass/target/classes/application.properties
+++ b/T1-G11/applicazione/manvsclass/target/classes/application.properties
@@ -4,4 +4,12 @@ spring.data.mongodb.port=27017
 spring.datasource.username=root
 spring.datasource.password=osimhen
 spring.servlet.multipart.max-file-size=5MB
-spring.servlet.multipart.max-request-size=5MB
\ No newline at end of file
+spring.servlet.multipart.max-request-size=5MB
+
+spring.mail.host=smtp.gmail.com
+spring.mail.port=587
+spring.mail.username=gamesapp052023@gmail.com
+spring.mail.password=uofjilbsnraczxbk
+spring.mail.properties.mail.smtp.auth=true
+spring.mail.properties.mail.smtp.starttls.enable=true
+spring.main.allow-circular-references=true
\ No newline at end of file
diff --git a/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/ManvsclassApplication.class b/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/ManvsclassApplication.class
index 316b129..d24d5d9 100644
Binary files a/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/ManvsclassApplication.class and b/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/ManvsclassApplication.class differ
diff --git a/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/controller/HomeController.class b/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/controller/HomeController.class
index f3d5730..a5a65c5 100644
Binary files a/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/controller/HomeController.class and b/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/controller/HomeController.class differ
diff --git a/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/Admin.class b/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/Admin.class
index 72d0abf..9400c00 100644
Binary files a/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/Admin.class and b/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/Admin.class differ
diff --git a/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/filesystem/upload/FileUploadResponse.class b/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/filesystem/upload/FileUploadResponse.class
index f67fbc7..f0b147b 100644
Binary files a/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/filesystem/upload/FileUploadResponse.class and b/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/filesystem/upload/FileUploadResponse.class differ
diff --git a/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/filesystem/upload/FileUploadUtil.class b/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/filesystem/upload/FileUploadUtil.class
index 98d382e..29be269 100644
Binary files a/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/filesystem/upload/FileUploadUtil.class and b/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/filesystem/upload/FileUploadUtil.class differ
diff --git a/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/repository/SearchRepositoryImpl.class b/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/repository/SearchRepositoryImpl.class
index 72d0d5e..b99e3d9 100644
Binary files a/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/repository/SearchRepositoryImpl.class and b/T1-G11/applicazione/manvsclass/target/classes/com/groom/manvsclass/model/repository/SearchRepositoryImpl.class differ
diff --git a/T1-G11/applicazione/manvsclass/target/classes/templates/home_adm.html b/T1-G11/applicazione/manvsclass/target/classes/templates/home_adm.html
index b17a4f0..a0b0daa 100644
--- a/T1-G11/applicazione/manvsclass/target/classes/templates/home_adm.html
+++ b/T1-G11/applicazione/manvsclass/target/classes/templates/home_adm.html
@@ -1,4 +1,4 @@
-<!DOCTYPE html>
+<!-- <!DOCTYPE html>
 <html lang="en" >
 <head>
   <meta charset="UTF-8">
@@ -279,4 +279,495 @@ setTimeout(function(){
 }, 800);
 </script>
 
+</html> -->
+
+<!--MODIFICA (12/02/2024): Restyling pagina-->
+
+<!DOCTYPE html>
+<html lang="en" >
+<head>
+<meta charset="UTF-8">
+<meta name="viewport" content="width=device-width, initial-scale=1">
+<title>Home Admin</title>
+<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/meyer-reset/2.0/reset.min.css">
+
+<style type="text/css">
+
+/*Stile CSS qui*/
+
+@import url("https://fonts.googleapis.com/css?family=Alegreya+Sans:800,900");
+html, body {
+  height: 100%;
+}
+
+h1 {
+  font-family: Alegreya Sans, sans-serif;
+	font-size: 100px;
+	text-align: center;
+}
+
+h2 {
+	font-size: 70px;
+	text-align: center;
+}
+
+h3 {
+	font-size: 50px;
+	text-align: center;
+}
+
+body {
+  background: beige;
+  font-family: Alegreya Sans, sans-serif;
+}
+
+nav {
+  display: block;
+  position: fixed;
+  width: 500px;
+  height: 500px;
+  -webkit-user-select: none;
+     -moz-user-select: none;
+      -ms-user-select: none;
+          user-select: none;
+  transform: translate3d(25px, -25px, 0);
+  transition: transform 0.5s cubic-bezier(0.3, 1.4, 0.5, 0.9);
+}
+
+nav.open {
+  transform: translate3d(0, 0, 0);
+}
+
+nav.top-right {
+  top: 0px;
+  right: 0px;
+}
+
+.disc {
+  position: absolute;
+  display: inline-block;
+  text-align: center;
+  cursor: pointer;
+  font: 25px Alegreya Sans, sans-serif;
+  line-height: 40px;
+  padding-top: 10px;
+  border-radius: 250px;
+  transform: scale3d(0.5, 0.5, 0.5) rotate3d(0, 0, 1, 190deg);
+  pointer-events: none;
+  opacity: 0;
+  cursor: pointer;
+  transition: transform 0.5s cubic-bezier(0.3, 1.4, 0.5, 0.9), opacity 0.5s;
+}
+
+.disc div {
+  transform: rotate(180deg);
+}
+
+.open .disc {
+  pointer-events: auto;
+  opacity: 1;
+}
+
+.l1 {
+  top: 0px;
+  left: 0px;
+  right: 0px;
+  bottom: 0px;
+  background: tomato;
+  transition-delay: 0s;
+}
+
+.open .l1 {
+  transition-delay: 0s;
+  transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 190deg);
+  opacity: 1;
+
+}
+.open .l1:hover {
+  /*background: shade(tomato, 90%);*/
+  color: white;
+  transition-delay: 0s;
+  background-color: rgb(255, 22, 84);
+}
+
+.open .l1:active {
+  background: shade(tomato, 50%);
+  color: tomato;
+}
+
+.open .l1.toggle {
+  transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, 10deg);
+}
+
+.l2 {
+  top: 50px;
+  left: 50px;
+  right: 50px;
+  bottom: 50px;
+  background: #ff7a39;
+  transition-delay: 0.1s;
+}
+
+.open .l2 {
+  transition-delay: 0.1s;
+  transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 190deg);
+  opacity: 1;
+}
+
+.open .l2:hover {
+  /*background: shade(#ff7a39, 90%);*/
+  /*color: #ff7a39;*/
+  color: rgb(18, 102, 79);
+  transition-delay: 0s;
+  background-color: rgb(243, 255, 189);
+}
+
+.open .l2:active {
+  background: shade(#ff7a39, 50%);
+  color: #ff7a39;
+}
+
+.open .l2.toggle {
+  transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, 10deg);
+}
+
+
+.l3 {
+  top: 100px;
+  left: 100px;
+  right: 100px;
+  bottom: 100px;
+  background: #ff912b;
+  transition-delay: 0.2s;
+}
+
+.open .l3 {
+  transition-delay: 0.2s;
+  transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 190deg);
+  opacity: 1;
+}
+
+.open .l3:hover {
+  /*background: shade(#ff912b, 90%);*/
+  /*color: #ff912b;*/
+  color: rgb(239, 156, 218);
+  transition-delay: 0s;
+  background-color: rgb(178, 219, 191);
+}
+
+.open .l3:active {
+  background: shade(#ff912b, 50%);
+  color: #ff912b;
+}
+
+.open .l3.toggle {
+  transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, 10deg);
+}
+
+/*Sfruttiamo lo stile già definito (l4) per caratterizzare il logout*/ 
+.l4 {
+  top: 150px;
+  left: 150px;
+  right: 150px;
+  bottom: 150px;
+  background: #ffa91c;
+  transition-delay: 0.3s;
+}
+
+.open .l4 {
+  transition-delay: 0.3s;
+  transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 190deg);
+  opacity: 1;
+}
+
+.open .l4:hover {
+  /*background: shade(#ffa91c, 90%);*/
+  /*color: #ffa91c;*/
+  color: rgb(219, 153, 90);
+  transition-delay: 0s;
+  background-color: rgb(112, 193, 179);
+}
+
+.open .l4:active {
+  background: shade(#ffa91c, 50%);
+  color: #ffa91c;
+}
+
+.open .l4.toggle {
+  transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, 10deg);
+}
+
+.l5 {
+  top: 200px;
+  left: 200px;
+  right: 200px;
+  bottom: 200px;
+  background: #ffc00e;
+  transition-delay: 0.4s;
+}
+
+.open .l5 {
+  transition-delay: 0.4s;
+  transform: scale3d(1, 1, 1) rotate3d(0, 0, 1, 190deg);
+  opacity: 1;
+}
+
+.open .l5:hover {
+  /*background: shade(#ffc00e, 90%);*/
+  /*color: #ffc00e;*/
+  color: rgb(219, 153, 90);
+  transition-delay: 0s;
+  background-color: rgb(36, 123, 160);
+}
+
+.open .l5:active {
+  background: shade(#ffc00e, 50%);
+  color: #ffc00e;
+}
+
+.open .l5.toggle {
+  transform: scale3d(0.9, 0.9, 0.9) rotate3d(0, 0, 1, 10deg);
+}
+
+.toggle {
+  line-height: 100px;
+  padding: 0;
+  width: 100px;
+  background: gold;
+  opacity: 1;
+  transform: none;
+  pointer-events: auto;
+  transition-delay: 0s;
+}
+
+.open .toggle {
+  transform: rotate3d(0, 0, 1, 0deg);
+}
+
+.toggle:hover {
+  /*background: shade(gold, 90%);*/
+  text-decoration: underline;
+  background-color: rgb(68, 222, 231);
+}
+
+.toggle:active {
+  background: shade(gold, 50%);
+  color: rgba(255, 215, 0, 0.5);
+  transform: scale(0.9);
+  transition-duration: 0s;
+}
+
+/*MODIFICA (12/02/2024) : Aggiunta bottone logout*/
+.logout-admin-container {
+    position: fixed;
+    top: 50%;
+    left: 0;
+    transform: translateY(-50%);
+    z-index: 9999; /* Assicura che il bottone sia sopra agli altri elementi */
+}
+
+.logout-admin-container form {
+    position: relative;
+    display: inline-block;
+}
+
+.logout-admin-container button {
+    width: 100px;
+    height: 100px;
+    border-radius: 50%;
+    background-color: blueviolet;
+    color: black;
+    font-size: 25px;
+    border: none;
+    cursor: pointer;
+    transition: background-color 0.3s;
+    font-family: Alegreya Sans, sans-serif;
+    text-align: center;
+}
+
+.logout-admin-container button:hover {
+    background-color: green; /* Color shade of green */
+    font-weight: bold;
+    text-decoration: underline;
+}
+
+/*MODIIFCA (16/02/2024) : Aggiunta bottone di invito amministratori*/
+.invita-admin-container {
+    position: fixed;
+    top: 80%;
+    left: 0;
+    transform: translateY(-50%);
+    z-index: 9999; /* Assicura che il bottone sia sopra agli altri elementi */
+}
+
+.invita-admin-container form {
+    position: relative;
+    display: inline-block;
+}
+
+.invita-admin-container button {
+    width: 150px;
+    height: 150px;
+    border-radius: 50%;
+    background-color: rgb(226, 43, 110);
+    color: black;
+    font-size: 30px;
+    border: none;
+    cursor: pointer;
+    transition: background-color 0.3s;
+    font-family: Alegreya Sans, sans-serif;
+    text-align: center;
+}
+
+.invita-admin-container button:hover {
+    background-color: rgb(128, 75, 0); /* Color shade of green */
+    font-weight: bold;
+    text-decoration: underline;
+}
+/*FINE MODIFICA*/
+
+</style>
+</head>
+
+<body>
+<!--Codice HTML qui-->
+<br>
+<br>
+<h1>Home Admin</h1>
+<h2>Welcome</h2>
+<h3>Choose an option</h3>
+
+<nav class="top-right open">
+	<a href = "/player" class="disc l1">
+		<div>Players</div>
+	</a>
+	<a href = "class" class="disc l2">
+		<div>Classes</div>
+	</a>
+  <!--MODIFICA (15/02/2024): Aggiunta pagina di informazioni riguardo tutti gli amministratori del sistema-->
+	<a href = "info" class="disc l3">
+		<div>Info</div>
+	</a>
+  <!--FINE MODIFICA (15/02/2024)-->
+	<a class="disc l5 toggle">
+		Menu
+	</a>
+</nav>
+<!--MODIFICA (12/02/2024): Aggiunta opzione di disconnessione-->
+  
+<div class="logout-admin-container">
+  <button type="button" onclick="Disconnessione()">Logout</button>
+</div>
+
+<!--MODIFICA (16/02/2024) : Aggiunta bottone di invito-->
+
+<div class="invita-admin-container">
+  <button type="button" onclick="Invita()">Invita</button>
+</div>
+
+<!--FINE MODIFICA-->
+</body>
+
+<!--Includi JQuery-->
+<script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
+<script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
+<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>
+
+<script>
+//Script Javascript qui
+
+toggle = document.querySelectorAll(".toggle")[0];
+nav = document.querySelectorAll("nav")[0];
+toggle_open_text = 'Menu';
+toggle_close_text = 'Close';
+
+toggle.addEventListener('click', function() {
+	nav.classList.toggle('open');
+	
+  if (nav.classList.contains('open')) {
+    toggle.innerHTML = toggle_close_text;
+  } else {
+    toggle.innerHTML = toggle_open_text;
+  }
+}, false);
+
+setTimeout(function(){
+	nav.classList.toggle('open');	
+}, 800);
+
+
+function Disconnessione() {
+
+  fetch('/logout_admin', {
+    method: 'GET',
+    headers: {
+      'Content-Type': 'application/json'
+    },
+    
+  })
+  .then(response => {
+    console.log('Response:', response);
+    if(response.status == 200) {
+      
+      //MODIFICA
+      response.text().then(okMessage => {
+        //alert(okMessage);
+        alert("Logout avvenuto con successo, a breve verrai indirizzato nella pagina di login");
+      })
+
+      //FINE MODIFICA
+      window.location.href = "/loginAdmin";
+    }
+    else {
+      response.text().then(errorMessage => {
+        alert(errorMessage);
+      })
+    }
+  })
+  .catch((error) => {
+    console.error('Error:', error);
+    //Aggiungi qui il codice per gestire gli errori
+  });
+
+
+}
+
+function Invita() {
+
+  fetch('/invite_admins', {
+    method: 'GET',
+    headers: {
+      'Content-Type': 'application/json'
+    },
+    
+  })
+  .then(response => {
+    console.log('Response:', response);
+    if(response.status == 200) {
+      
+      //MODIFICA
+      response.text().then(okMessage => {
+        //alert(okMessage);
+        alert("Verrai reindirizzato alla pagina di invito di nuovi amministratori.");
+      })
+
+      //FINE MODIFICA
+      window.location.href = "/invite_admins";
+    }
+    else {
+      response.text().then(errorMessage => {
+        alert(errorMessage);
+      })
+    }
+  })
+  .catch((error) => {
+    console.error('Error:', error);
+    //Aggiungi qui il codice per gestire gli errori
+  });
+
+
+}
+
+</script>
 </html>
+
diff --git a/T1-G11/applicazione/manvsclass/target/classes/templates/login_admin.html b/T1-G11/applicazione/manvsclass/target/classes/templates/login_admin.html
index 1aa8cfd..884e0ce 100644
--- a/T1-G11/applicazione/manvsclass/target/classes/templates/login_admin.html
+++ b/T1-G11/applicazione/manvsclass/target/classes/templates/login_admin.html
@@ -1,4 +1,4 @@
-<!DOCTYPE html>
+<!-- <!DOCTYPE html>
 <html lang="it">
 <head>
 <meta charset="utf-8">
@@ -104,7 +104,25 @@
 a:hover {
     text-decoration:none;
 }
-    </style>
+
+/*MODIFICA (12/02/2024) : Gestione errori compilazione all'interno del form di login*/
+.input-error {
+    border: 2px solid red;      /* Modifica il bordo per evidenziare l'errore */
+    background-color: #ffebeb; /* Modifica il colore di sfondo per evidenziare l'errore */
+}
+
+/* Nel caso in cui il campo username sia vuoto*/
+const usernameInput = document.getElementById('username');
+usernameInput.classList.add('input-error'); // Aggiungi la classe input-error
+
+/* Nel caso in cui il campo password sia vuoto*/
+const passwordInput = document.getElementById('password');
+passwordInput.classList.add('input-error'); // Aggiungi la classe input-error
+
+
+/*FINE MODIFICA*/
+
+</style>
 </head>
 <body>
 <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
@@ -140,46 +158,332 @@ a:hover {
   <div class="mb-3">
     <label for="password" class="form-label">Password</label>
     <input type="password" class="form-control" id="password" aria-describedby="passwordHelp">
-</div>
+  </div>
   
- <div class="col-12">
+  <div class="col-12">
     <button type="button" onclick="Logi()" class="btn btn-primary">Login</button>
   </div>
-</form>
+  </form>
 
   </div>
 
 </div>
+<br>
+</a>
+</div>
+</div>
+<script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
+<script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
+<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>
+<script type="text/javascript"></script>
 
 
+ <script>
 
+// function Logi() {
+//   const username = document.getElementById('username').value;
+//   const password = document.getElementById('password').value;
+ 
+//   const data = {
+//     username: username,
+//     password: password
+//   };
+
+//   fetch('/loginAdmin', {
+//     method: 'POST',
+//     headers: {
+//       'Content-Type': 'application/json'
+//     },
+//     body: JSON.stringify(data)
+//   })
+//   .then(response => response.text())
+//   .then(data => {
+//     console.log('Success:', data);
+// 	if (data === "ok") {
+// 	  window.location.href = "/home_adm";
+// 	} else {
+// 	  alert("Utente non registrato");
+// 	}
+//   })
+//   .catch((error) => {
+//     console.error('Error:', error);
+//     // Aggiungi qui il codice per gestire gli errori
+//   });
+// }
+
+//MODIFICA (11/02/2024) : Controllo form login
+function Logi() {
+  const username = document.getElementById('username').value;
+  const password = document.getElementById('password').value;
+ 
+  const data = {
+    username: username,
+    password: password
+  };
 
+  fetch('/loginAdmin', {
+    method: 'POST',
+    headers: {
+      'Content-Type': 'application/json'
+    },
+    body: JSON.stringify(data)
+  })
+  .then(response => {
+    console.log('Response:', response);
+    if(response.status == 200) {
+      
+      //MODIFICA
+      response.text().then(okMessage => {
+        alert(okMessage);
+      })
+
+      //FINE MODIFICA
+      window.location.href = "/home_adm";
+    }
+    else {
+      response.text().then(errorMessage => {
+        alert(errorMessage);
+      })
+    }
+  })
+  .catch((error) => {
+    //window.location.href = "/loginAdmin";
+    console.error('Error:', error);
+    // Aggiungi qui il codice per gestire gli errori
+  });
+}
 
+//FINE MODIFICA
+</script>
 
-<br>
+</body>
+</html> -->
 
 
-</a>
+<!--MODIFICA: Restyling file-->
+<!DOCTYPE html>
+<html lang="it">
+<head>
+<meta charset="utf-8">
+<title>documents app - Bootdey.com</title>
+<meta name="viewport" content="width=device-width, initial-scale=1">
+<link href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css" rel="stylesheet">
+<style type="text/css">
+  
+/*Il mio stile CSS qui*/
+body{
+  background-color: #f4f7f6;
+  margin-top:20px;
+}
+
+.file_manager .file a:hover .hover,
+.file_manager .file .file-name small{
+  display: block
+}
+
+.file_manager .file {
+  padding: 0 !important
+}
+
+.file_manager .file .icon{
+  text-align: center
+}
+
+.file_manager .file {
+  position: relative;
+  border-radius: .55rem;
+  overflow: hidden
+}
+
+.file_manager .file .image,
+.file_manager .file .icon {
+  max-height: 180px;
+  overflow: hidden;
+  background-size: cover;
+  background-position: top
+}
+
+.file_manager .file .hover {
+  position: absolute;
+  right: 10px;
+  top: 10px;
+  display: none;
+  transition: all 0.2s ease-in-out
+}
+
+.file_manager .file a:hover .hover {
+  transition: all 0.2s ease-in-out
+}
+
+.file_manager .file .icon {
+  padding: 15px 10px;
+  display: table;
+  width: 100%
+}
+
+.file_manager .file .icon i {
+  display: table-cell;
+  font-size: 30px;
+  vertical-align: middle;
+  color: #777;
+  line-height: 100px
+}
+
+.file_manager .file .file-name {
+  padding: 10px;
+  border-top: 1px solid #f7f7f7
+}
+
+.file_manager .file .file-name small .date {
+  float: right
+}
+
+.folder {
+  padding: 20px;
+  display: block;
+  color: #777
+}
+
+@media only screen and (max-width: 992px) {
+  .file_manager .nav-tabs {
+    padding-left: 0;
+    padding-right: 0
+  }
+  .file_manager .nav-tabs .nav-item {
+    display: inline-block
+  }
+}
+
+.card {
+  background: #fff;
+  transition: .5s;
+  border: 0;
+  margin-bottom: 30px;
+  border-radius: .55rem;
+  position: relative;
+  width: 100%;
+  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 10%);
+  
+}
+
+a:hover {
+  text-decoration:none;
+}
+
+/*MODIFICA (12/02/2024) : Gestione errori compilazione all'interno del form di login*/
+.input-error {
+  border: 2px solid red;      /* Modifica il bordo per evidenziare l'errore */
+  background-color: #ffebeb; /* Modifica il colore di sfondo per evidenziare l'errore */
+}
+.input-error::placeholder {
+  color: red;
+}
+
+.login-signup-now {
+    display: block;
+    margin-top: 40px;
+    text-align: center;
+    font-size: 15px;
+    color: rgb(37, 150, 190);
+}
+
+.login-signup-now:hover {
+  text-decoration: underline;
+  color: rgb(63, 176, 241);
+}
+.login-change-psw {
+    display: block;
+    margin-top: 40px;
+    text-align: center;
+    font-size: 15px;
+    color: rgb(37, 150, 190);
+}
+
+.login-change-psw:hover {
+  text-decoration: underline;
+  color: rgb(63, 176, 241);
+}
+
+.login-invitation {
+    display: block;
+    margin-top: 40px;
+    text-align: center;
+    font-size: 15px;
+    color: rgb(37, 150, 190);
+}
+
+.login-invitation:hover {
+  text-decoration: underline;
+  color: rgb(63, 176, 241);
+}
+
+</style>
+</head>
+<body>
+
+<!--Il mio codice HTML qui-->
+<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"/>
+<div id="main-content" class="file_manager">
+<div class="container w-50">
+<div class="card">
+<div class="file">
+<br>
+<center><p class="h3">Login Amministratore</p></center>
+<div class="icon">
+<svg xmlns="http://www.w3.org/2000/svg" width="55" height="55" fill="currentColor" class="bi bi-person-fill-gear text-primary" viewBox="0 0 16 16">
+  <path d="M11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm-9 8c0 1 1 1 1 1h5.256A4.493 4.493 0 0 1 8 12.5a4.49 4.49 0 0 1 1.544-3.393C9.077 9.038 8.564 9 8 9c-5 0-6 3-6 4Zm9.886-3.54c.18-.613 1.048-.613 1.229 0l.043.148a.64.64 0 0 0 .921.382l.136-.074c.561-.306 1.175.308.87.869l-.075.136a.64.64 0 0 0 .382.92l.149.045c.612.18.612 1.048 0 1.229l-.15.043a.64.64 0 0 0-.38.921l.074.136c.305.561-.309 1.175-.87.87l-.136-.075a.64.64 0 0 0-.92.382l-.045.149c-.18.612-1.048.612-1.229 0l-.043-.15a.64.64 0 0 0-.921-.38l-.136.074c-.561.305-1.175-.309-.87-.87l.075-.136a.64.64 0 0 0-.382-.92l-.148-.045c-.613-.18-.613-1.048 0-1.229l.148-.043a.64.64 0 0 0 .382-.921l-.074-.136c-.306-.561.308-1.175.869-.87l.136.075a.64.64 0 0 0 .92-.382l.045-.148ZM14 12.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0Z"/>
+</svg>
+<br><br>
 </div>
+</a>
 </div>
 
+<div class="card-body">
+  <form id="uploadForm">
+  <div class="mb-3">
+    <label for="username" class="form-label">Username</label>
+    <input type="text" class="form-control" id="username" aria-describedby="classNameHelp" autocomplete="username" placeholder="*campo obbligatorio">
+  </div>
+
+  <div class="mb-3">
+    <label for="password" class="form-label">Password</label>
+    <input type="password" class="form-control" id="password" aria-describedby="passwordHelp" autocomplete="current-password" placeholder="*campo obbligatorio">
+  </div>
 
+  <div class="col-12 text-center">    <!--MODIFICA (18/02/2024): Accentramento bottone-->
+    <button type="button" onclick="Logi()" class="btn btn-primary">Login</button>
+  </div>
 
+  <!--MODIFICA (18/02/2024) : Aggiunta bottone Menu + accentramento bottone-->
+  <div class="col-12 mt-3 text-center">         <!-- Aggiungi la classe "mt-3" per un margine top di 3 unità di misura -->
+    <button type="button" onclick="window.location.href='/menu'" class="btn btn-primary">Menu</button>
+</div>
+  </form>
+</div>
 
+<a class="login-signup-now" data-uia="login-signup-now" href="/registraAdmin">Non sei ancora registrato? Registrati.</a>
+<a class="login-change-psw" data-uia="login-change-psw" href="/password_reset_admin">Hai dimenticato la password? </a>
+<a class="login-invitation" data-uia="login-invitation" href="/login_with_invitation">Hai ricevuto un token di invito? </a>
+<!--</div>
+<br>
+</a>
+</div>
+</div>-->
 
+<!--Includi JQuery-->
 <script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
 <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
 <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>
-<script type="text/javascript">
-</script>
-
 
-<script>
+<!--Il mio script Javascript qui-->
+<script type="text/javascript">
 
+//MODIFICA (11/02/2024) : Controllo form login */
 function Logi() {
+
   const username = document.getElementById('username').value;
   const password = document.getElementById('password').value;
- 
+
   const data = {
     username: username,
     password: password
@@ -192,27 +496,31 @@ function Logi() {
     },
     body: JSON.stringify(data)
   })
-  .then(response => response.text())
-  .then(data => {
-    console.log('Success:', data);
-	if (data === "ok") {
-	  window.location.href = "/home_adm";
-	} else {
-	  alert("Utente non registrato");
-	}
+  .then(response => {
+    console.log('Response:', response);
+    if(response.status == 200) {
+      
+      //MODIFICA
+      response.text().then(okMessage => {
+        alert(okMessage);
+      })
+
+      //FINE MODIFICA
+      window.location.href = "/home_adm";
+    }
+    else {
+      response.text().then(errorMessage => {
+        alert(errorMessage);
+      })
+    }
   })
   .catch((error) => {
     console.error('Error:', error);
-    // Aggiungi qui il codice per gestire gli errori
+    //Aggiungi qui il codice per gestire gli errori
   });
+
 }
 </script>
-
-
- 
-
-
-
-
 </body>
-</html>
\ No newline at end of file
+</html>
+<!--FINE MODIFICA-->
\ No newline at end of file
diff --git a/T1-G11/applicazione/manvsclass/target/classes/templates/registraAdmin.html b/T1-G11/applicazione/manvsclass/target/classes/templates/registraAdmin.html
index fa5e3e8..96c73d6 100644
--- a/T1-G11/applicazione/manvsclass/target/classes/templates/registraAdmin.html
+++ b/T1-G11/applicazione/manvsclass/target/classes/templates/registraAdmin.html
@@ -8,125 +8,122 @@
 <meta name="viewport" content="width=device-width, initial-scale=1">
 <link href="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.min.css" rel="stylesheet">
 <style type="text/css">
-    	body{
+  body{
     background-color: #f4f7f6;
     margin-top:20px;
 }
+
 .file_manager .file a:hover .hover,
 .file_manager .file .file-name small{
-    display: block
+  display: block
 }
+
 .file_manager .file {
-    padding: 0 !important
+  padding: 0 !important
 }
 
 .file_manager .file .icon{
-    text-align: center
+  text-align: center
 }
 
-
 .file_manager .file {
-    position: relative;
-    border-radius: .55rem;
-    overflow: hidden
+  position: relative;
+  border-radius: .55rem;
+  overflow: hidden
 }
 
 .file_manager .file .image,
 .file_manager .file .icon {
-    max-height: 180px;
-    overflow: hidden;
-    background-size: cover;
-    background-position: top
+  max-height: 180px;
+  overflow: hidden;
+  background-size: cover;
+  background-position: top
 }
 
 .file_manager .file .hover {
-    position: absolute;
-    right: 10px;
-    top: 10px;
-    display: none;
-    transition: all 0.2s ease-in-out
+  position: absolute;
+  right: 10px;
+  top: 10px;
+  display: none;
+  transition: all 0.2s ease-in-out
 }
 
 .file_manager .file a:hover .hover {
-    transition: all 0.2s ease-in-out
+  transition: all 0.2s ease-in-out
 }
 
 .file_manager .file .icon {
-    padding: 15px 10px;
-    display: table;
-    width: 100%
+  padding: 15px 10px;
+  display: table;
+  width: 100%
 }
 
 .file_manager .file .icon i {
-    display: table-cell;
-    font-size: 30px;
-    vertical-align: middle;
-    color: #777;
-    line-height: 100px
+  display: table-cell;
+  font-size: 30px;
+  vertical-align: middle;
+  color: #777;
+  line-height: 100px
 }
 
 .file_manager .file .file-name {
-    padding: 10px;
-    border-top: 1px solid #f7f7f7
+  padding: 10px;
+  border-top: 1px solid #f7f7f7
 }
 
 .file_manager .file .file-name small .date {
-    float: right
+  float: right
 }
 
 .folder {
-    padding: 20px;
-    display: block;
-    color: #777
+  padding: 20px;
+  display: block;
+  color: #777
 }
 
 @media only screen and (max-width: 992px) {
     .file_manager .nav-tabs {
-        padding-left: 0;
-        padding-right: 0
+      padding-left: 0;
+      padding-right: 0
     }
     .file_manager .nav-tabs .nav-item {
-        display: inline-block
+      display: inline-block
     }
 }
 
 .card {
-    background: #fff;
-    transition: .5s;
-    border: 0;
-    margin-bottom: 30px;
-    border-radius: .55rem;
-    position: relative;
-    width: 100%;
-    box-shadow: 0 1px 2px 0 rgb(0 0 0 / 10%);
+  background: #fff;
+  transition: .5s;
+  border: 0;
+  margin-bottom: 30px;
+  border-radius: .55rem;
+  position: relative;
+  width: 100%;
+  box-shadow: 0 1px 2px 0 rgb(0 0 0 / 10%);
 }
 
 a:hover {
-    text-decoration:none;
+  text-decoration:none;
 }
-    </style>
+</style>
 </head>
+
 <body>
-<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
 
+<!--Codice HTML qui-->
+<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />
 <div id="main-content" class="file_manager">
-
 <div class="container w-50">
-
-
 <div class="card">
 <div class="file">
-
 <br>
 <center><p class="h3">Registrazione Amministratore</p></center>
 <div class="icon">
-
 <svg xmlns="http://www.w3.org/2000/svg" width="55" height="55" fill="currentColor" class="bi bi-person-fill-gear" viewBox="0 0 16 16">
   <path d="M11 5a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm-9 8c0 1 1 1 1 1h5.256A4.493 4.493 0 0 1 8 12.5a4.49 4.49 0 0 1 1.544-3.393C9.077 9.038 8.564 9 8 9c-5 0-6 3-6 4Zm9.886-3.54c.18-.613 1.048-.613 1.229 0l.043.148a.64.64 0 0 0 .921.382l.136-.074c.561-.306 1.175.308.87.869l-.075.136a.64.64 0 0 0 .382.92l.149.045c.612.18.612 1.048 0 1.229l-.15.043a.64.64 0 0 0-.38.921l.074.136c.305.561-.309 1.175-.87.87l-.136-.075a.64.64 0 0 0-.92.382l-.045.149c-.18.612-1.048.612-1.229 0l-.043-.15a.64.64 0 0 0-.921-.38l-.136.074c-.561.305-1.175-.309-.87-.87l.075-.136a.64.64 0 0 0-.382-.92l-.148-.045c-.613-.18-.613-1.048 0-1.229l.148-.043a.64.64 0 0 0 .382-.921l-.074-.136c-.306-.561.308-1.175.869-.87l.136.075a.64.64 0 0 0 .92-.382l.045-.148ZM14 12.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0Z"/>
 </svg>
 <br><br>
 </div>
-
 </a>
 </div>
 
@@ -134,28 +131,31 @@ a:hover {
  <form id="uploadForm">
   <div class="mb-3">
     <label for="nome" class="form-label">Nome</label>
-    <input type="text" class="form-control" id="nome" aria-describedby="classNameHelp">
+    <input type="text" class="form-control" id="nome" aria-describedby="classNameHelp" placeholder="*campo obbligatorio">
   </div>
   
   <div class="mb-3">
     <label for="cognome" class="form-label">Cognome</label>
-    <input type="text" class="form-control" id="cognome" aria-describedby="classNameHelp">
+    <input type="text" class="form-control" id="cognome" aria-describedby="classNameHelp" placeholder="*campo obbligatorio">
   </div>
   
   <div class="mb-3">
-    <label for="username" class="form-label">username</label>
-    <input type="text" class="form-control" id="username" aria-describedby="classNameHelp">
+    <label for="username" class="form-label">Username</label>
+    <input type="text" class="form-control" id="username" aria-describedby="classNameHelp" placeholder="*campo obbligatorio">
   </div>
   
+  <!--MODIFICA (15/02/2024) : Aggiunta campo e-mail-->
+  <div class="mb-3">
+    <label for="email" class="form-label">E-mail</label>
+    <input type="text" class="form-control" id="email" aria-describedby="classNameHelp" placeholder="*campo obbligatorio">
+  </div>
+
+  <!--FINE MODIFICA (15/02/2024)-->
   <div class="mb-3">
     <label for="password" class="form-label">Password</label>
-    <input type="password" class="form-control" id="password" aria-describedby="passwordHelp">
-</div>
-  
-  
-  
+    <input type="password" class="form-control" id="password" aria-describedby="passwordHelp" placeholder="*campo obbligatorio">
+  </div>
   
-
   <div class="col-12">
     <button type="button" onclick="Regi()" class="btn btn-success">Registrati</button>
   </div>
@@ -165,11 +165,6 @@ a:hover {
 
 </div>
 
-
-
-
-
-
 <br>
 
 
@@ -177,19 +172,12 @@ a:hover {
 </div>
 </div>
 
-
-
-
-
 <script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
 <script src="https://code.jquery.com/jquery-1.10.2.min.js"></script>
 <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/js/bootstrap.bundle.min.js"></script>
 <script type="text/javascript">
 </script>
 
-
-
-
 <script>
 
 function Regi() {
@@ -197,6 +185,10 @@ function Regi() {
   const nome = document.getElementById('nome').value;
   const cognome = document.getElementById('cognome').value;
   const username = document.getElementById('username').value;
+
+  //MODIFICA (15/02/2024) : Aggiunta campo email
+  const email = document.getElementById('email').value;
+  //FINE MODIFICA (15/02/2024)
   const password = document.getElementById('password').value;
  
   
@@ -204,9 +196,13 @@ function Regi() {
     nome: nome,
     cognome: cognome,
     username: username,
+    //MODIFICA (15/02/2024) : Aggiunta campo email
+    email: email,
+  //FINE MODIFICA (15/02/2024)
     password: password
   };
 
+  //MODIFICA (11/02/2024) : Gestione feedback form registrazione
    fetch('/registraAdmin', {
     method: 'POST',
     headers: {
@@ -214,23 +210,26 @@ function Regi() {
     },
     body: JSON.stringify(data)
   })
-  .then(response => response.json())
-  .then(data => {
-    console.log('Success:', data);
-	window.location.href = "/home_adm";
-    // Aggiungi qui il codice per gestire la risposta dal server
+  .then(response => {
+    console.log('Response:', response);
+    if(response.status == 200) {
+      window.location.href = "/home_adm";
+    }
+    else {
+      response.text().then(errorMessage => {
+        alert(errorMessage);                  // pop-up che mostra il messaggio di errore restituito dal controller
+      });
+    }
   })
   .catch((error) => {
-  window.location.href = "/registraAdmin";
-    console.error('Error:', error);
-    // Aggiungi qui il codice per gestire gli errori
+   window.location.href = "/registraAdmin";
+   console.error('Error:', error);
+  //Aggiungi qui il codice per gestire gli errori
   });
 }
-</script>
- 
-
-
 
+//FINE MODIFICA
+</script>
 
 </body>
 </html>
\ No newline at end of file
diff --git a/T1-G11/applicazione/manvsclass/target/classes/templates/uploadClasseAndTest.html b/T1-G11/applicazione/manvsclass/target/classes/templates/uploadClasseAndTest.html
index 4585097..2fb2108 100644
--- a/T1-G11/applicazione/manvsclass/target/classes/templates/uploadClasseAndTest.html
+++ b/T1-G11/applicazione/manvsclass/target/classes/templates/uploadClasseAndTest.html
@@ -267,7 +267,7 @@ a:hover {
       //Costante che rappresenta il file .zip in input dei test Randoop
       const testInput = document.getElementById('testInput');
       const test = testInput.files[0];
-      //Costante che rappresenta il file .zip in input dei test Randoop
+      //Costante che rappresenta il file .zip in input dei test EvoSuite
       const testInputEvo = document.getElementById('testInputEvo');
       const testEvo = testInputEvo.files[0];
     
diff --git a/T1-G11/applicazione/manvsclass/target/manvsclass-0.0.1-SNAPSHOT.jar b/T1-G11/applicazione/manvsclass/target/manvsclass-0.0.1-SNAPSHOT.jar
index 6b94c1f..be7a1c1 100644
Binary files a/T1-G11/applicazione/manvsclass/target/manvsclass-0.0.1-SNAPSHOT.jar and b/T1-G11/applicazione/manvsclass/target/manvsclass-0.0.1-SNAPSHOT.jar differ
diff --git a/T1-G11/applicazione/manvsclass/target/manvsclass-0.0.1-SNAPSHOT.jar.original b/T1-G11/applicazione/manvsclass/target/manvsclass-0.0.1-SNAPSHOT.jar.original
index f71d1f1..11ed4e0 100644
Binary files a/T1-G11/applicazione/manvsclass/target/manvsclass-0.0.1-SNAPSHOT.jar.original and b/T1-G11/applicazione/manvsclass/target/manvsclass-0.0.1-SNAPSHOT.jar.original differ
diff --git a/T1-G11/applicazione/manvsclass/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst b/T1-G11/applicazione/manvsclass/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
index ab59874..639c373 100644
--- a/T1-G11/applicazione/manvsclass/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
+++ b/T1-G11/applicazione/manvsclass/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
@@ -1,16 +1,20 @@
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\filesystem\download\FileDownloadUtil.java
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\repository\SearchRepository.java
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\repository\SearchRepositoryImpl.java
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\ManvsclassApplication.java
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\filesystem\RobotUtil.java
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\controller\HomeController.java
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\repository\OperationRepository.java
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\interaction.java
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\Operation.java
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\repository\InteractionRepository.java
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\Admin.java
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\repository\ClassRepository.java
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\repository\AdminRepository.java
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\filesystem\upload\FileUploadResponse.java
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\filesystem\upload\FileUploadUtil.java
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\ClassUT.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\ManvsclassApplication.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\interaction.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\repository\InteractionRepository.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\filesystem\upload\FileUploadResponse.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\controller\PasswordEncoderAdmin.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\ClassUT.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\filesystem\download\FileDownloadUtil.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\repository\ClassRepository.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\filesystem\RobotUtil.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\controller\HomeController.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\controller\Authentication\AuthenticatedAdmin.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\repository\SearchRepository.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\controller\Authentication\AuthenticatedAdminRepository.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\controller\EmailService.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\repository\SearchRepositoryImpl.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\Admin.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\filesystem\upload\FileUploadUtil.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\Operation.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\repository\AdminRepository.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\main\java\com\groom\manvsclass\model\repository\OperationRepository.java
diff --git a/T1-G11/applicazione/manvsclass/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst b/T1-G11/applicazione/manvsclass/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
index abb280c..b63fb76 100644
--- a/T1-G11/applicazione/manvsclass/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
+++ b/T1-G11/applicazione/manvsclass/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
@@ -1 +1 @@
-C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\src\test\java\com\groom\manvsclass\ManvsclassApplicationTests.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\src\test\java\com\groom\manvsclass\ManvsclassApplicationTests.java
diff --git a/T1-G11/applicazione/manvsclass/target/surefire-reports/TEST-com.groom.manvsclass.ManvsclassApplicationTests.xml b/T1-G11/applicazione/manvsclass/target/surefire-reports/TEST-com.groom.manvsclass.ManvsclassApplicationTests.xml
index fb7563c..dbd0114 100644
--- a/T1-G11/applicazione/manvsclass/target/surefire-reports/TEST-com.groom.manvsclass.ManvsclassApplicationTests.xml
+++ b/T1-G11/applicazione/manvsclass/target/surefire-reports/TEST-com.groom.manvsclass.ManvsclassApplicationTests.xml
@@ -1,10 +1,10 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.groom.manvsclass.ManvsclassApplicationTests" time="3.991" tests="1" errors="0" skipped="0" failures="0">
+<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="com.groom.manvsclass.ManvsclassApplicationTests" time="11.822" tests="1" errors="0" skipped="0" failures="0">
   <properties>
     <property name="java.specification.version" value="21"/>
     <property name="sun.cpu.isalist" value="amd64"/>
     <property name="sun.jnu.encoding" value="Cp1252"/>
-    <property name="java.class.path" value="C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\target\test-classes;C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\target\classes;C:\Users\aurel\.m2\repository\org\jsoup\jsoup\1.16.1\jsoup-1.16.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-data-mongodb\2.7.0\spring-boot-starter-data-mongodb-2.7.0.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.0\spring-boot-starter-2.7.0.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot\2.7.0\spring-boot-2.7.0.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.0\spring-boot-autoconfigure-2.7.0.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.0\spring-boot-starter-logging-2.7.0.jar;C:\Users\aurel\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\aurel\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\aurel\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\aurel\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\aurel\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\aurel\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\aurel\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\aurel\.m2\repository\org\mongodb\mongodb-driver-sync\4.6.0\mongodb-driver-sync-4.6.0.jar;C:\Users\aurel\.m2\repository\org\mongodb\bson\4.6.0\bson-4.6.0.jar;C:\Users\aurel\.m2\repository\org\mongodb\mongodb-driver-core\4.6.0\mongodb-driver-core-4.6.0.jar;C:\Users\aurel\.m2\repository\org\mongodb\bson-record-codec\4.6.0\bson-record-codec-4.6.0.jar;C:\Users\aurel\.m2\repository\org\springframework\data\spring-data-mongodb\3.4.0\spring-data-mongodb-3.4.0.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-tx\5.3.20\spring-tx-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-context\5.3.20\spring-context-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-beans\5.3.20\spring-beans-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-expression\5.3.20\spring-expression-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\data\spring-data-commons\2.7.0\spring-data-commons-2.7.0.jar;C:\Users\aurel\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.0\spring-boot-starter-web-2.7.0.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.0\spring-boot-starter-json-2.7.0.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.0\spring-boot-starter-tomcat-2.7.0.jar;C:\Users\aurel\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.63\tomcat-embed-core-9.0.63.jar;C:\Users\aurel\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.63\tomcat-embed-el-9.0.63.jar;C:\Users\aurel\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.63\tomcat-embed-websocket-9.0.63.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-web\5.3.20\spring-web-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-webmvc\5.3.20\spring-webmvc-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-aop\5.3.20\spring-aop-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.7.0\spring-boot-starter-thymeleaf-2.7.0.jar;C:\Users\aurel\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\aurel\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\aurel\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\aurel\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\aurel\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.7.0\spring-boot-starter-test-2.7.0.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-test\2.7.0\spring-boot-test-2.7.0.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.7.0\spring-boot-test-autoconfigure-2.7.0.jar;C:\Users\aurel\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\aurel\.m2\repository\net\minidev\json-smart\2.4.8\json-smart-2.4.8.jar;C:\Users\aurel\.m2\repository\net\minidev\accessors-smart\2.4.8\accessors-smart-2.4.8.jar;C:\Users\aurel\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;C:\Users\aurel\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\aurel\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\aurel\.m2\repository\org\assertj\assertj-core\3.22.0\assertj-core-3.22.0.jar;C:\Users\aurel\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter\5.8.2\junit-jupiter-5.8.2.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\aurel\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\aurel\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\aurel\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.8.2\junit-jupiter-params-5.8.2.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.2\junit-jupiter-engine-5.8.2.jar;C:\Users\aurel\.m2\repository\org\junit\platform\junit-platform-engine\1.8.2\junit-platform-engine-1.8.2.jar;C:\Users\aurel\.m2\repository\org\mockito\mockito-core\4.5.1\mockito-core-4.5.1.jar;C:\Users\aurel\.m2\repository\net\bytebuddy\byte-buddy\1.12.10\byte-buddy-1.12.10.jar;C:\Users\aurel\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.10\byte-buddy-agent-1.12.10.jar;C:\Users\aurel\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\aurel\.m2\repository\org\mockito\mockito-junit-jupiter\4.5.1\mockito-junit-jupiter-4.5.1.jar;C:\Users\aurel\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\aurel\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-core\5.3.20\spring-core-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-jcl\5.3.20\spring-jcl-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-test\5.3.20\spring-test-5.3.20.jar;C:\Users\aurel\.m2\repository\org\xmlunit\xmlunit-core\2.9.0\xmlunit-core-2.9.0.jar;C:\Users\aurel\.m2\repository\org\json\json\20230227\json-20230227.jar;C:\Users\aurel\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\aurel\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\aurel\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\aurel\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\aurel\.m2\repository\org\mongodb\mongo-java-driver\3.8.2\mongo-java-driver-3.8.2.jar;"/>
+    <property name="java.class.path" value="C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\target\test-classes;C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\target\classes;C:\Users\Cater\.m2\repository\org\jsoup\jsoup\1.16.1\jsoup-1.16.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-data-mongodb\2.7.0\spring-boot-starter-data-mongodb-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.0\spring-boot-starter-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot\2.7.0\spring-boot-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.0\spring-boot-autoconfigure-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.0\spring-boot-starter-logging-2.7.0.jar;C:\Users\Cater\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\Cater\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\Cater\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\Cater\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\Cater\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Cater\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Cater\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\Cater\.m2\repository\org\mongodb\mongodb-driver-sync\4.6.0\mongodb-driver-sync-4.6.0.jar;C:\Users\Cater\.m2\repository\org\mongodb\bson\4.6.0\bson-4.6.0.jar;C:\Users\Cater\.m2\repository\org\mongodb\mongodb-driver-core\4.6.0\mongodb-driver-core-4.6.0.jar;C:\Users\Cater\.m2\repository\org\mongodb\bson-record-codec\4.6.0\bson-record-codec-4.6.0.jar;C:\Users\Cater\.m2\repository\org\springframework\data\spring-data-mongodb\3.4.0\spring-data-mongodb-3.4.0.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-tx\5.3.20\spring-tx-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\data\spring-data-commons\2.7.0\spring-data-commons-2.7.0.jar;C:\Users\Cater\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.0\spring-boot-starter-web-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.0\spring-boot-starter-json-2.7.0.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.0\spring-boot-starter-tomcat-2.7.0.jar;C:\Users\Cater\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.63\tomcat-embed-core-9.0.63.jar;C:\Users\Cater\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.63\tomcat-embed-el-9.0.63.jar;C:\Users\Cater\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.63\tomcat-embed-websocket-9.0.63.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-web\5.3.20\spring-web-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-webmvc\5.3.20\spring-webmvc-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.7.0\spring-boot-starter-thymeleaf-2.7.0.jar;C:\Users\Cater\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Cater\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Cater\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Cater\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Cater\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.7.0\spring-boot-starter-test-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-test\2.7.0\spring-boot-test-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.7.0\spring-boot-test-autoconfigure-2.7.0.jar;C:\Users\Cater\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\Cater\.m2\repository\net\minidev\json-smart\2.4.8\json-smart-2.4.8.jar;C:\Users\Cater\.m2\repository\net\minidev\accessors-smart\2.4.8\accessors-smart-2.4.8.jar;C:\Users\Cater\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;C:\Users\Cater\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Cater\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Cater\.m2\repository\org\assertj\assertj-core\3.22.0\assertj-core-3.22.0.jar;C:\Users\Cater\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter\5.8.2\junit-jupiter-5.8.2.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\Cater\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Cater\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\Cater\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.8.2\junit-jupiter-params-5.8.2.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.2\junit-jupiter-engine-5.8.2.jar;C:\Users\Cater\.m2\repository\org\junit\platform\junit-platform-engine\1.8.2\junit-platform-engine-1.8.2.jar;C:\Users\Cater\.m2\repository\org\mockito\mockito-core\4.5.1\mockito-core-4.5.1.jar;C:\Users\Cater\.m2\repository\net\bytebuddy\byte-buddy\1.12.10\byte-buddy-1.12.10.jar;C:\Users\Cater\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.10\byte-buddy-agent-1.12.10.jar;C:\Users\Cater\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\Cater\.m2\repository\org\mockito\mockito-junit-jupiter\4.5.1\mockito-junit-jupiter-4.5.1.jar;C:\Users\Cater\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\Cater\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-core\5.3.20\spring-core-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-jcl\5.3.20\spring-jcl-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-test\5.3.20\spring-test-5.3.20.jar;C:\Users\Cater\.m2\repository\org\xmlunit\xmlunit-core\2.9.0\xmlunit-core-2.9.0.jar;C:\Users\Cater\.m2\repository\org\json\json\20230227\json-20230227.jar;C:\Users\Cater\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\Cater\.m2\repository\io\jsonwebtoken\jjwt\0.9.1\jjwt-0.9.1.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\Cater\.m2\repository\org\springframework\security\spring-security-core\6.1.0\spring-security-core-6.1.0.jar;C:\Users\Cater\.m2\repository\org\springframework\security\spring-security-crypto\5.7.1\spring-security-crypto-5.7.1.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-aop\5.3.20\spring-aop-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-beans\5.3.20\spring-beans-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-context\5.3.20\spring-context-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-expression\5.3.20\spring-expression-5.3.20.jar;C:\Users\Cater\.m2\repository\io\micrometer\micrometer-observation\1.10.7\micrometer-observation-1.10.7.jar;C:\Users\Cater\.m2\repository\io\micrometer\micrometer-commons\1.10.7\micrometer-commons-1.10.7.jar;C:\Users\Cater\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-mail\2.7.0\spring-boot-starter-mail-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-context-support\5.3.20\spring-context-support-5.3.20.jar;C:\Users\Cater\.m2\repository\com\sun\mail\jakarta.mail\1.6.7\jakarta.mail-1.6.7.jar;C:\Users\Cater\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Cater\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\Cater\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\Cater\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\Cater\.m2\repository\org\mongodb\mongo-java-driver\3.8.2\mongo-java-driver-3.8.2.jar;"/>
     <property name="java.vm.vendor" value="Oracle Corporation"/>
     <property name="sun.arch.data.model" value="64"/>
     <property name="user.variant" value=""/>
@@ -15,48 +15,48 @@
     <property name="sun.java.launcher" value="SUN_STANDARD"/>
     <property name="user.country" value="IT"/>
     <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-21\bin"/>
-    <property name="sun.java.command" value="C:\Users\aurel\AppData\Local\Temp\surefire6339619846520382903\surefirebooter5509671519258947657.jar C:\Users\aurel\AppData\Local\Temp\surefire6339619846520382903 2024-01-18T01-24-23_766-jvmRun1 surefire15697053671939188585tmp surefire_017942550441788615025tmp"/>
+    <property name="sun.java.command" value="C:\Users\Cater\AppData\Local\Temp\surefire14646500639702408057\surefirebooter10608773421516110108.jar C:\Users\Cater\AppData\Local\Temp\surefire14646500639702408057 2024-03-01T13-40-27_617-jvmRun1 surefire9443515384921807270tmp surefire_05672664903314132014tmp"/>
     <property name="jdk.debug" value="release"/>
-    <property name="surefire.test.class.path" value="C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\target\test-classes;C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass\target\classes;C:\Users\aurel\.m2\repository\org\jsoup\jsoup\1.16.1\jsoup-1.16.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-data-mongodb\2.7.0\spring-boot-starter-data-mongodb-2.7.0.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.0\spring-boot-starter-2.7.0.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot\2.7.0\spring-boot-2.7.0.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.0\spring-boot-autoconfigure-2.7.0.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.0\spring-boot-starter-logging-2.7.0.jar;C:\Users\aurel\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\aurel\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\aurel\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\aurel\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\aurel\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\aurel\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\aurel\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\aurel\.m2\repository\org\mongodb\mongodb-driver-sync\4.6.0\mongodb-driver-sync-4.6.0.jar;C:\Users\aurel\.m2\repository\org\mongodb\bson\4.6.0\bson-4.6.0.jar;C:\Users\aurel\.m2\repository\org\mongodb\mongodb-driver-core\4.6.0\mongodb-driver-core-4.6.0.jar;C:\Users\aurel\.m2\repository\org\mongodb\bson-record-codec\4.6.0\bson-record-codec-4.6.0.jar;C:\Users\aurel\.m2\repository\org\springframework\data\spring-data-mongodb\3.4.0\spring-data-mongodb-3.4.0.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-tx\5.3.20\spring-tx-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-context\5.3.20\spring-context-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-beans\5.3.20\spring-beans-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-expression\5.3.20\spring-expression-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\data\spring-data-commons\2.7.0\spring-data-commons-2.7.0.jar;C:\Users\aurel\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.0\spring-boot-starter-web-2.7.0.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.0\spring-boot-starter-json-2.7.0.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.0\spring-boot-starter-tomcat-2.7.0.jar;C:\Users\aurel\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.63\tomcat-embed-core-9.0.63.jar;C:\Users\aurel\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.63\tomcat-embed-el-9.0.63.jar;C:\Users\aurel\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.63\tomcat-embed-websocket-9.0.63.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-web\5.3.20\spring-web-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-webmvc\5.3.20\spring-webmvc-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-aop\5.3.20\spring-aop-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.7.0\spring-boot-starter-thymeleaf-2.7.0.jar;C:\Users\aurel\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\aurel\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\aurel\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\aurel\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\aurel\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.7.0\spring-boot-starter-test-2.7.0.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-test\2.7.0\spring-boot-test-2.7.0.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.7.0\spring-boot-test-autoconfigure-2.7.0.jar;C:\Users\aurel\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\aurel\.m2\repository\net\minidev\json-smart\2.4.8\json-smart-2.4.8.jar;C:\Users\aurel\.m2\repository\net\minidev\accessors-smart\2.4.8\accessors-smart-2.4.8.jar;C:\Users\aurel\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;C:\Users\aurel\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\aurel\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\aurel\.m2\repository\org\assertj\assertj-core\3.22.0\assertj-core-3.22.0.jar;C:\Users\aurel\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter\5.8.2\junit-jupiter-5.8.2.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\aurel\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\aurel\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\aurel\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.8.2\junit-jupiter-params-5.8.2.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.2\junit-jupiter-engine-5.8.2.jar;C:\Users\aurel\.m2\repository\org\junit\platform\junit-platform-engine\1.8.2\junit-platform-engine-1.8.2.jar;C:\Users\aurel\.m2\repository\org\mockito\mockito-core\4.5.1\mockito-core-4.5.1.jar;C:\Users\aurel\.m2\repository\net\bytebuddy\byte-buddy\1.12.10\byte-buddy-1.12.10.jar;C:\Users\aurel\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.10\byte-buddy-agent-1.12.10.jar;C:\Users\aurel\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\aurel\.m2\repository\org\mockito\mockito-junit-jupiter\4.5.1\mockito-junit-jupiter-4.5.1.jar;C:\Users\aurel\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\aurel\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-core\5.3.20\spring-core-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-jcl\5.3.20\spring-jcl-5.3.20.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-test\5.3.20\spring-test-5.3.20.jar;C:\Users\aurel\.m2\repository\org\xmlunit\xmlunit-core\2.9.0\xmlunit-core-2.9.0.jar;C:\Users\aurel\.m2\repository\org\json\json\20230227\json-20230227.jar;C:\Users\aurel\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\aurel\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\aurel\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\aurel\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\aurel\.m2\repository\org\mongodb\mongo-java-driver\3.8.2\mongo-java-driver-3.8.2.jar;"/>
+    <property name="surefire.test.class.path" value="C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\target\test-classes;C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass\target\classes;C:\Users\Cater\.m2\repository\org\jsoup\jsoup\1.16.1\jsoup-1.16.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-data-mongodb\2.7.0\spring-boot-starter-data-mongodb-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter\2.7.0\spring-boot-starter-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot\2.7.0\spring-boot-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\2.7.0\spring-boot-autoconfigure-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-logging\2.7.0\spring-boot-starter-logging-2.7.0.jar;C:\Users\Cater\.m2\repository\ch\qos\logback\logback-classic\1.2.11\logback-classic-1.2.11.jar;C:\Users\Cater\.m2\repository\ch\qos\logback\logback-core\1.2.11\logback-core-1.2.11.jar;C:\Users\Cater\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.17.2\log4j-to-slf4j-2.17.2.jar;C:\Users\Cater\.m2\repository\org\apache\logging\log4j\log4j-api\2.17.2\log4j-api-2.17.2.jar;C:\Users\Cater\.m2\repository\org\slf4j\jul-to-slf4j\1.7.36\jul-to-slf4j-1.7.36.jar;C:\Users\Cater\.m2\repository\jakarta\annotation\jakarta.annotation-api\1.3.5\jakarta.annotation-api-1.3.5.jar;C:\Users\Cater\.m2\repository\org\yaml\snakeyaml\1.30\snakeyaml-1.30.jar;C:\Users\Cater\.m2\repository\org\mongodb\mongodb-driver-sync\4.6.0\mongodb-driver-sync-4.6.0.jar;C:\Users\Cater\.m2\repository\org\mongodb\bson\4.6.0\bson-4.6.0.jar;C:\Users\Cater\.m2\repository\org\mongodb\mongodb-driver-core\4.6.0\mongodb-driver-core-4.6.0.jar;C:\Users\Cater\.m2\repository\org\mongodb\bson-record-codec\4.6.0\bson-record-codec-4.6.0.jar;C:\Users\Cater\.m2\repository\org\springframework\data\spring-data-mongodb\3.4.0\spring-data-mongodb-3.4.0.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-tx\5.3.20\spring-tx-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\data\spring-data-commons\2.7.0\spring-data-commons-2.7.0.jar;C:\Users\Cater\.m2\repository\org\slf4j\slf4j-api\1.7.36\slf4j-api-1.7.36.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-web\2.7.0\spring-boot-starter-web-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-json\2.7.0\spring-boot-starter-json-2.7.0.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.13.3\jackson-datatype-jdk8-2.13.3.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.13.3\jackson-datatype-jsr310-2.13.3.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.13.3\jackson-module-parameter-names-2.13.3.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\2.7.0\spring-boot-starter-tomcat-2.7.0.jar;C:\Users\Cater\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\9.0.63\tomcat-embed-core-9.0.63.jar;C:\Users\Cater\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\9.0.63\tomcat-embed-el-9.0.63.jar;C:\Users\Cater\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\9.0.63\tomcat-embed-websocket-9.0.63.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-web\5.3.20\spring-web-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-webmvc\5.3.20\spring-webmvc-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\2.7.0\spring-boot-starter-thymeleaf-2.7.0.jar;C:\Users\Cater\.m2\repository\org\thymeleaf\thymeleaf-spring5\3.0.15.RELEASE\thymeleaf-spring5-3.0.15.RELEASE.jar;C:\Users\Cater\.m2\repository\org\thymeleaf\thymeleaf\3.0.15.RELEASE\thymeleaf-3.0.15.RELEASE.jar;C:\Users\Cater\.m2\repository\org\attoparser\attoparser\2.0.5.RELEASE\attoparser-2.0.5.RELEASE.jar;C:\Users\Cater\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Cater\.m2\repository\org\thymeleaf\extras\thymeleaf-extras-java8time\3.0.4.RELEASE\thymeleaf-extras-java8time-3.0.4.RELEASE.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-test\2.7.0\spring-boot-starter-test-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-test\2.7.0\spring-boot-test-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\2.7.0\spring-boot-test-autoconfigure-2.7.0.jar;C:\Users\Cater\.m2\repository\com\jayway\jsonpath\json-path\2.7.0\json-path-2.7.0.jar;C:\Users\Cater\.m2\repository\net\minidev\json-smart\2.4.8\json-smart-2.4.8.jar;C:\Users\Cater\.m2\repository\net\minidev\accessors-smart\2.4.8\accessors-smart-2.4.8.jar;C:\Users\Cater\.m2\repository\org\ow2\asm\asm\9.1\asm-9.1.jar;C:\Users\Cater\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\2.3.3\jakarta.xml.bind-api-2.3.3.jar;C:\Users\Cater\.m2\repository\jakarta\activation\jakarta.activation-api\1.2.2\jakarta.activation-api-1.2.2.jar;C:\Users\Cater\.m2\repository\org\assertj\assertj-core\3.22.0\assertj-core-3.22.0.jar;C:\Users\Cater\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter\5.8.2\junit-jupiter-5.8.2.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\Cater\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Cater\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\Cater\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.8.2\junit-jupiter-params-5.8.2.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.8.2\junit-jupiter-engine-5.8.2.jar;C:\Users\Cater\.m2\repository\org\junit\platform\junit-platform-engine\1.8.2\junit-platform-engine-1.8.2.jar;C:\Users\Cater\.m2\repository\org\mockito\mockito-core\4.5.1\mockito-core-4.5.1.jar;C:\Users\Cater\.m2\repository\net\bytebuddy\byte-buddy\1.12.10\byte-buddy-1.12.10.jar;C:\Users\Cater\.m2\repository\net\bytebuddy\byte-buddy-agent\1.12.10\byte-buddy-agent-1.12.10.jar;C:\Users\Cater\.m2\repository\org\objenesis\objenesis\3.2\objenesis-3.2.jar;C:\Users\Cater\.m2\repository\org\mockito\mockito-junit-jupiter\4.5.1\mockito-junit-jupiter-4.5.1.jar;C:\Users\Cater\.m2\repository\org\skyscreamer\jsonassert\1.5.0\jsonassert-1.5.0.jar;C:\Users\Cater\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-core\5.3.20\spring-core-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-jcl\5.3.20\spring-jcl-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-test\5.3.20\spring-test-5.3.20.jar;C:\Users\Cater\.m2\repository\org\xmlunit\xmlunit-core\2.9.0\xmlunit-core-2.9.0.jar;C:\Users\Cater\.m2\repository\org\json\json\20230227\json-20230227.jar;C:\Users\Cater\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\Cater\.m2\repository\io\jsonwebtoken\jjwt\0.9.1\jjwt-0.9.1.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.13.3\jackson-databind-2.13.3.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.13.3\jackson-annotations-2.13.3.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.13.3\jackson-core-2.13.3.jar;C:\Users\Cater\.m2\repository\org\springframework\security\spring-security-core\6.1.0\spring-security-core-6.1.0.jar;C:\Users\Cater\.m2\repository\org\springframework\security\spring-security-crypto\5.7.1\spring-security-crypto-5.7.1.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-aop\5.3.20\spring-aop-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-beans\5.3.20\spring-beans-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-context\5.3.20\spring-context-5.3.20.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-expression\5.3.20\spring-expression-5.3.20.jar;C:\Users\Cater\.m2\repository\io\micrometer\micrometer-observation\1.10.7\micrometer-observation-1.10.7.jar;C:\Users\Cater\.m2\repository\io\micrometer\micrometer-commons\1.10.7\micrometer-commons-1.10.7.jar;C:\Users\Cater\.m2\repository\org\projectlombok\lombok\1.18.30\lombok-1.18.30.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-mail\2.7.0\spring-boot-starter-mail-2.7.0.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-context-support\5.3.20\spring-context-support-5.3.20.jar;C:\Users\Cater\.m2\repository\com\sun\mail\jakarta.mail\1.6.7\jakarta.mail-1.6.7.jar;C:\Users\Cater\.m2\repository\com\sun\activation\jakarta.activation\1.2.2\jakarta.activation-1.2.2.jar;C:\Users\Cater\.m2\repository\org\apache\httpcomponents\httpclient\4.5.13\httpclient-4.5.13.jar;C:\Users\Cater\.m2\repository\org\apache\httpcomponents\httpcore\4.4.15\httpcore-4.4.15.jar;C:\Users\Cater\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\Cater\.m2\repository\org\mongodb\mongo-java-driver\3.8.2\mongo-java-driver-3.8.2.jar;"/>
     <property name="sun.cpu.endian" value="little"/>
-    <property name="user.home" value="C:\Users\aurel"/>
+    <property name="user.home" value="C:\Users\Cater"/>
     <property name="user.language" value="it"/>
     <property name="java.specification.vendor" value="Oracle Corporation"/>
-    <property name="java.version.date" value="2023-10-17"/>
+    <property name="java.version.date" value="2024-01-16"/>
     <property name="java.home" value="C:\Program Files\Java\jdk-21"/>
     <property name="file.separator" value="\"/>
-    <property name="basedir" value="C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass"/>
+    <property name="basedir" value="C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass"/>
     <property name="java.vm.compressedOopsMode" value="32-bit"/>
     <property name="line.separator" value="&#10;"/>
     <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
     <property name="java.specification.name" value="Java Platform API Specification"/>
-    <property name="surefire.real.class.path" value="C:\Users\aurel\AppData\Local\Temp\surefire6339619846520382903\surefirebooter5509671519258947657.jar"/>
+    <property name="surefire.real.class.path" value="C:\Users\Cater\AppData\Local\Temp\surefire14646500639702408057\surefirebooter10608773421516110108.jar"/>
     <property name="user.script" value=""/>
     <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
-    <property name="java.runtime.version" value="21.0.1+12-LTS-29"/>
-    <property name="user.name" value="aurel"/>
+    <property name="java.runtime.version" value="21.0.2+13-LTS-58"/>
+    <property name="user.name" value="Cater"/>
     <property name="stdout.encoding" value="Cp1252"/>
     <property name="path.separator" value=";"/>
     <property name="os.version" value="10.0"/>
     <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
     <property name="file.encoding" value="UTF-8"/>
     <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
-    <property name="localRepository" value="C:\Users\aurel\.m2\repository"/>
+    <property name="localRepository" value="C:\Users\Cater\.m2\repository"/>
     <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
-    <property name="java.io.tmpdir" value="C:\Users\aurel\AppData\Local\Temp\"/>
-    <property name="java.version" value="21.0.1"/>
-    <property name="user.dir" value="C:\Users\aurel\A10-2024\T1-G11\applicazione\manvsclass"/>
+    <property name="java.io.tmpdir" value="C:\Users\Cater\AppData\Local\Temp\"/>
+    <property name="java.version" value="21.0.2"/>
+    <property name="user.dir" value="C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T1-G11\applicazione\manvsclass"/>
     <property name="os.arch" value="amd64"/>
     <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
     <property name="sun.os.patch.level" value=""/>
     <property name="native.encoding" value="Cp1252"/>
-    <property name="java.library.path" value="C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Microsoft SDKs\Azure\CLI2\wbin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\MATLAB\R2022b\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Ghdl\Bin;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\apache-maven-3.9.5\bin;C:\Users\aurel\AppData\Local\Programs\Microsoft VS Code\bin;."/>
+    <property name="java.library.path" value="C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Git\cmd;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\apache-maven-3.9.6-bin\apache-maven-3.9.6\bin;C:\Users\Cater\AppData\Local\Programs\Python\Python312\Scripts\;C:\Users\Cater\AppData\Local\Programs\Python\Python312\;C:\Users\Cater\AppData\Local\Programs\Python\Launcher\;C:\Users\Cater\AppData\Local\Microsoft\WindowsApps;;C:\Users\Cater\AppData\Local\Programs\Microsoft VS Code\bin;."/>
     <property name="java.vm.info" value="mixed mode, sharing"/>
     <property name="stderr.encoding" value="Cp1252"/>
     <property name="java.vendor" value="Oracle Corporation"/>
-    <property name="java.vm.version" value="21.0.1+12-LTS-29"/>
+    <property name="java.vm.version" value="21.0.2+13-LTS-58"/>
     <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
     <property name="java.class.version" value="65.0"/>
   </properties>
-  <testcase name="contextLoads" classname="com.groom.manvsclass.ManvsclassApplicationTests" time="0.38"/>
+  <testcase name="contextLoads" classname="com.groom.manvsclass.ManvsclassApplicationTests" time="0.949"/>
 </testsuite>
\ No newline at end of file
diff --git a/T1-G11/applicazione/manvsclass/target/surefire-reports/com.groom.manvsclass.ManvsclassApplicationTests.txt b/T1-G11/applicazione/manvsclass/target/surefire-reports/com.groom.manvsclass.ManvsclassApplicationTests.txt
index 8786df9..b7dfc9f 100644
--- a/T1-G11/applicazione/manvsclass/target/surefire-reports/com.groom.manvsclass.ManvsclassApplicationTests.txt
+++ b/T1-G11/applicazione/manvsclass/target/surefire-reports/com.groom.manvsclass.ManvsclassApplicationTests.txt
@@ -1,4 +1,4 @@
 -------------------------------------------------------------------------------
 Test set: com.groom.manvsclass.ManvsclassApplicationTests
 -------------------------------------------------------------------------------
-Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.991 s - in com.groom.manvsclass.ManvsclassApplicationTests
+Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 11.822 s - in com.groom.manvsclass.ManvsclassApplicationTests
diff --git a/T23-G1/pom.xml b/T23-G1/pom.xml
index 4f6c496..b32fd03 100644
--- a/T23-G1/pom.xml
+++ b/T23-G1/pom.xml
@@ -97,6 +97,16 @@
             <groupId>org.springframework.boot</groupId>
             <artifactId>spring-boot-starter-mail</artifactId>
         </dependency>
+
+        <!--MODIFICA (05/02/2024) : Aggiunta social login tramite OAuth2, aggiunta dipendenze Maven-->
+        
+        <!-- <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-oauth2-client</artifactId>
+        </dependency> -->
+       
+        <!--FINE MODIFICA-->
+
     </dependencies>
 
     <build>
diff --git a/T23-G1/src/main/java/com/example/db_setup/Controller.java b/T23-G1/src/main/java/com/example/db_setup/Controller.java
index c0827c3..09dcd6f 100644
--- a/T23-G1/src/main/java/com/example/db_setup/Controller.java
+++ b/T23-G1/src/main/java/com/example/db_setup/Controller.java
@@ -38,6 +38,7 @@ import org.springframework.web.bind.annotation.PostMapping;
 import org.springframework.web.bind.annotation.CookieValue;
 import org.springframework.web.bind.annotation.GetMapping;
 import org.springframework.web.bind.annotation.RequestParam;
+import org.springframework.web.bind.annotation.ResponseBody;
 import org.springframework.web.bind.annotation.RestController;
 import org.springframework.web.client.RestTemplate;
 import org.springframework.web.servlet.ModelAndView;
@@ -45,6 +46,10 @@ import org.springframework.web.servlet.ModelAndView;
 import com.example.db_setup.Authentication.AuthenticatedUser;
 import com.example.db_setup.Authentication.AuthenticatedUserRepository;
 
+//MODIFICA (Deserializzazione risposta JSON)
+import com.fasterxml.jackson.databind.ObjectMapper;
+//FINE MODIFICA
+
 @RestController
 public class Controller {
 
@@ -74,8 +79,16 @@ public class Controller {
     @Autowired
     private RestTemplate restTemplate;
 
+    //MODIFICA (10/2/2024) : gestione dei token di accesso
+    private String app_token = "689086720098849|_rIns2JmCHSjLbj2in8O7M9CAWw";
+    //FINE MODIFICA
+
 
-    String regex = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{3,14}$"; // maiuscola, minuscola e numero
+    //String regex = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{3,14}$"; // maiuscola, minuscola e numero
+
+    //REGEX -- Modifica (03/02/2024) : La psw deve contenere da 8 a 16 caratteri, di cui almeno un carattere minuscolo,
+    //                                 maiuscolo, un numero ed un carattere speciale
+    String regex = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[\\W_]).{8,16}$"; // maiuscola, minuscola, numero e chr. speciale
     Pattern p = Pattern.compile(regex);
 
 
@@ -94,19 +107,25 @@ public class Controller {
         }
 
         //verifica del recaptcha
-        verifyReCAPTCHA(gRecaptchaResponse);
+        //MODIFICA (23/2/2024) : Commento alla riga riguardante il reCAPTCHA perchè non più utilizzato
+        //verifyReCAPTCHA(gRecaptchaResponse);
         
         User n = new User();
 
-        // NOME
-        if ((name.length() >= 2) && (name.length() <= 30) && (Pattern.matches("[a-zA-Z]+", name))) {
+        // NOME -- Modifica (02/02/2024) : Possibilità di inserire più nomi separati da uno spazio
+        // regex_old = "[a-zA-Z]+" , regex_new = "[a-zA-Z]+(\s[a-zA-Z]+)*"
+        //if ((name.length() >= 2) && (name.length() <= 30) && (Pattern.matches("[a-zA-Z]+", name))) {
+        if ((name.length() >= 2) && (name.length() <= 30) && (Pattern.matches("[a-zA-Z]+(\\s[a-zA-Z]+)*", name))) {
             n.setName(name);
         } else {
             return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Name not valid");
         }
 
-        // COGNOME
-        if ((name.length() >= 2) && (surname.length() <= 30) && (Pattern.matches("[a-zA-Z]+", surname))) {
+        // COGNOME --Modifica (02/02/2024) : Possibilità di inserire più parole separate da uno spazio ed eventualmente
+        //                                  da un apostrofo
+        // regex_old = "[a-zA-Z]+" , regex_new = [a-zA-Z]+(\s?[a-zA-Z]+\'?)*
+        //if ((name.length() >= 2) && (surname.length() <= 30) && (Pattern.matches("[a-zA-Z]+", surname))) {
+        if ((name.length() >= 2) && (surname.length() <= 30) && (Pattern.matches("[a-zA-Z]+(\\s?[a-zA-Z]+\\'?)*", surname))) {
             n.setSurname(surname);
         } else {
             return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Surname not valid");
@@ -116,7 +135,7 @@ public class Controller {
         if ((email.contains("@")) && (email.contains("."))) {
             User user = userRepository.findByEmail(email);
             if (user != null) {
-                return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Email already in use");
+                return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Utente con questa email già registrato");
             }
             n.setEmail(email);
         } else {
@@ -127,7 +146,12 @@ public class Controller {
         Matcher m = p.matcher(password);
 
         if ((password.length() >16) || (password.length() < 8) || !(m.matches())) {
-            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Password not valid, maiuscola, minuscola e numero, con lunghezza tra 8 e 16");
+
+            //return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Password not valid, maiuscola, minuscola e numero, con lunghezza tra 8 e 16");
+
+            //MODIFICA (05/02/2024)
+            return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Password non valida! La password deve contenere almeno una lettera maiuscola, una minuscola, un numero ed un carattere speciale e deve essere lunga tra gli 8 e i 16 caratteri");
+            //FINE MODIFICA
         }
 
         if (password.equals(check_password)) {
@@ -139,32 +163,41 @@ public class Controller {
 
         // STUDIES
         n.setStudies(studies);
+        n.setRegisteredWithFacebook(false);
 
         userRepository.save(n);
         Integer ID = n.getID();
 
         try {
             emailService.sendMailRegister(email, ID);
-            return ResponseEntity.ok("Registration completed successfully!");
+            
+            //MODIFICA (03/02/2024) : Redirect
+            HttpHeaders headers = new HttpHeaders();
+            headers.add("Location", "/login_success");    
+            return new ResponseEntity<String>(headers,HttpStatus.FOUND);
+            //FINE MODIFICA
+
+            //return ResponseEntity.ok("Registration completed successfully!");
+
         } catch (MessagingException e) {
             return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Failed to confirm your registration");
         }
     }
 
     //Verifica del recaptcha
-    private void verifyReCAPTCHA(String gRecaptchaResponse) {
-        HttpHeaders headers = new HttpHeaders();
-        headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);
+    // private void verifyReCAPTCHA(String gRecaptchaResponse) {
+    //     HttpHeaders headers = new HttpHeaders();
+    //     headers.setContentType(MediaType.APPLICATION_FORM_URLENCODED);
     
-        MultiValueMap<String, String> map = new LinkedMultiValueMap<>();
-        map.add("secretkey", recaptchaSecret);
-        map.add("response", gRecaptchaResponse);
+    //     MultiValueMap<String, String> map = new LinkedMultiValueMap<>();
+    //     map.add("secretkey", recaptchaSecret);
+    //     map.add("response", gRecaptchaResponse);
     
-        HttpEntity<MultiValueMap<String, String>> request = new HttpEntity<>(map, headers);
-        ResponseEntity<String> response = restTemplate.postForEntity(recaptchaServerURL, request, String.class);
+    //     HttpEntity<MultiValueMap<String, String>> request = new HttpEntity<>(map, headers);
+    //     ResponseEntity<String> response = restTemplate.postForEntity(recaptchaServerURL, request, String.class);
     
-        System.out.println(response);
-    }
+    //     System.out.println(response);
+    // }
         
     // Autenticazione
     @PostMapping("/login")
@@ -179,8 +212,11 @@ public class Controller {
 
         if (user == null) {
             return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Email not found");
+        } else if (user.isRegisteredWithFacebook) {
+            return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("User already registered with facebook, please log in with facebook");
         }
 
+        System.out.println("Utente registrato, email trovata nel database (login)");
         boolean passwordMatches = myPasswordEncoder.matches(password, user.password);
         if (!passwordMatches) {
             return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("Incorrect password");
@@ -189,10 +225,13 @@ public class Controller {
         String token = generateToken(user);
         AuthenticatedUser authenticatedUser = new AuthenticatedUser(user, token);
         authenticatedUserRepository.save(authenticatedUser);
+        System.out.println("authenticatedUser creato (login)");
 
         Cookie jwtTokenCookie = new Cookie("jwt", token);
         jwtTokenCookie.setMaxAge(3600);
         response.addCookie(jwtTokenCookie);
+        System.out.println("Cookie aggiunto alla risposta (login)");
+        System.out.println("token_received:"+token);
 
         try {
             response.sendRedirect("/main");
@@ -203,6 +242,167 @@ public class Controller {
 
         return ResponseEntity.status(302).body("");
     }
+    //MODIFICA
+    @PostMapping("/login_with_facebook")
+    public ResponseEntity<String> login_with_facebook(@RequestParam("email") String email,
+                                                      @RequestParam("nome") String name,
+                                                      @RequestParam("access_token") String tokenFb, @CookieValue(name = "jwt", required = false) String jwt, HttpServletRequest request, HttpServletResponse response) {
+        // if(fb.isUserAuthenticated(tokenFb)) {
+        //     // if(userRepository.findByEmail(email) == null) {
+        //     //     //save user to db with email
+        //     // }
+        
+        
+        //Contattare FB  e validare il token
+        //     String token = generateToken(user);
+        //     AuthenticatedUser authenticatedUser = new AuthenticatedUser(user, token);
+        //     authenticatedUserRepository.save(authenticatedUser);
+    
+        //     Cookie jwtTokenCookie = new Cookie("jwt", token);
+        //     jwtTokenCookie.setMaxAge(3600);
+        //     response.addCookie(jwtTokenCookie);
+        // }
+        System.out.println(email);
+        System.out.println(tokenFb);
+        System.out.println(name);
+        
+        //Verificare token di accesso 
+
+        //Invio GET presso end-point debug-token
+
+        // URL dell'endpoint a cui inviare la richiesta GET
+        String url = "https://graph.facebook.com/debug_token?input_token="+tokenFb+"&access_token="+app_token;
+
+        // Esegue la richiesta GET e ottiene la risposta come oggetto ResponseEntity<String>
+        ResponseEntity<String> login_with_facebook = restTemplate.getForEntity(url, String.class);
+
+        String responseBody = null;
+        boolean is_valid = false;
+
+         // Verifica lo stato della risposta
+         if (login_with_facebook.getStatusCode() == HttpStatus.OK) {
+            // La richiesta è andata a buon fine, puoi accedere ai dati della risposta
+            responseBody = login_with_facebook.getBody();
+            System.out.println("Risposta ricevuta:");
+            System.out.println(responseBody);
+        } else {
+            // Gestisci il caso in cui la richiesta non sia andata a buon fine
+            System.out.println("Errore nella richiesta: " + login_with_facebook.getStatusCode());
+        }
+
+        //Deserializzare risposta
+        ObjectMapper objectMapper = new ObjectMapper();
+        System.out.println("Deserializzazione JSON...");
+
+        try {
+            // Converti il corpo della risposta in un oggetto Java (es. MyResponseClass)
+            MyResponseClass responseObj = objectMapper.readValue(responseBody, MyResponseClass.class);
+    
+            // Ora puoi accedere ai campi dell'oggetto responseObj
+            is_valid = responseObj.getData().isIs_valid();
+            //int campo2 = responseObj.getCampo2();
+    
+            // Esegui le operazioni desiderate con i dati della risposta
+            System.out.println("is_valid: " + is_valid);
+            //System.out.println("Campo2: " + campo2);
+        } catch (IOException e) {
+            e.printStackTrace();
+        } 
+
+        //Token valido?
+        if (is_valid==true) {
+
+            System.out.println("Token valido");
+
+            //Ti sei già registrato?
+            User user = userRepository.findByEmail(email);
+
+            if(user != null) {
+
+                //Utente esiste (mail trovata nel database)
+                System.out.println("Utente già registrato (mail trovata nel database)");
+
+                //Si è già registrato con Facebook?
+
+                if(user.isRegisteredWithFacebook){
+
+                    System.out.println("Utente registrato con Facebook");
+                    //Flusso JWT
+                    String token = generateToken(user);
+                    AuthenticatedUser authenticatedUser = new AuthenticatedUser(user, token);
+                    authenticatedUserRepository.save(authenticatedUser);
+                    System.out.println("authenticatedUser correttamente creato (login_with_facebook)");
+
+                    Cookie jwtTokenCookie = new Cookie("jwt", token);
+                    jwtTokenCookie.setMaxAge(3600);
+                    response.addCookie(jwtTokenCookie);
+                    System.out.println("Cookie aggiunto alla risposta (login_with_facebook)");
+
+                    try {
+                        response.sendRedirect("/main");
+                    } catch (IOException e) {
+                        // TODO Auto-generated catch block
+                        e.printStackTrace();
+                    }
+                    
+                } else {
+                    //Non si è registrato con Facebook
+                    System.out.println("Utente non registrato con Facebook");
+                    return ResponseEntity.status(HttpStatus.BAD_REQUEST).body("Ti sei già registrato con email e password. Nella pagina di login, inserisci le tue credenziali.");
+                }
+            } else {
+                //Utente non si è mai registrato
+                System.out.println("Utente non si è mai registrato");
+
+                //Registrazione Utente
+                System.out.println("Registrazione Utente...");
+                User n = new User();
+                n.setName(name);
+                n.setSurname("");
+                n.setEmail(email);
+                n.setPassword("");
+                n.setRegisteredWithFacebook(true);
+                n.setStudies(Studies.ALTRO);
+    
+                //Salvataggio
+                System.out.println("Salvataggio...");
+                userRepository.save(n);
+                System.out.println("Salvataggio completato.");
+    
+                //Assegnazione ID
+                Integer ID = n.getID();
+    
+                try {
+                    emailService.sendMailRegister(email, ID);
+                    //Flusso JWT
+                    String token = generateToken(n);
+                    AuthenticatedUser authenticatedUser = new AuthenticatedUser(n, token);
+                    authenticatedUserRepository.save(authenticatedUser);
+    
+                    Cookie jwtTokenCookie = new Cookie("jwt", token);
+                    jwtTokenCookie.setMaxAge(3600);
+                    response.addCookie(jwtTokenCookie);
+                    //MODIFICA (03/02/2024) : Redirect
+                    try {
+                        response.sendRedirect("/main");
+                    } catch (IOException e) {
+                        // TODO Auto-generated catch block
+                        return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Failed to confirm your registration");
+                    }
+                    //FINE MODIFICA
+                } catch (MessagingException e) {
+                    return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body("Failed to confirm your registration");
+                }
+            }
+        } else {
+            //token non valido, utente non loggato correttamente con facebook
+
+        }
+
+        return ResponseEntity.status(302).body("");
+
+    }
+    //FINE MODIFICA
 
     public static String generateToken(User user) {
         Instant now = Instant.now();
@@ -226,13 +426,14 @@ public class Controller {
         Cookie jwtTokenCookie = new Cookie("jwt", null);
         jwtTokenCookie.setMaxAge(0);
         response.addCookie(jwtTokenCookie);
-
+        System.out.println("GET logout called, token removed");
         return new ModelAndView("redirect:/login"); 
     }
 
     @PostMapping("/logout")
     public ResponseEntity<String> logout(@RequestParam("authToken") String authToken, HttpServletResponse response) {
         AuthenticatedUser authenticatedUser = authenticatedUserRepository.findByAuthToken(authToken);
+        System.out.println("POST logout called, token removed");
 
         if (authenticatedUser == null) {
             return ResponseEntity.status(HttpStatus.UNAUTHORIZED).body("User not authenticated");
@@ -363,6 +564,23 @@ public class Controller {
         return new ModelAndView("register");
     }
 
+    //MODIFICA (03/02/2024) : Feedback registrazione avvenuta con successo + redirect alla pagina di /login
+    @GetMapping("/login_success")
+    public ModelAndView showLoginSuccesForm(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+        if(isJwtValid(jwt)) return new ModelAndView("redirect:/main"); 
+        return new ModelAndView("login_success");
+    }
+    //MODIFICA (18/02/2024) : Aggiunta menù
+    @GetMapping("/menu")
+    public ModelAndView showMenuForm(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
+
+        System.out.println("GET (/menu)");
+        if(isJwtValid(jwt)) return new ModelAndView("redirect:/login"); 
+
+        return new ModelAndView("menu");
+    }
+    //FINE MODIFICA
+
     @GetMapping("/login")
     public ModelAndView showLoginForm(HttpServletRequest request, @CookieValue(name = "jwt", required = false) String jwt) {
         if(isJwtValid(jwt)) return new ModelAndView("redirect:/main"); 
diff --git a/T23-G1/src/main/java/com/example/db_setup/User.java b/T23-G1/src/main/java/com/example/db_setup/User.java
index 0700761..169dd3b 100644
--- a/T23-G1/src/main/java/com/example/db_setup/User.java
+++ b/T23-G1/src/main/java/com/example/db_setup/User.java
@@ -28,6 +28,10 @@ public class User {
     public String email;
 
     public String password;
+
+    //MODIFICA
+    public boolean isRegisteredWithFacebook;
+    //FINE MODIFICA
     
     @Enumerated (EnumType.STRING)
     public Studies studies;
diff --git a/T23-G1/src/main/java/com/example/db_setup/UserRepository.java b/T23-G1/src/main/java/com/example/db_setup/UserRepository.java
index f9d674d..cdcc911 100644
--- a/T23-G1/src/main/java/com/example/db_setup/UserRepository.java
+++ b/T23-G1/src/main/java/com/example/db_setup/UserRepository.java
@@ -11,6 +11,9 @@ public interface UserRepository extends JpaRepository<User,Integer> {
     User findByEmail(String email);
     User findByName(String name);
     User findByResetToken(String resetToken);
+    //MODIFICA
+    User findByisRegisteredWithFacebook(boolean isRegisteredWithFacebook);
+    //FINE MODIFICA
     List<User> findAll();
 
 }
\ No newline at end of file
diff --git a/T23-G1/src/main/resources/application.properties b/T23-G1/src/main/resources/application.properties
index 6f63e8d..5ef7f5e 100644
--- a/T23-G1/src/main/resources/application.properties
+++ b/T23-G1/src/main/resources/application.properties
@@ -26,4 +26,5 @@ spring.main.allow-circular-references=true
 
 recaptcha.sitekey=6LcZN2QmAAAAACw4po2gr-Efo0k8ubA6cKB_CJxN
 recaptcha.secretkey=6LcZN2QmAAAAAMRmPPXgjpUV3hdgaO6Yk0fp5IdU
-recaptcha.url= https://www.google.com/recaptcha/api/siteverify
\ No newline at end of file
+recaptcha.url= https://www.google.com/recaptcha/api/siteverify
+
diff --git a/T23-G1/src/main/resources/static/login.css b/T23-G1/src/main/resources/static/login.css
index bc22db9..51a9ea3 100644
--- a/T23-G1/src/main/resources/static/login.css
+++ b/T23-G1/src/main/resources/static/login.css
@@ -1,7 +1,13 @@
 body {
     font-family: 'Roboto', sans-serif;
     font-weight: bold;
-    background-image: url('https://media.licdn.com/dms/image/D4D22AQFv6lqHmb3osQ/feedshare-shrink_800/0/1685964874554?e=1688601600&v=beta&t=lH3d4hmDaW-gCXG6vQ-lTEZCgKBERrL98hD8gvqaN0A');
+    /*background-image: url('https://media.licdn.com/dms/image/D4D22AQFv6lqHmb3osQ/feedshare-shrink_800/0/1685964874554?e=1688601600&v=beta&t=lH3d4hmDaW-gCXG6vQ-lTEZCgKBERrL98hD8gvqaN0A');*/
+
+    /*MODIFICA (13/02/2024) : Aggiunta sfondo*/
+    /*background-image: url('./images/login_page_background_yellow.jpg');*/
+    /* width: 200px;
+    height: 200px; */
+    /*FINE MODIFICA*/
     background-size: cover;
     background-repeat: no-repeat;
     display: flex;
@@ -12,7 +18,11 @@ body {
 
 .container {
     width: 30%;
-    height: 55%;
+
+    /*MODIFICA (06/02/2024) : Predisposizione aggiunta nuovo bottone*/
+    /*height: 55%;*/
+    height: 70%;                /*Modifica altezza al 70%*/
+    /*FINE MODIFICA*/
     margin: 0 auto;
     position: absolute;
     top: 50%;
@@ -30,8 +40,10 @@ h1 {
     font-family: 'Roboto', sans-serif;
     font-size: 2.5rem;
     color: rgb(161, 0, 174);
-    -webkit-text-stroke: 0.5px white;
-    text-stroke: 0.5px white;
+    -webkit-text-stroke: 0.5px white;       /*Miglioramento leggibilità testo (funzionerà su browser basati su WebKit come Safari e Chrome)*/
+    /*MODIFICA (13/02/2024) : Accortenze grafiche e di compatibilità*/
+    /*text-shadow: 0.5px 0.5px white, -0.5px -0.5px white, 0.5px -0.5px white, -0.5px 0.5px white; /*Miglioramento leggibilità testo (funzionerà sugli altri browser non basati su WebKit)*/
+    /*FINE MODIFICA*/
 }
 
 
@@ -59,6 +71,7 @@ input[type="password"]:focus::placeholder {
 color: transparent;
 }
 
+/*
 input[type="submit"] {
     display: block;
     margin: 0 auto;
@@ -75,8 +88,28 @@ input[type="submit"]:hover {
         color: rgb(255, 255, 255);
 }
 
+*/
+
+/*MODIFICA (06/02/2024) : Bottone submit*/
+.submit-button {
+    display: block;
+    margin: 0 auto;
+    background-color: rgb(161, 0, 174);
+    color: white;
+    padding: 10px 20px;
+    border: none;
+    border-radius: 5px;
+    cursor: pointer;
+}
+
+.submit-button:hover {
+    background-color: rgb(219, 0, 118);
+    color: rgb(255, 255, 255);
+}
+/*FINE MODIFICA*/
+
 /* Bottone Google */
-button.google-login-button {
+/* button.google-login-button {
     margin: 0 auto;
     margin-top: 10px;
     border-radius: 5px;
@@ -100,9 +133,9 @@ button.google-login-button {
     button.google-login-button:hover {
         background-color: gray;
         background-image: url('https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg');
-    }
+    } */
 
-/*Tasto "Prima volta su GameAPPS? Registrati"*/
+/*Link "Non sei ancora registrato? Registrati."*/
 .login-signup-now {
     display: block;
     margin-top: 40px;
@@ -111,13 +144,12 @@ button.google-login-button {
     color: rgb(219, 0, 118);
 }
 
+.login-signup-now:hover {
+    text-decoration: underline;
+    color: rgb(161, 0, 174);
+}
 
-    .login-signup-now:hover {
-            text-decoration: underline;
-            color: rgb(161, 0, 174);
-        }
-
-/*Tasto "Hai dimenticato la password"*/
+/*Link "Hai dimenticato la password?"*/
 .login-help-link {
     display: block;
     margin-top: 20px;
@@ -126,7 +158,7 @@ button.google-login-button {
     color: rgb(219, 0, 118);
 }
 
-    .login-help-link:hover {
-        text-decoration: underline;
-        color: rgb(161, 0, 174);
-    }
+.login-help-link:hover {
+    text-decoration: underline;
+    color: rgb(161, 0, 174);
+}
diff --git a/T23-G1/src/main/resources/static/register.css b/T23-G1/src/main/resources/static/register.css
index 2acd2aa..6415e0a 100644
--- a/T23-G1/src/main/resources/static/register.css
+++ b/T23-G1/src/main/resources/static/register.css
@@ -32,9 +32,29 @@ h1 {
     font-size: 2.5rem;
     color: rgb(161, 0, 174);
     -webkit-text-stroke: 0.5px white;
-    text-stroke: 0.5px white;
+    text-stroke: 0.5px white; 
 }
 
+/*MODIFICA (03/02/2024) : Aggiunta feedback */
+.container #name_error, 
+.container #surname_error, 
+.container #email_error,
+.container #check_password_error,
+.container #password_error{
+
+    margin-top: 5px;
+    width: 345px;
+    font-size: 18px;
+    color: #C62828;
+    background: rgba(255, 0, 0, 0.1);
+    text-align: center;
+    padding: 5px, 8px;
+    border-radius: 3px;
+    border: 1px solid #EF9A9A;
+    display: none;
+}
+ 
+
 /*Tasto Submit*/
 input[type="submit"] {
     display: block;
diff --git a/T23-G1/src/main/resources/static/register.js b/T23-G1/src/main/resources/static/register.js
index 1bdfa78..5c1bad3 100644
--- a/T23-G1/src/main/resources/static/register.js
+++ b/T23-G1/src/main/resources/static/register.js
@@ -1,8 +1,71 @@
+// const form = document.querySelector("form");
+
+// form.addEventListener("submit", (event) => {
+//   event.preventDefault();
+
+//   const nome = document.getElementById("name").value.trim();
+//   const cognome = document.getElementById("surname").value.trim();
+//   const email = document.getElementById("email").value.trim();
+//   const password = document.getElementById("password").value.trim();
+//   const confermaPassword = document.getElementById("check_password").value.trim();
+//   const corsoDiStudi = document.getElementById("studies").value;
+
+//   if (nome === '') {
+
+//     //alert("Compila il campo Nome!");
+//     //return;
+
+//     //MODIFICA (03/02/2024)
+//     nome.style.border = "1px solid red";
+//     name_error.style.display = "block";
+//     nome.focus();
+//     return false;
+//   }
+
+//   if (cognome === '') {
+//     alert("Compila il campo Cognome!");
+//     return;
+//   }
+
+//   if (email === '') {
+//     alert("Compila il campo Email!");
+//     return;
+//   }
+
+//   if (password === '') {
+//     alert("Compila il campo Password!");
+//     return;
+//   }
+
+//   if (confermaPassword === '') {
+//     alert("Compila il campo Conferma Password!");
+//     return;
+//   }
+
+//   if (password !== confermaPassword) {
+//     alert("Le password non corrispondono!");
+//     return;
+//   }
+
+//   const datiUtente = {
+//     nome: nome,
+//     cognome: cognome,
+//     email: email,
+//     password: password,
+//     corsoDiStudi: corsoDiStudi
+//   };
+
+//   console.log(datiUtente);
+//   //form.reset();
+//   form.submit();
+// });
+
 const form = document.querySelector("form");
 
-form.addEventListener("submit", (event) => {
+form.addEventListener("submit", async (event) => {
   event.preventDefault();
 
+  // Your form data extraction logic...
   const nome = document.getElementById("name").value.trim();
   const cognome = document.getElementById("surname").value.trim();
   const email = document.getElementById("email").value.trim();
@@ -10,45 +73,36 @@ form.addEventListener("submit", (event) => {
   const confermaPassword = document.getElementById("check_password").value.trim();
   const corsoDiStudi = document.getElementById("studies").value;
 
-  if (nome === '') {
-    alert("Compila il campo Nome!");
-    return;
-  }
-
-  if (cognome === '') {
-    alert("Compila il campo Cognome!");
-    return;
-  }
-
-  if (email === '') {
-    alert("Compila il campo Email!");
-    return;
-  }
-
-  if (password === '') {
-    alert("Compila il campo Password!");
-    return;
-  }
-
-  if (confermaPassword === '') {
-    alert("Compila il campo Conferma Password!");
-    return;
-  }
-
-  if (password !== confermaPassword) {
-    alert("Le password non corrispondono!");
-    return;
-  }
-
   const datiUtente = {
-    nome: nome,
-    cognome: cognome,
+    name: nome,
+    surname: cognome,
     email: email,
     password: password,
-    corsoDiStudi: corsoDiStudi
+    check_password: confermaPassword,
+    studies: corsoDiStudi,
   };
 
-  console.log(datiUtente);
-  //form.reset();
-  form.submit();
-});
\ No newline at end of file
+  try {
+    // Use fetch to send form data to the server
+    const response = await fetch('/your-register-endpoint', {
+      method: 'POST', // or 'PUT' or 'PATCH' depending on your server logic
+      headers: {
+        'Content-Type': 'application/json',
+      },
+      body: JSON.stringify(datiUtente),
+    });
+
+    // Check if the response status is OK (2xx)
+    if (!response.ok) {
+      // If not OK, handle the error
+      throw new Error(`HTTP error! Status: ${response.status}`);
+    }
+
+    // If the response is OK, you can handle the success
+    const responseData = await response.json();
+    console.log('Received data:', responseData);
+  } catch (error) {
+    // Handle the error
+    console.error('Error:', error.message);
+  }
+});
diff --git a/T23-G1/src/main/resources/static/t23/css/login.css b/T23-G1/src/main/resources/static/t23/css/login.css
index bc22db9..f13c2ed 100644
--- a/T23-G1/src/main/resources/static/t23/css/login.css
+++ b/T23-G1/src/main/resources/static/t23/css/login.css
@@ -1,7 +1,13 @@
 body {
     font-family: 'Roboto', sans-serif;
     font-weight: bold;
-    background-image: url('https://media.licdn.com/dms/image/D4D22AQFv6lqHmb3osQ/feedshare-shrink_800/0/1685964874554?e=1688601600&v=beta&t=lH3d4hmDaW-gCXG6vQ-lTEZCgKBERrL98hD8gvqaN0A');
+    /*background-image: url('https://media.licdn.com/dms/image/D4D22AQFv6lqHmb3osQ/feedshare-shrink_800/0/1685964874554?e=1688601600&v=beta&t=lH3d4hmDaW-gCXG6vQ-lTEZCgKBERrL98hD8gvqaN0A');*/
+
+    /*MODIFICA (13/02/2024) : Aggiunta sfondo*/
+    background-image: url('./images/login_page_background_yellow.jpg');
+    width: 200px;
+    height: 200px; 
+    /*FINE MODIFICA*/
     background-size: cover;
     background-repeat: no-repeat;
     display: flex;
@@ -12,7 +18,11 @@ body {
 
 .container {
     width: 30%;
-    height: 55%;
+
+    /*MODIFICA (06/02/2024) : Predisposizione aggiunta nuovo bottone*/
+    /*height: 55%;*/
+    height: 70%;                /*Modifica altezza al 70%*/
+    /*FINE MODIFICA*/
     margin: 0 auto;
     position: absolute;
     top: 50%;
@@ -30,8 +40,10 @@ h1 {
     font-family: 'Roboto', sans-serif;
     font-size: 2.5rem;
     color: rgb(161, 0, 174);
-    -webkit-text-stroke: 0.5px white;
-    text-stroke: 0.5px white;
+    -webkit-text-stroke: 0.5px white;       /*Miglioramento leggibilità testo (funzionerà su browser basati su WebKit come Safari e Chrome)*/
+    /*MODIFICA (13/02/2024) : Accortenze grafiche e di compatibilità*/
+    text-shadow: 0.5px 0.5px white, -0.5px -0.5px white, 0.5px -0.5px white, -0.5px 0.5px white; /*Miglioramento leggibilità testo (funzionerà sugli altri browser non basati su WebKit)*/
+    /*FINE MODIFICA*/
 }
 
 
@@ -59,6 +71,7 @@ input[type="password"]:focus::placeholder {
 color: transparent;
 }
 
+/*
 input[type="submit"] {
     display: block;
     margin: 0 auto;
@@ -75,8 +88,46 @@ input[type="submit"]:hover {
         color: rgb(255, 255, 255);
 }
 
+*/
+
+/*MODIFICA (06/02/2024) : Bottone submit*/
+.submit-button {
+    display: block;
+    margin: 0 auto;
+    background-color: rgb(161, 0, 174);
+    color: white;
+    padding: 10px 20px;
+    border: none;
+    border-radius: 5px;
+    cursor: pointer;
+}
+
+.submit-button:hover {
+    background-color: rgb(219, 0, 118);
+    color: rgb(255, 255, 255);
+}
+
+/*MODIFICA (18/02/2024) : Aggiunta bottone Menu*/
+.menu-button {
+    display: block;
+    margin: 0 auto;
+    margin-top: 10px;                       /* Aggiungi un margine sopra i bottoni per separarli */
+    background-color: rgb(161, 0, 174);
+    color: white;
+    padding: 10px 20px;
+    border: none;
+    border-radius: 5px;
+    cursor: pointer;
+}
+
+.menu-button:hover {
+    background-color: rgb(219, 0, 118);
+    color: rgb(255, 255, 255);
+}
+/*FINE MODIFICA*/
+
 /* Bottone Google */
-button.google-login-button {
+/* button.google-login-button {
     margin: 0 auto;
     margin-top: 10px;
     border-radius: 5px;
@@ -100,9 +151,9 @@ button.google-login-button {
     button.google-login-button:hover {
         background-color: gray;
         background-image: url('https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg');
-    }
+    } */
 
-/*Tasto "Prima volta su GameAPPS? Registrati"*/
+/*Link "Non sei ancora registrato? Registrati."*/
 .login-signup-now {
     display: block;
     margin-top: 40px;
@@ -111,13 +162,12 @@ button.google-login-button {
     color: rgb(219, 0, 118);
 }
 
+.login-signup-now:hover {
+    text-decoration: underline;
+    color: rgb(161, 0, 174);
+}
 
-    .login-signup-now:hover {
-            text-decoration: underline;
-            color: rgb(161, 0, 174);
-        }
-
-/*Tasto "Hai dimenticato la password"*/
+/*Link "Hai dimenticato la password?"*/
 .login-help-link {
     display: block;
     margin-top: 20px;
@@ -126,7 +176,7 @@ button.google-login-button {
     color: rgb(219, 0, 118);
 }
 
-    .login-help-link:hover {
-        text-decoration: underline;
-        color: rgb(161, 0, 174);
-    }
+.login-help-link:hover {
+    text-decoration: underline;
+    color: rgb(161, 0, 174);
+}
diff --git a/T23-G1/src/main/resources/static/t23/js/register.js b/T23-G1/src/main/resources/static/t23/js/register.js
index 1bdfa78..ab5054b 100644
--- a/T23-G1/src/main/resources/static/t23/js/register.js
+++ b/T23-G1/src/main/resources/static/t23/js/register.js
@@ -1,8 +1,73 @@
+// const form = document.querySelector("form");
+
+// form.addEventListener("submit", (event) => {
+//   event.preventDefault();
+
+//   const nome = document.getElementById("name").value.trim();
+//   const cognome = document.getElementById("surname").value.trim();
+//   const email = document.getElementById("email").value.trim();
+//   const password = document.getElementById("password").value.trim();
+//   const confermaPassword = document.getElementById("check_password").value.trim();
+//   const corsoDiStudi = document.getElementById("studies").value;
+
+//   if (nome === '') {
+
+//     //alert("Compila il campo Nome!");
+//     //return;
+
+//     //MODIFICA (03/02/2024)
+//     nome.style.border = "1px solid red";
+//     name_error.style.display = "block";
+//     nome.focus();
+//     return false;
+//   }
+
+//   if (cognome === '') {
+//     alert("Compila il campo Cognome!");
+//     return;
+//   }
+
+//   if (email === '') {
+//     alert("Compila il campo Email!");
+//     return;
+//   }
+
+//   if (password === '') {
+//     alert("Compila il campo Password!");
+//     return;
+//   }
+
+//   if (confermaPassword === '') {
+//     alert("Compila il campo Conferma Password!");
+//     return;
+//   }
+
+//   if (password !== confermaPassword) {
+//     alert("Le password non corrispondono!");
+//     return;
+//   }
+
+//   const datiUtente = {
+//     nome: nome,
+//     cognome: cognome,
+//     email: email,
+//     password: password,
+//     corsoDiStudi: corsoDiStudi
+//   };
+
+//   console.log(datiUtente);
+//   //form.reset();
+//   form.submit();
+// });
+
+//MODIFICA (03/02/2024)
+
 const form = document.querySelector("form");
 
-form.addEventListener("submit", (event) => {
+form.addEventListener("submit", async (event) => {
   event.preventDefault();
 
+  //Form data extraction logic...
   const nome = document.getElementById("name").value.trim();
   const cognome = document.getElementById("surname").value.trim();
   const email = document.getElementById("email").value.trim();
@@ -10,45 +75,38 @@ form.addEventListener("submit", (event) => {
   const confermaPassword = document.getElementById("check_password").value.trim();
   const corsoDiStudi = document.getElementById("studies").value;
 
-  if (nome === '') {
-    alert("Compila il campo Nome!");
-    return;
-  }
-
-  if (cognome === '') {
-    alert("Compila il campo Cognome!");
-    return;
-  }
-
-  if (email === '') {
-    alert("Compila il campo Email!");
-    return;
-  }
-
-  if (password === '') {
-    alert("Compila il campo Password!");
-    return;
-  }
-
-  if (confermaPassword === '') {
-    alert("Compila il campo Conferma Password!");
-    return;
-  }
-
-  if (password !== confermaPassword) {
-    alert("Le password non corrispondono!");
-    return;
-  }
-
   const datiUtente = {
-    nome: nome,
-    cognome: cognome,
+    name: nome,
+    surname: cognome,
     email: email,
     password: password,
-    corsoDiStudi: corsoDiStudi
+    check_password: confermaPassword,
+    studies: corsoDiStudi,
   };
 
-  console.log(datiUtente);
-  //form.reset();
-  form.submit();
-});
\ No newline at end of file
+  try {
+    // Use fetch to send form data to the server
+    const response = await fetch('/your-register-endpoint', {
+      method: 'POST', // or 'PUT' or 'PATCH' depending on your server logic
+      headers: {
+        'Content-Type': 'application/json',
+      },
+      body: JSON.stringify(datiUtente),
+    });
+
+    // Check if the response status is OK (2xx)
+    if (!response.ok) {
+      // If not OK, handle the error
+      throw new Error(`HTTP error! Status: ${response.status}`);
+    }
+
+    // If the response is OK, you can handle the success
+    const responseData = await response.json();
+    console.log('Received data:', responseData);
+  } catch (error) {
+    // Handle the error
+    console.error('Error:', error.message);
+  }
+});
+
+//FINE MODIFICA
diff --git a/T23-G1/src/main/resources/templates/login.html b/T23-G1/src/main/resources/templates/login.html
index 0a7bf34..049ba16 100644
--- a/T23-G1/src/main/resources/templates/login.html
+++ b/T23-G1/src/main/resources/templates/login.html
@@ -3,19 +3,179 @@
   <head>
     <title>Login Page</title>
     <link rel="stylesheet" th:href="@{/t23/css/login.css}" />
+    <meta name="viewport" content="width=device-width">                               <!--MODIFICA: Correct the viewport meta tag (responsive web design and performance improvements)-->
+    <meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests">   <!--MODIFICA: Forza il web browser a richiedere tutte le risorse del documento in modo sicuro-->
+    <meta charset="UTF-8">
+    <!--FINE MODIFICA-->
+
   </head>
   <body>
     <div class="container">
       <h1>LOGIN</h1>
       <form th:action="@{/login}" method="post">
       <form>
-        <input type="text" id="email" name="email" placeholder="Username">
-        <input type="password" id="password" name="password" placeholder="Password">
-        <input type="submit" value="Accedi">
-		  <!-- <button class="google-login-button">Accedi con Google</button> -->
+        <input type="text" id="email" name="email" placeholder="Indirizzo email" autocomplete="on">
+        <input type="password" id="password" name="password" placeholder="Password" autocomplete="off">
+        <!--Primo bottone ('Accedi')-->
+        <input type="submit" value="Accedi" class="submit-button">
+        <!--MODIFICA (18/02/2024) : Aggiunta bottone Menu-->
+        <input type="button" value="Menu" class="menu-button" onclick="window.location.href='/menu';">
+
+		  <!--<button class="google-login-button">Accedi con Google</button> -->
 		<a class="login-signup-now" data-uia="login-signup-now" href="/register">Non sei ancora registrato? Registrati.</a>
     <a class="login-help-link link" target="_self" data-uia="login-help-link" href="/password_reset">Hai dimenticato la password?</a>
       </form>
+    
+      <!--MODIFICA (05/02/2024) : Social login con Facebook-->
+      
+      <p>Oppure:</p>
+      
+        <p id="profile"></p>
+
+      <script>
+
+          //statusChangeCallback() viene chiamata con i risultati restituiti da FB.getLoginStatus().
+          function statusChangeCallback(response) {
+            console.log('statusChangeCallback');
+            console.log(response);
+            
+            //Siamo loggati?
+            if(response.status==='connected') {
+
+              const access_token = response.authResponse.accessToken;
+
+              //Richiesta all'API per recuperare email e nome
+              FB.api('/me', {fields: 'name, email'}, function(response) {
+                               //document.getElementById("profile").innerHTML = "Good to see you, " + response.name + ". i see your email address is " + response.email
+                               console.log(JSON.stringify(response));
+
+                               //Invio dati back-end (POST): accessToken + email + nome
+                               //Dati da inviare nella richiesta POST (da convertire in formato JSON)
+                               const data = {
+                                email: response.email,
+                                nome: response.name,
+                                access_token: access_token
+                              };
+
+                              // Costruzione URL che includa i parametri di interesse (nome, email ed access_token)
+                              const url = `https://blindly-harmless-oarfish.ngrok-free.app/login_with_facebook?nome=${data.nome}&email=${data.email}&access_token=${data.access_token}`
+
+                              //Configuraazione della richiesta
+                              const options = {
+                                method: 'POST',
+                                headers: {
+                                  'Content-Type': 'application/json'            // Specifica il tipo di contenuto come JSON
+                                },
+                                redirect: 'follow'                              // Segui il reindirizzamento
+                              };
+
+                              // Esecuzione della richiesta POST utilizzando la fetch()
+                              fetch(url, options)
+                                .then(response => {
+                                  if (!response.ok) {
+                                    throw new Error('Errore nella richiesta POST');
+                                  }
+                                  location.reload()
+                                })
+                                .catch(error => {
+                                  console.error('Si è verificato un errore:', error);
+                                });
+                           });
+
+            }  
+          }
+
+          //L'oggetto risposta viene restituito con un campo 'status' che permette
+            //all'applicazione di conoscere lo stato corrente del login di una persona,
+            // if(response.status === 'connected') {
+            //    Utente loggato nella web-app e su Facebook
+            //                       ...
+            //} else {
+            //    Utente non loggato nella web-app oppure lo stato è sconosciuto
+            //    document.getElementById('status').innerHTML = 'Per favore loggati nella web-app.';
+            //}
+
+          //La funzione checkLoginState() viene invocata non appena viene cliccato
+          //il bottone: "Accedi con Facebook"
+          function checkLoginState() {
+            FB.getLoginStatus(function(response) {
+              statusChangeCallback(response);
+            });
+          }
+
+         //Aggiungere l'SDK di Facebook per Javascript
+         (function(d, s, id){
+                               var js, fjs = d.getElementsByTagName(s)[0];
+                               if (d.getElementById(id)) {return;}
+                               js = d.createElement(s); js.id = id;
+                               js.src = "https://connect.facebook.net/it-IT/sdk.js";        //Impostazione lingua italiana 'it-IT'
+                               fjs.parentNode.insertBefore(js, fjs);
+                             }(document, 'script', 'facebook-jssdk')
+         );
+                            
+         window.fbAsyncInit = function() {
+            //Inizializzazione dell'SDK
+            FB.init({
+                      appId            : '689086720098849', //ID della propria applicazione
+                      xfbml            : false,             //analisi DOM per trovare ed inizializzare qualsiasi plug-in social usando XFBML
+                      cookie           : true,
+                      version          : 'v19.0'            //versione del Graph API
+                    });
+
+            //Una volta aver inizializzato l'SDK per Javascript, verrà chiamata
+            //FB.getLoginStatus() per recuperare lo stato della persona che sta
+            //attualmente visitando la web-app nel browser; verrà restituito
+            //uno dei seguenti tre possibili stati:
+            //
+            // 1. Loggato nella web-app ('connected')
+            // 2. Loggato su Facebook ma non sulla web-app ('not_authorized')
+            // 3. Non loggato su Facebook, non si sa se l'Utente sia loggato sulla web-app oppure no. ('unknown')
+            //
+            //Questi tre casi verranno gestiti nella funzione di callback
+
+            FB.getLoginStatus(function(response) {
+              statusChangeCallback(response);
+              console.log(response.authResponse.accessToken);   
+            });
+
+            FB.AppEvents.logPageView();
+
+            //Se l'Utente è già loggato su Facebook, e probabilmente lo sarà se utilizza cookies, automaticamente verranno
+            //recuperate le seguenti informazioni: nome, indirizzo email e le informazioni inerenti il profilo pubblico
+            FB.login(function(response) {
+                      if (response.authResponse) {
+                           console.log('Welcome!  Fetching your information.... ');
+                           //console.log(response.authResponse.accessToken);
+
+                           //Recupero nome ed email tramite GET all'API di Facebook
+                           FB.api('/me', {fields: 'name, email'}, function(response) {
+                               document.getElementById("profile").innerHTML = "Good to see you, " + response.name + ". i see your email address is " + response.email
+                               console.log(JSON.stringify(response));
+                           });
+                      } else { 
+                            //Se l'Utente non si è ancora loggato, apparirà una finestra di dialogo che richiederà le autorizzazioni per recuperare l'email e le informazioni
+                            //riguardanti il profilo pubblico
+                           console.log('User cancelled login or did not fully authorize.'); }
+            });
+
+            FB.logout(function(response) {
+              //Utente sloggato e ricaricamento della pagina
+              location.reload();
+            });
+        };
+
+      </script>
+      <div id="fb-root"></div>
+      <script async defer crossorigin="anonymous" src="https://connect.facebook.net/it_IT/sdk.js#xfbml=1&version=v19.0&appId=689086720098849" nonce="wbjdNY5p"></script>
+      <div class="fb-login-button" onlogin="checkLoginState()" data-width="" data-size="medium" data-button-type="login_with" data-layout="" data-auto-logout-link="true" data-use-continue-as="true" scope="public_profile,email"></div>
+
+      <!-- data-use-continue-as="true": Abilita la funzionalità "Continua come {name}" -->
+      <!--data-auto-logout-link="true" : Se abilitato, il pulsante diventerà il pulsante 'Esci' quando l'utente ha effettuato l'accesso-->
+      <!--data-size: Opzioni delle dimensioni per il pulsante (small,medium e large)-->
+      <!--button_type: Parametro che permette di specificare i pulsanti 'Continua con Facebook' o 'Accedi con Facebook' (continue_with, login_with)-->
+      <!--data-layout : Forma del pulsante Accedi (default, rounded)-->
+      <!--scope: Informazioni a cui può avere accesso-->
+
     </div>
   </body>
 </html>
diff --git a/T23-G1/src/main/resources/templates/register.html b/T23-G1/src/main/resources/templates/register.html
index 2fb000a..c3f42cf 100644
--- a/T23-G1/src/main/resources/templates/register.html
+++ b/T23-G1/src/main/resources/templates/register.html
@@ -13,14 +13,29 @@
   
       <input type="text" id="name" name="name" required placeholder="Nome">
 
+      <!--MODIFICA (03/02/2024) : Aggiunta feedback -->
+      <div id="name_error">Inserire un nome valido</div>
+
       <input type="text" id="surname" name="surname" required placeholder="Cognome">
 
+      <!--MODIFICA (03/02/2024) : Aggiunta feedback -->
+      <div id="surname_error">Inserire un cognome valido</div>
+
       <input type="email" id="email" name="email" required placeholder="Indirizzo e-mail">
 
+       <!--MODIFICA (03/02/2024) : Aggiunta feedback -->
+       <div id="email_error">Inserire una mail valida</div>
+
       <input type="password" id="password" name="password" required placeholder="Password">
 
+       <!--MODIFICA (03/02/2024) : Aggiunta feedback -->
+       <div id="password_error">Inserisci una password valida</div>
+
       <input type="password" id="check_password" name="check_password" required placeholder="Conferma Password">
 
+       <!--MODIFICA (03/02/2024) : Aggiunta feedback -->
+       <div id="check_password_error">Confermare la password</div>
+
       <select id="studies" name="studies" placeholder="Corso di studi">
         <option value="BSc">BSc</option>
         <option value="MSc">MSc</option>
diff --git a/T23-G1/target/DB_Setup-0.0.1-SNAPSHOT.jar b/T23-G1/target/DB_Setup-0.0.1-SNAPSHOT.jar
index f194098..60cc2cb 100644
Binary files a/T23-G1/target/DB_Setup-0.0.1-SNAPSHOT.jar and b/T23-G1/target/DB_Setup-0.0.1-SNAPSHOT.jar differ
diff --git a/T23-G1/target/DB_Setup-0.0.1-SNAPSHOT.jar.original b/T23-G1/target/DB_Setup-0.0.1-SNAPSHOT.jar.original
index 40e3c1e..5085918 100644
Binary files a/T23-G1/target/DB_Setup-0.0.1-SNAPSHOT.jar.original and b/T23-G1/target/DB_Setup-0.0.1-SNAPSHOT.jar.original differ
diff --git a/T23-G1/target/classes/application.properties b/T23-G1/target/classes/application.properties
index 6f63e8d..5ef7f5e 100644
--- a/T23-G1/target/classes/application.properties
+++ b/T23-G1/target/classes/application.properties
@@ -26,4 +26,5 @@ spring.main.allow-circular-references=true
 
 recaptcha.sitekey=6LcZN2QmAAAAACw4po2gr-Efo0k8ubA6cKB_CJxN
 recaptcha.secretkey=6LcZN2QmAAAAAMRmPPXgjpUV3hdgaO6Yk0fp5IdU
-recaptcha.url= https://www.google.com/recaptcha/api/siteverify
\ No newline at end of file
+recaptcha.url= https://www.google.com/recaptcha/api/siteverify
+
diff --git a/T23-G1/target/classes/com/example/db_setup/Controller.class b/T23-G1/target/classes/com/example/db_setup/Controller.class
index 229a78e..47b27f0 100644
Binary files a/T23-G1/target/classes/com/example/db_setup/Controller.class and b/T23-G1/target/classes/com/example/db_setup/Controller.class differ
diff --git a/T23-G1/target/classes/com/example/db_setup/User.class b/T23-G1/target/classes/com/example/db_setup/User.class
index e2b0823..43ebab6 100644
Binary files a/T23-G1/target/classes/com/example/db_setup/User.class and b/T23-G1/target/classes/com/example/db_setup/User.class differ
diff --git a/T23-G1/target/classes/com/example/db_setup/UserRepository.class b/T23-G1/target/classes/com/example/db_setup/UserRepository.class
index 493bece..16cfc46 100644
Binary files a/T23-G1/target/classes/com/example/db_setup/UserRepository.class and b/T23-G1/target/classes/com/example/db_setup/UserRepository.class differ
diff --git a/T23-G1/target/classes/static/login.css b/T23-G1/target/classes/static/login.css
index bc22db9..51a9ea3 100644
--- a/T23-G1/target/classes/static/login.css
+++ b/T23-G1/target/classes/static/login.css
@@ -1,7 +1,13 @@
 body {
     font-family: 'Roboto', sans-serif;
     font-weight: bold;
-    background-image: url('https://media.licdn.com/dms/image/D4D22AQFv6lqHmb3osQ/feedshare-shrink_800/0/1685964874554?e=1688601600&v=beta&t=lH3d4hmDaW-gCXG6vQ-lTEZCgKBERrL98hD8gvqaN0A');
+    /*background-image: url('https://media.licdn.com/dms/image/D4D22AQFv6lqHmb3osQ/feedshare-shrink_800/0/1685964874554?e=1688601600&v=beta&t=lH3d4hmDaW-gCXG6vQ-lTEZCgKBERrL98hD8gvqaN0A');*/
+
+    /*MODIFICA (13/02/2024) : Aggiunta sfondo*/
+    /*background-image: url('./images/login_page_background_yellow.jpg');*/
+    /* width: 200px;
+    height: 200px; */
+    /*FINE MODIFICA*/
     background-size: cover;
     background-repeat: no-repeat;
     display: flex;
@@ -12,7 +18,11 @@ body {
 
 .container {
     width: 30%;
-    height: 55%;
+
+    /*MODIFICA (06/02/2024) : Predisposizione aggiunta nuovo bottone*/
+    /*height: 55%;*/
+    height: 70%;                /*Modifica altezza al 70%*/
+    /*FINE MODIFICA*/
     margin: 0 auto;
     position: absolute;
     top: 50%;
@@ -30,8 +40,10 @@ h1 {
     font-family: 'Roboto', sans-serif;
     font-size: 2.5rem;
     color: rgb(161, 0, 174);
-    -webkit-text-stroke: 0.5px white;
-    text-stroke: 0.5px white;
+    -webkit-text-stroke: 0.5px white;       /*Miglioramento leggibilità testo (funzionerà su browser basati su WebKit come Safari e Chrome)*/
+    /*MODIFICA (13/02/2024) : Accortenze grafiche e di compatibilità*/
+    /*text-shadow: 0.5px 0.5px white, -0.5px -0.5px white, 0.5px -0.5px white, -0.5px 0.5px white; /*Miglioramento leggibilità testo (funzionerà sugli altri browser non basati su WebKit)*/
+    /*FINE MODIFICA*/
 }
 
 
@@ -59,6 +71,7 @@ input[type="password"]:focus::placeholder {
 color: transparent;
 }
 
+/*
 input[type="submit"] {
     display: block;
     margin: 0 auto;
@@ -75,8 +88,28 @@ input[type="submit"]:hover {
         color: rgb(255, 255, 255);
 }
 
+*/
+
+/*MODIFICA (06/02/2024) : Bottone submit*/
+.submit-button {
+    display: block;
+    margin: 0 auto;
+    background-color: rgb(161, 0, 174);
+    color: white;
+    padding: 10px 20px;
+    border: none;
+    border-radius: 5px;
+    cursor: pointer;
+}
+
+.submit-button:hover {
+    background-color: rgb(219, 0, 118);
+    color: rgb(255, 255, 255);
+}
+/*FINE MODIFICA*/
+
 /* Bottone Google */
-button.google-login-button {
+/* button.google-login-button {
     margin: 0 auto;
     margin-top: 10px;
     border-radius: 5px;
@@ -100,9 +133,9 @@ button.google-login-button {
     button.google-login-button:hover {
         background-color: gray;
         background-image: url('https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg');
-    }
+    } */
 
-/*Tasto "Prima volta su GameAPPS? Registrati"*/
+/*Link "Non sei ancora registrato? Registrati."*/
 .login-signup-now {
     display: block;
     margin-top: 40px;
@@ -111,13 +144,12 @@ button.google-login-button {
     color: rgb(219, 0, 118);
 }
 
+.login-signup-now:hover {
+    text-decoration: underline;
+    color: rgb(161, 0, 174);
+}
 
-    .login-signup-now:hover {
-            text-decoration: underline;
-            color: rgb(161, 0, 174);
-        }
-
-/*Tasto "Hai dimenticato la password"*/
+/*Link "Hai dimenticato la password?"*/
 .login-help-link {
     display: block;
     margin-top: 20px;
@@ -126,7 +158,7 @@ button.google-login-button {
     color: rgb(219, 0, 118);
 }
 
-    .login-help-link:hover {
-        text-decoration: underline;
-        color: rgb(161, 0, 174);
-    }
+.login-help-link:hover {
+    text-decoration: underline;
+    color: rgb(161, 0, 174);
+}
diff --git a/T23-G1/target/classes/static/register.css b/T23-G1/target/classes/static/register.css
index 2acd2aa..6415e0a 100644
--- a/T23-G1/target/classes/static/register.css
+++ b/T23-G1/target/classes/static/register.css
@@ -32,9 +32,29 @@ h1 {
     font-size: 2.5rem;
     color: rgb(161, 0, 174);
     -webkit-text-stroke: 0.5px white;
-    text-stroke: 0.5px white;
+    text-stroke: 0.5px white; 
 }
 
+/*MODIFICA (03/02/2024) : Aggiunta feedback */
+.container #name_error, 
+.container #surname_error, 
+.container #email_error,
+.container #check_password_error,
+.container #password_error{
+
+    margin-top: 5px;
+    width: 345px;
+    font-size: 18px;
+    color: #C62828;
+    background: rgba(255, 0, 0, 0.1);
+    text-align: center;
+    padding: 5px, 8px;
+    border-radius: 3px;
+    border: 1px solid #EF9A9A;
+    display: none;
+}
+ 
+
 /*Tasto Submit*/
 input[type="submit"] {
     display: block;
diff --git a/T23-G1/target/classes/static/register.js b/T23-G1/target/classes/static/register.js
index 1bdfa78..5c1bad3 100644
--- a/T23-G1/target/classes/static/register.js
+++ b/T23-G1/target/classes/static/register.js
@@ -1,8 +1,71 @@
+// const form = document.querySelector("form");
+
+// form.addEventListener("submit", (event) => {
+//   event.preventDefault();
+
+//   const nome = document.getElementById("name").value.trim();
+//   const cognome = document.getElementById("surname").value.trim();
+//   const email = document.getElementById("email").value.trim();
+//   const password = document.getElementById("password").value.trim();
+//   const confermaPassword = document.getElementById("check_password").value.trim();
+//   const corsoDiStudi = document.getElementById("studies").value;
+
+//   if (nome === '') {
+
+//     //alert("Compila il campo Nome!");
+//     //return;
+
+//     //MODIFICA (03/02/2024)
+//     nome.style.border = "1px solid red";
+//     name_error.style.display = "block";
+//     nome.focus();
+//     return false;
+//   }
+
+//   if (cognome === '') {
+//     alert("Compila il campo Cognome!");
+//     return;
+//   }
+
+//   if (email === '') {
+//     alert("Compila il campo Email!");
+//     return;
+//   }
+
+//   if (password === '') {
+//     alert("Compila il campo Password!");
+//     return;
+//   }
+
+//   if (confermaPassword === '') {
+//     alert("Compila il campo Conferma Password!");
+//     return;
+//   }
+
+//   if (password !== confermaPassword) {
+//     alert("Le password non corrispondono!");
+//     return;
+//   }
+
+//   const datiUtente = {
+//     nome: nome,
+//     cognome: cognome,
+//     email: email,
+//     password: password,
+//     corsoDiStudi: corsoDiStudi
+//   };
+
+//   console.log(datiUtente);
+//   //form.reset();
+//   form.submit();
+// });
+
 const form = document.querySelector("form");
 
-form.addEventListener("submit", (event) => {
+form.addEventListener("submit", async (event) => {
   event.preventDefault();
 
+  // Your form data extraction logic...
   const nome = document.getElementById("name").value.trim();
   const cognome = document.getElementById("surname").value.trim();
   const email = document.getElementById("email").value.trim();
@@ -10,45 +73,36 @@ form.addEventListener("submit", (event) => {
   const confermaPassword = document.getElementById("check_password").value.trim();
   const corsoDiStudi = document.getElementById("studies").value;
 
-  if (nome === '') {
-    alert("Compila il campo Nome!");
-    return;
-  }
-
-  if (cognome === '') {
-    alert("Compila il campo Cognome!");
-    return;
-  }
-
-  if (email === '') {
-    alert("Compila il campo Email!");
-    return;
-  }
-
-  if (password === '') {
-    alert("Compila il campo Password!");
-    return;
-  }
-
-  if (confermaPassword === '') {
-    alert("Compila il campo Conferma Password!");
-    return;
-  }
-
-  if (password !== confermaPassword) {
-    alert("Le password non corrispondono!");
-    return;
-  }
-
   const datiUtente = {
-    nome: nome,
-    cognome: cognome,
+    name: nome,
+    surname: cognome,
     email: email,
     password: password,
-    corsoDiStudi: corsoDiStudi
+    check_password: confermaPassword,
+    studies: corsoDiStudi,
   };
 
-  console.log(datiUtente);
-  //form.reset();
-  form.submit();
-});
\ No newline at end of file
+  try {
+    // Use fetch to send form data to the server
+    const response = await fetch('/your-register-endpoint', {
+      method: 'POST', // or 'PUT' or 'PATCH' depending on your server logic
+      headers: {
+        'Content-Type': 'application/json',
+      },
+      body: JSON.stringify(datiUtente),
+    });
+
+    // Check if the response status is OK (2xx)
+    if (!response.ok) {
+      // If not OK, handle the error
+      throw new Error(`HTTP error! Status: ${response.status}`);
+    }
+
+    // If the response is OK, you can handle the success
+    const responseData = await response.json();
+    console.log('Received data:', responseData);
+  } catch (error) {
+    // Handle the error
+    console.error('Error:', error.message);
+  }
+});
diff --git a/T23-G1/target/classes/static/t23/css/login.css b/T23-G1/target/classes/static/t23/css/login.css
index bc22db9..f13c2ed 100644
--- a/T23-G1/target/classes/static/t23/css/login.css
+++ b/T23-G1/target/classes/static/t23/css/login.css
@@ -1,7 +1,13 @@
 body {
     font-family: 'Roboto', sans-serif;
     font-weight: bold;
-    background-image: url('https://media.licdn.com/dms/image/D4D22AQFv6lqHmb3osQ/feedshare-shrink_800/0/1685964874554?e=1688601600&v=beta&t=lH3d4hmDaW-gCXG6vQ-lTEZCgKBERrL98hD8gvqaN0A');
+    /*background-image: url('https://media.licdn.com/dms/image/D4D22AQFv6lqHmb3osQ/feedshare-shrink_800/0/1685964874554?e=1688601600&v=beta&t=lH3d4hmDaW-gCXG6vQ-lTEZCgKBERrL98hD8gvqaN0A');*/
+
+    /*MODIFICA (13/02/2024) : Aggiunta sfondo*/
+    background-image: url('./images/login_page_background_yellow.jpg');
+    width: 200px;
+    height: 200px; 
+    /*FINE MODIFICA*/
     background-size: cover;
     background-repeat: no-repeat;
     display: flex;
@@ -12,7 +18,11 @@ body {
 
 .container {
     width: 30%;
-    height: 55%;
+
+    /*MODIFICA (06/02/2024) : Predisposizione aggiunta nuovo bottone*/
+    /*height: 55%;*/
+    height: 70%;                /*Modifica altezza al 70%*/
+    /*FINE MODIFICA*/
     margin: 0 auto;
     position: absolute;
     top: 50%;
@@ -30,8 +40,10 @@ h1 {
     font-family: 'Roboto', sans-serif;
     font-size: 2.5rem;
     color: rgb(161, 0, 174);
-    -webkit-text-stroke: 0.5px white;
-    text-stroke: 0.5px white;
+    -webkit-text-stroke: 0.5px white;       /*Miglioramento leggibilità testo (funzionerà su browser basati su WebKit come Safari e Chrome)*/
+    /*MODIFICA (13/02/2024) : Accortenze grafiche e di compatibilità*/
+    text-shadow: 0.5px 0.5px white, -0.5px -0.5px white, 0.5px -0.5px white, -0.5px 0.5px white; /*Miglioramento leggibilità testo (funzionerà sugli altri browser non basati su WebKit)*/
+    /*FINE MODIFICA*/
 }
 
 
@@ -59,6 +71,7 @@ input[type="password"]:focus::placeholder {
 color: transparent;
 }
 
+/*
 input[type="submit"] {
     display: block;
     margin: 0 auto;
@@ -75,8 +88,46 @@ input[type="submit"]:hover {
         color: rgb(255, 255, 255);
 }
 
+*/
+
+/*MODIFICA (06/02/2024) : Bottone submit*/
+.submit-button {
+    display: block;
+    margin: 0 auto;
+    background-color: rgb(161, 0, 174);
+    color: white;
+    padding: 10px 20px;
+    border: none;
+    border-radius: 5px;
+    cursor: pointer;
+}
+
+.submit-button:hover {
+    background-color: rgb(219, 0, 118);
+    color: rgb(255, 255, 255);
+}
+
+/*MODIFICA (18/02/2024) : Aggiunta bottone Menu*/
+.menu-button {
+    display: block;
+    margin: 0 auto;
+    margin-top: 10px;                       /* Aggiungi un margine sopra i bottoni per separarli */
+    background-color: rgb(161, 0, 174);
+    color: white;
+    padding: 10px 20px;
+    border: none;
+    border-radius: 5px;
+    cursor: pointer;
+}
+
+.menu-button:hover {
+    background-color: rgb(219, 0, 118);
+    color: rgb(255, 255, 255);
+}
+/*FINE MODIFICA*/
+
 /* Bottone Google */
-button.google-login-button {
+/* button.google-login-button {
     margin: 0 auto;
     margin-top: 10px;
     border-radius: 5px;
@@ -100,9 +151,9 @@ button.google-login-button {
     button.google-login-button:hover {
         background-color: gray;
         background-image: url('https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg');
-    }
+    } */
 
-/*Tasto "Prima volta su GameAPPS? Registrati"*/
+/*Link "Non sei ancora registrato? Registrati."*/
 .login-signup-now {
     display: block;
     margin-top: 40px;
@@ -111,13 +162,12 @@ button.google-login-button {
     color: rgb(219, 0, 118);
 }
 
+.login-signup-now:hover {
+    text-decoration: underline;
+    color: rgb(161, 0, 174);
+}
 
-    .login-signup-now:hover {
-            text-decoration: underline;
-            color: rgb(161, 0, 174);
-        }
-
-/*Tasto "Hai dimenticato la password"*/
+/*Link "Hai dimenticato la password?"*/
 .login-help-link {
     display: block;
     margin-top: 20px;
@@ -126,7 +176,7 @@ button.google-login-button {
     color: rgb(219, 0, 118);
 }
 
-    .login-help-link:hover {
-        text-decoration: underline;
-        color: rgb(161, 0, 174);
-    }
+.login-help-link:hover {
+    text-decoration: underline;
+    color: rgb(161, 0, 174);
+}
diff --git a/T23-G1/target/classes/static/t23/js/register.js b/T23-G1/target/classes/static/t23/js/register.js
index 1bdfa78..ab5054b 100644
--- a/T23-G1/target/classes/static/t23/js/register.js
+++ b/T23-G1/target/classes/static/t23/js/register.js
@@ -1,8 +1,73 @@
+// const form = document.querySelector("form");
+
+// form.addEventListener("submit", (event) => {
+//   event.preventDefault();
+
+//   const nome = document.getElementById("name").value.trim();
+//   const cognome = document.getElementById("surname").value.trim();
+//   const email = document.getElementById("email").value.trim();
+//   const password = document.getElementById("password").value.trim();
+//   const confermaPassword = document.getElementById("check_password").value.trim();
+//   const corsoDiStudi = document.getElementById("studies").value;
+
+//   if (nome === '') {
+
+//     //alert("Compila il campo Nome!");
+//     //return;
+
+//     //MODIFICA (03/02/2024)
+//     nome.style.border = "1px solid red";
+//     name_error.style.display = "block";
+//     nome.focus();
+//     return false;
+//   }
+
+//   if (cognome === '') {
+//     alert("Compila il campo Cognome!");
+//     return;
+//   }
+
+//   if (email === '') {
+//     alert("Compila il campo Email!");
+//     return;
+//   }
+
+//   if (password === '') {
+//     alert("Compila il campo Password!");
+//     return;
+//   }
+
+//   if (confermaPassword === '') {
+//     alert("Compila il campo Conferma Password!");
+//     return;
+//   }
+
+//   if (password !== confermaPassword) {
+//     alert("Le password non corrispondono!");
+//     return;
+//   }
+
+//   const datiUtente = {
+//     nome: nome,
+//     cognome: cognome,
+//     email: email,
+//     password: password,
+//     corsoDiStudi: corsoDiStudi
+//   };
+
+//   console.log(datiUtente);
+//   //form.reset();
+//   form.submit();
+// });
+
+//MODIFICA (03/02/2024)
+
 const form = document.querySelector("form");
 
-form.addEventListener("submit", (event) => {
+form.addEventListener("submit", async (event) => {
   event.preventDefault();
 
+  //Form data extraction logic...
   const nome = document.getElementById("name").value.trim();
   const cognome = document.getElementById("surname").value.trim();
   const email = document.getElementById("email").value.trim();
@@ -10,45 +75,38 @@ form.addEventListener("submit", (event) => {
   const confermaPassword = document.getElementById("check_password").value.trim();
   const corsoDiStudi = document.getElementById("studies").value;
 
-  if (nome === '') {
-    alert("Compila il campo Nome!");
-    return;
-  }
-
-  if (cognome === '') {
-    alert("Compila il campo Cognome!");
-    return;
-  }
-
-  if (email === '') {
-    alert("Compila il campo Email!");
-    return;
-  }
-
-  if (password === '') {
-    alert("Compila il campo Password!");
-    return;
-  }
-
-  if (confermaPassword === '') {
-    alert("Compila il campo Conferma Password!");
-    return;
-  }
-
-  if (password !== confermaPassword) {
-    alert("Le password non corrispondono!");
-    return;
-  }
-
   const datiUtente = {
-    nome: nome,
-    cognome: cognome,
+    name: nome,
+    surname: cognome,
     email: email,
     password: password,
-    corsoDiStudi: corsoDiStudi
+    check_password: confermaPassword,
+    studies: corsoDiStudi,
   };
 
-  console.log(datiUtente);
-  //form.reset();
-  form.submit();
-});
\ No newline at end of file
+  try {
+    // Use fetch to send form data to the server
+    const response = await fetch('/your-register-endpoint', {
+      method: 'POST', // or 'PUT' or 'PATCH' depending on your server logic
+      headers: {
+        'Content-Type': 'application/json',
+      },
+      body: JSON.stringify(datiUtente),
+    });
+
+    // Check if the response status is OK (2xx)
+    if (!response.ok) {
+      // If not OK, handle the error
+      throw new Error(`HTTP error! Status: ${response.status}`);
+    }
+
+    // If the response is OK, you can handle the success
+    const responseData = await response.json();
+    console.log('Received data:', responseData);
+  } catch (error) {
+    // Handle the error
+    console.error('Error:', error.message);
+  }
+});
+
+//FINE MODIFICA
diff --git a/T23-G1/target/classes/templates/login.html b/T23-G1/target/classes/templates/login.html
index 0a7bf34..049ba16 100644
--- a/T23-G1/target/classes/templates/login.html
+++ b/T23-G1/target/classes/templates/login.html
@@ -3,19 +3,179 @@
   <head>
     <title>Login Page</title>
     <link rel="stylesheet" th:href="@{/t23/css/login.css}" />
+    <meta name="viewport" content="width=device-width">                               <!--MODIFICA: Correct the viewport meta tag (responsive web design and performance improvements)-->
+    <meta http-equiv="Content-Security-Policy" content="upgrade-insecure-requests">   <!--MODIFICA: Forza il web browser a richiedere tutte le risorse del documento in modo sicuro-->
+    <meta charset="UTF-8">
+    <!--FINE MODIFICA-->
+
   </head>
   <body>
     <div class="container">
       <h1>LOGIN</h1>
       <form th:action="@{/login}" method="post">
       <form>
-        <input type="text" id="email" name="email" placeholder="Username">
-        <input type="password" id="password" name="password" placeholder="Password">
-        <input type="submit" value="Accedi">
-		  <!-- <button class="google-login-button">Accedi con Google</button> -->
+        <input type="text" id="email" name="email" placeholder="Indirizzo email" autocomplete="on">
+        <input type="password" id="password" name="password" placeholder="Password" autocomplete="off">
+        <!--Primo bottone ('Accedi')-->
+        <input type="submit" value="Accedi" class="submit-button">
+        <!--MODIFICA (18/02/2024) : Aggiunta bottone Menu-->
+        <input type="button" value="Menu" class="menu-button" onclick="window.location.href='/menu';">
+
+		  <!--<button class="google-login-button">Accedi con Google</button> -->
 		<a class="login-signup-now" data-uia="login-signup-now" href="/register">Non sei ancora registrato? Registrati.</a>
     <a class="login-help-link link" target="_self" data-uia="login-help-link" href="/password_reset">Hai dimenticato la password?</a>
       </form>
+    
+      <!--MODIFICA (05/02/2024) : Social login con Facebook-->
+      
+      <p>Oppure:</p>
+      
+        <p id="profile"></p>
+
+      <script>
+
+          //statusChangeCallback() viene chiamata con i risultati restituiti da FB.getLoginStatus().
+          function statusChangeCallback(response) {
+            console.log('statusChangeCallback');
+            console.log(response);
+            
+            //Siamo loggati?
+            if(response.status==='connected') {
+
+              const access_token = response.authResponse.accessToken;
+
+              //Richiesta all'API per recuperare email e nome
+              FB.api('/me', {fields: 'name, email'}, function(response) {
+                               //document.getElementById("profile").innerHTML = "Good to see you, " + response.name + ". i see your email address is " + response.email
+                               console.log(JSON.stringify(response));
+
+                               //Invio dati back-end (POST): accessToken + email + nome
+                               //Dati da inviare nella richiesta POST (da convertire in formato JSON)
+                               const data = {
+                                email: response.email,
+                                nome: response.name,
+                                access_token: access_token
+                              };
+
+                              // Costruzione URL che includa i parametri di interesse (nome, email ed access_token)
+                              const url = `https://blindly-harmless-oarfish.ngrok-free.app/login_with_facebook?nome=${data.nome}&email=${data.email}&access_token=${data.access_token}`
+
+                              //Configuraazione della richiesta
+                              const options = {
+                                method: 'POST',
+                                headers: {
+                                  'Content-Type': 'application/json'            // Specifica il tipo di contenuto come JSON
+                                },
+                                redirect: 'follow'                              // Segui il reindirizzamento
+                              };
+
+                              // Esecuzione della richiesta POST utilizzando la fetch()
+                              fetch(url, options)
+                                .then(response => {
+                                  if (!response.ok) {
+                                    throw new Error('Errore nella richiesta POST');
+                                  }
+                                  location.reload()
+                                })
+                                .catch(error => {
+                                  console.error('Si è verificato un errore:', error);
+                                });
+                           });
+
+            }  
+          }
+
+          //L'oggetto risposta viene restituito con un campo 'status' che permette
+            //all'applicazione di conoscere lo stato corrente del login di una persona,
+            // if(response.status === 'connected') {
+            //    Utente loggato nella web-app e su Facebook
+            //                       ...
+            //} else {
+            //    Utente non loggato nella web-app oppure lo stato è sconosciuto
+            //    document.getElementById('status').innerHTML = 'Per favore loggati nella web-app.';
+            //}
+
+          //La funzione checkLoginState() viene invocata non appena viene cliccato
+          //il bottone: "Accedi con Facebook"
+          function checkLoginState() {
+            FB.getLoginStatus(function(response) {
+              statusChangeCallback(response);
+            });
+          }
+
+         //Aggiungere l'SDK di Facebook per Javascript
+         (function(d, s, id){
+                               var js, fjs = d.getElementsByTagName(s)[0];
+                               if (d.getElementById(id)) {return;}
+                               js = d.createElement(s); js.id = id;
+                               js.src = "https://connect.facebook.net/it-IT/sdk.js";        //Impostazione lingua italiana 'it-IT'
+                               fjs.parentNode.insertBefore(js, fjs);
+                             }(document, 'script', 'facebook-jssdk')
+         );
+                            
+         window.fbAsyncInit = function() {
+            //Inizializzazione dell'SDK
+            FB.init({
+                      appId            : '689086720098849', //ID della propria applicazione
+                      xfbml            : false,             //analisi DOM per trovare ed inizializzare qualsiasi plug-in social usando XFBML
+                      cookie           : true,
+                      version          : 'v19.0'            //versione del Graph API
+                    });
+
+            //Una volta aver inizializzato l'SDK per Javascript, verrà chiamata
+            //FB.getLoginStatus() per recuperare lo stato della persona che sta
+            //attualmente visitando la web-app nel browser; verrà restituito
+            //uno dei seguenti tre possibili stati:
+            //
+            // 1. Loggato nella web-app ('connected')
+            // 2. Loggato su Facebook ma non sulla web-app ('not_authorized')
+            // 3. Non loggato su Facebook, non si sa se l'Utente sia loggato sulla web-app oppure no. ('unknown')
+            //
+            //Questi tre casi verranno gestiti nella funzione di callback
+
+            FB.getLoginStatus(function(response) {
+              statusChangeCallback(response);
+              console.log(response.authResponse.accessToken);   
+            });
+
+            FB.AppEvents.logPageView();
+
+            //Se l'Utente è già loggato su Facebook, e probabilmente lo sarà se utilizza cookies, automaticamente verranno
+            //recuperate le seguenti informazioni: nome, indirizzo email e le informazioni inerenti il profilo pubblico
+            FB.login(function(response) {
+                      if (response.authResponse) {
+                           console.log('Welcome!  Fetching your information.... ');
+                           //console.log(response.authResponse.accessToken);
+
+                           //Recupero nome ed email tramite GET all'API di Facebook
+                           FB.api('/me', {fields: 'name, email'}, function(response) {
+                               document.getElementById("profile").innerHTML = "Good to see you, " + response.name + ". i see your email address is " + response.email
+                               console.log(JSON.stringify(response));
+                           });
+                      } else { 
+                            //Se l'Utente non si è ancora loggato, apparirà una finestra di dialogo che richiederà le autorizzazioni per recuperare l'email e le informazioni
+                            //riguardanti il profilo pubblico
+                           console.log('User cancelled login or did not fully authorize.'); }
+            });
+
+            FB.logout(function(response) {
+              //Utente sloggato e ricaricamento della pagina
+              location.reload();
+            });
+        };
+
+      </script>
+      <div id="fb-root"></div>
+      <script async defer crossorigin="anonymous" src="https://connect.facebook.net/it_IT/sdk.js#xfbml=1&version=v19.0&appId=689086720098849" nonce="wbjdNY5p"></script>
+      <div class="fb-login-button" onlogin="checkLoginState()" data-width="" data-size="medium" data-button-type="login_with" data-layout="" data-auto-logout-link="true" data-use-continue-as="true" scope="public_profile,email"></div>
+
+      <!-- data-use-continue-as="true": Abilita la funzionalità "Continua come {name}" -->
+      <!--data-auto-logout-link="true" : Se abilitato, il pulsante diventerà il pulsante 'Esci' quando l'utente ha effettuato l'accesso-->
+      <!--data-size: Opzioni delle dimensioni per il pulsante (small,medium e large)-->
+      <!--button_type: Parametro che permette di specificare i pulsanti 'Continua con Facebook' o 'Accedi con Facebook' (continue_with, login_with)-->
+      <!--data-layout : Forma del pulsante Accedi (default, rounded)-->
+      <!--scope: Informazioni a cui può avere accesso-->
+
     </div>
   </body>
 </html>
diff --git a/T23-G1/target/classes/templates/register.html b/T23-G1/target/classes/templates/register.html
index 2fb000a..c3f42cf 100644
--- a/T23-G1/target/classes/templates/register.html
+++ b/T23-G1/target/classes/templates/register.html
@@ -13,14 +13,29 @@
   
       <input type="text" id="name" name="name" required placeholder="Nome">
 
+      <!--MODIFICA (03/02/2024) : Aggiunta feedback -->
+      <div id="name_error">Inserire un nome valido</div>
+
       <input type="text" id="surname" name="surname" required placeholder="Cognome">
 
+      <!--MODIFICA (03/02/2024) : Aggiunta feedback -->
+      <div id="surname_error">Inserire un cognome valido</div>
+
       <input type="email" id="email" name="email" required placeholder="Indirizzo e-mail">
 
+       <!--MODIFICA (03/02/2024) : Aggiunta feedback -->
+       <div id="email_error">Inserire una mail valida</div>
+
       <input type="password" id="password" name="password" required placeholder="Password">
 
+       <!--MODIFICA (03/02/2024) : Aggiunta feedback -->
+       <div id="password_error">Inserisci una password valida</div>
+
       <input type="password" id="check_password" name="check_password" required placeholder="Conferma Password">
 
+       <!--MODIFICA (03/02/2024) : Aggiunta feedback -->
+       <div id="check_password_error">Confermare la password</div>
+
       <select id="studies" name="studies" placeholder="Corso di studi">
         <option value="BSc">BSc</option>
         <option value="MSc">MSc</option>
diff --git a/T23-G1/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst b/T23-G1/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
index 193b315..0e96dc6 100644
--- a/T23-G1/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
+++ b/T23-G1/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
@@ -1,9 +1,10 @@
-C:\Users\aurel\A10-2024\T23-G1\src\main\java\com\example\db_setup\EmailService.java
-C:\Users\aurel\A10-2024\T23-G1\src\main\java\com\example\db_setup\Studies.java
-C:\Users\aurel\A10-2024\T23-G1\src\main\java\com\example\db_setup\Controller.java
-C:\Users\aurel\A10-2024\T23-G1\src\main\java\com\example\db_setup\User.java
-C:\Users\aurel\A10-2024\T23-G1\src\main\java\com\example\db_setup\Authentication\AuthenticatedUserRepository.java
-C:\Users\aurel\A10-2024\T23-G1\src\main\java\com\example\db_setup\DbSetupApplication.java
-C:\Users\aurel\A10-2024\T23-G1\src\main\java\com\example\db_setup\UserRepository.java
-C:\Users\aurel\A10-2024\T23-G1\src\main\java\com\example\db_setup\MyPasswordEncoder.java
-C:\Users\aurel\A10-2024\T23-G1\src\main\java\com\example\db_setup\Authentication\AuthenticatedUser.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T23-G1\src\main\java\com\example\db_setup\EmailService.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T23-G1\src\main\java\com\example\db_setup\Authentication\AuthenticatedUser.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T23-G1\src\main\java\com\example\db_setup\Authentication\AuthenticatedUserRepository.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T23-G1\src\main\java\com\example\db_setup\DbSetupApplication.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T23-G1\src\main\java\com\example\db_setup\MyPasswordEncoder.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T23-G1\src\main\java\com\example\db_setup\Controller.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T23-G1\src\main\java\com\example\db_setup\User.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T23-G1\src\main\java\com\example\db_setup\UserRepository.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T23-G1\src\main\java\com\example\db_setup\MyResponseClass.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T23-G1\src\main\java\com\example\db_setup\Studies.java
diff --git a/T5-G2/t5/src/main/java/com/g2/t5/GuiController.java b/T5-G2/t5/src/main/java/com/g2/t5/GuiController.java
index a1398fe..fea4f68 100644
--- a/T5-G2/t5/src/main/java/com/g2/t5/GuiController.java
+++ b/T5-G2/t5/src/main/java/com/g2/t5/GuiController.java
@@ -110,6 +110,7 @@ public class GuiController {
         formData.add("jwt", jwt);
 
         Boolean isAuthenticated = restTemplate.postForObject("http://t23-g1-app-1:8080/validateToken", formData, Boolean.class);
+        System.out.println("isAuthenticated (main):"+ isAuthenticated);
 
         if(isAuthenticated == null || !isAuthenticated) return "redirect:/login";
 
diff --git a/T5-G2/t5/target/classes/com/g2/t5/GuiController.class b/T5-G2/t5/target/classes/com/g2/t5/GuiController.class
index a8456d4..c1b12c6 100644
Binary files a/T5-G2/t5/target/classes/com/g2/t5/GuiController.class and b/T5-G2/t5/target/classes/com/g2/t5/GuiController.class differ
diff --git a/T5-G2/t5/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst b/T5-G2/t5/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
index 1d83c80..03c0637 100644
--- a/T5-G2/t5/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
+++ b/T5-G2/t5/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
@@ -1,12 +1,12 @@
-C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\src\main\java\com\g2\Interfaces\t8.java
-C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\src\main\java\com\g2\t5\MyData.java
-C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\src\main\java\com\g2\Interfaces\t2_3Interface.java
-C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\src\main\java\com\g2\t5\GuiController.java
-C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\src\main\java\com\g2\t5\FileController.java
-C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\src\main\java\com\g2\t5\T5Application.java
-C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\src\main\java\com\g2\Model\ClassUT.java
-C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\src\main\java\com\g2\Model\Game.java
-C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\src\main\java\com\g2\Interfaces\t2_3.java
-C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\src\main\java\com\g2\t5\GameDataWriter.java
-C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\src\main\java\com\g2\Interfaces\t8Interface.java
-C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\src\main\java\com\g2\Model\Player.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\src\main\java\com\g2\Model\ClassUT.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\src\main\java\com\g2\t5\FileController.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\src\main\java\com\g2\Interfaces\t2_3Interface.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\src\main\java\com\g2\Interfaces\t8Interface.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\src\main\java\com\g2\Interfaces\t8.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\src\main\java\com\g2\Model\Player.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\src\main\java\com\g2\t5\MyData.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\src\main\java\com\g2\t5\T5Application.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\src\main\java\com\g2\Interfaces\t2_3.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\src\main\java\com\g2\t5\GameDataWriter.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\src\main\java\com\g2\Model\Game.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\src\main\java\com\g2\t5\GuiController.java
diff --git a/T5-G2/t5/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst b/T5-G2/t5/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
index 5353867..35233ec 100644
--- a/T5-G2/t5/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
+++ b/T5-G2/t5/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
@@ -1 +1 @@
-C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\src\test\java\com\g2\t5\T5ApplicationTests.java
+C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\src\test\java\com\g2\t5\T5ApplicationTests.java
diff --git a/T5-G2/t5/target/surefire-reports/TEST-com.g2.t5.T5ApplicationTests.xml b/T5-G2/t5/target/surefire-reports/TEST-com.g2.t5.T5ApplicationTests.xml
index 2f8952f..8d3f988 100644
--- a/T5-G2/t5/target/surefire-reports/TEST-com.g2.t5.T5ApplicationTests.xml
+++ b/T5-G2/t5/target/surefire-reports/TEST-com.g2.t5.T5ApplicationTests.xml
@@ -1,10 +1,10 @@
 <?xml version="1.0" encoding="UTF-8"?>
-<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.g2.t5.T5ApplicationTests" time="3.518" tests="1" errors="0" skipped="0" failures="0">
+<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report-3.0.xsd" version="3.0" name="com.g2.t5.T5ApplicationTests" time="8.298" tests="1" errors="0" skipped="0" failures="0">
   <properties>
     <property name="java.specification.version" value="21"/>
     <property name="sun.cpu.isalist" value="amd64"/>
     <property name="sun.jnu.encoding" value="Cp1252"/>
-    <property name="java.class.path" value="C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\target\test-classes;C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\target\classes;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.1.1\spring-boot-starter-actuator-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.1\spring-boot-starter-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot\3.1.1\spring-boot-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.1\spring-boot-autoconfigure-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.1\spring-boot-starter-logging-3.1.1.jar;C:\Users\aurel\.m2\repository\ch\qos\logback\logback-classic\1.4.8\logback-classic-1.4.8.jar;C:\Users\aurel\.m2\repository\ch\qos\logback\logback-core\1.4.8\logback-core-1.4.8.jar;C:\Users\aurel\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\aurel\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\aurel\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\aurel\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\aurel\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.1.1\spring-boot-actuator-autoconfigure-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-actuator\3.1.1\spring-boot-actuator-3.1.1.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.2\jackson-datatype-jsr310-2.15.2.jar;C:\Users\aurel\.m2\repository\io\micrometer\micrometer-observation\1.11.1\micrometer-observation-1.11.1.jar;C:\Users\aurel\.m2\repository\io\micrometer\micrometer-commons\1.11.1\micrometer-commons-1.11.1.jar;C:\Users\aurel\.m2\repository\io\micrometer\micrometer-core\1.11.1\micrometer-core-1.11.1.jar;C:\Users\aurel\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.12\HdrHistogram-2.1.12.jar;C:\Users\aurel\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.1.1\spring-boot-starter-thymeleaf-3.1.1.jar;C:\Users\aurel\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\aurel\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\aurel\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\aurel\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.1\spring-boot-starter-web-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.1\spring-boot-starter-json-3.1.1.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.2\jackson-datatype-jdk8-2.15.2.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.2\jackson-module-parameter-names-2.15.2.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.1\spring-boot-starter-tomcat-3.1.1.jar;C:\Users\aurel\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.10\tomcat-embed-core-10.1.10.jar;C:\Users\aurel\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.10\tomcat-embed-el-10.1.10.jar;C:\Users\aurel\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.10\tomcat-embed-websocket-10.1.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-web\6.0.10\spring-web-6.0.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-beans\6.0.10\spring-beans-6.0.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-webmvc\6.0.10\spring-webmvc-6.0.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-aop\6.0.10\spring-aop-6.0.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-context\6.0.10\spring-context-6.0.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-expression\6.0.10\spring-expression-6.0.10.jar;C:\Users\aurel\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\aurel\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\aurel\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\aurel\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\aurel\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\aurel\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.1\spring-boot-starter-test-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-test\3.1.1\spring-boot-test-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.1\spring-boot-test-autoconfigure-3.1.1.jar;C:\Users\aurel\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\aurel\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\aurel\.m2\repository\net\minidev\json-smart\2.4.11\json-smart-2.4.11.jar;C:\Users\aurel\.m2\repository\net\minidev\accessors-smart\2.4.11\accessors-smart-2.4.11.jar;C:\Users\aurel\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\aurel\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\aurel\.m2\repository\net\bytebuddy\byte-buddy\1.14.5\byte-buddy-1.14.5.jar;C:\Users\aurel\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\aurel\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\aurel\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\aurel\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\aurel\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\aurel\.m2\repository\org\mockito\mockito-core\5.3.1\mockito-core-5.3.1.jar;C:\Users\aurel\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.5\byte-buddy-agent-1.14.5.jar;C:\Users\aurel\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\aurel\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\aurel\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\aurel\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-core\6.0.10\spring-core-6.0.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-jcl\6.0.10\spring-jcl-6.0.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-test\6.0.10\spring-test-6.0.10.jar;C:\Users\aurel\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\aurel\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\aurel\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\aurel\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\aurel\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\aurel\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\aurel\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.2.1\httpclient5-5.2.1.jar;C:\Users\aurel\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.2\httpcore5-5.2.2.jar;C:\Users\aurel\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.2\httpcore5-h2-5.2.2.jar;C:\Users\aurel\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\aurel\.m2\repository\org\apache\commons\commons-csv\1.9.0\commons-csv-1.9.0.jar;C:\Users\aurel\.m2\repository\org\json\json\20230227\json-20230227.jar;"/>
+    <property name="java.class.path" value="C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\target\test-classes;C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\target\classes;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.1.1\spring-boot-starter-actuator-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.1\spring-boot-starter-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot\3.1.1\spring-boot-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.1\spring-boot-autoconfigure-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.1\spring-boot-starter-logging-3.1.1.jar;C:\Users\Cater\.m2\repository\ch\qos\logback\logback-classic\1.4.8\logback-classic-1.4.8.jar;C:\Users\Cater\.m2\repository\ch\qos\logback\logback-core\1.4.8\logback-core-1.4.8.jar;C:\Users\Cater\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\Cater\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\Cater\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\Cater\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Cater\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.1.1\spring-boot-actuator-autoconfigure-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-actuator\3.1.1\spring-boot-actuator-3.1.1.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.2\jackson-datatype-jsr310-2.15.2.jar;C:\Users\Cater\.m2\repository\io\micrometer\micrometer-observation\1.11.1\micrometer-observation-1.11.1.jar;C:\Users\Cater\.m2\repository\io\micrometer\micrometer-commons\1.11.1\micrometer-commons-1.11.1.jar;C:\Users\Cater\.m2\repository\io\micrometer\micrometer-core\1.11.1\micrometer-core-1.11.1.jar;C:\Users\Cater\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.12\HdrHistogram-2.1.12.jar;C:\Users\Cater\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.1.1\spring-boot-starter-thymeleaf-3.1.1.jar;C:\Users\Cater\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\Cater\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\Cater\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\Cater\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.1\spring-boot-starter-web-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.1\spring-boot-starter-json-3.1.1.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.2\jackson-datatype-jdk8-2.15.2.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.2\jackson-module-parameter-names-2.15.2.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.1\spring-boot-starter-tomcat-3.1.1.jar;C:\Users\Cater\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.10\tomcat-embed-core-10.1.10.jar;C:\Users\Cater\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.10\tomcat-embed-el-10.1.10.jar;C:\Users\Cater\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.10\tomcat-embed-websocket-10.1.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-web\6.0.10\spring-web-6.0.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-beans\6.0.10\spring-beans-6.0.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-webmvc\6.0.10\spring-webmvc-6.0.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-aop\6.0.10\spring-aop-6.0.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-context\6.0.10\spring-context-6.0.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-expression\6.0.10\spring-expression-6.0.10.jar;C:\Users\Cater\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\Cater\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\Cater\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Cater\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Cater\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\Cater\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.1\spring-boot-starter-test-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-test\3.1.1\spring-boot-test-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.1\spring-boot-test-autoconfigure-3.1.1.jar;C:\Users\Cater\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\Cater\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Cater\.m2\repository\net\minidev\json-smart\2.4.11\json-smart-2.4.11.jar;C:\Users\Cater\.m2\repository\net\minidev\accessors-smart\2.4.11\accessors-smart-2.4.11.jar;C:\Users\Cater\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\Cater\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\Cater\.m2\repository\net\bytebuddy\byte-buddy\1.14.5\byte-buddy-1.14.5.jar;C:\Users\Cater\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\Cater\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Cater\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\Cater\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\Cater\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\Cater\.m2\repository\org\mockito\mockito-core\5.3.1\mockito-core-5.3.1.jar;C:\Users\Cater\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.5\byte-buddy-agent-1.14.5.jar;C:\Users\Cater\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Cater\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\Cater\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\Cater\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-core\6.0.10\spring-core-6.0.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-jcl\6.0.10\spring-jcl-6.0.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-test\6.0.10\spring-test-6.0.10.jar;C:\Users\Cater\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\Cater\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\Cater\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Cater\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Cater\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Cater\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\Cater\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.2.1\httpclient5-5.2.1.jar;C:\Users\Cater\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.2\httpcore5-5.2.2.jar;C:\Users\Cater\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.2\httpcore5-h2-5.2.2.jar;C:\Users\Cater\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\Cater\.m2\repository\org\apache\commons\commons-csv\1.9.0\commons-csv-1.9.0.jar;C:\Users\Cater\.m2\repository\org\json\json\20230227\json-20230227.jar;"/>
     <property name="java.vm.vendor" value="Oracle Corporation"/>
     <property name="sun.arch.data.model" value="64"/>
     <property name="user.variant" value=""/>
@@ -15,56 +15,56 @@
     <property name="sun.java.launcher" value="SUN_STANDARD"/>
     <property name="user.country" value="IT"/>
     <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk-21\bin"/>
-    <property name="sun.java.command" value="C:\Users\aurel\AppData\Local\Temp\surefire15901076708142137670\surefirebooter-20240115150749268_3.jar C:\Users\aurel\AppData\Local\Temp\surefire15901076708142137670 2024-01-15T15-07-49_156-jvmRun1 surefire-20240115150749268_1tmp surefire_0-20240115150749268_2tmp"/>
+    <property name="sun.java.command" value="C:\Users\Cater\AppData\Local\Temp\surefire15897898609961069723\surefirebooter-20240225174500800_3.jar C:\Users\Cater\AppData\Local\Temp\surefire15897898609961069723 2024-02-25T17-45-00_237-jvmRun1 surefire-20240225174500800_1tmp surefire_0-20240225174500800_2tmp"/>
     <property name="jdk.debug" value="release"/>
-    <property name="surefire.test.class.path" value="C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\target\test-classes;C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5\target\classes;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.1.1\spring-boot-starter-actuator-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.1\spring-boot-starter-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot\3.1.1\spring-boot-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.1\spring-boot-autoconfigure-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.1\spring-boot-starter-logging-3.1.1.jar;C:\Users\aurel\.m2\repository\ch\qos\logback\logback-classic\1.4.8\logback-classic-1.4.8.jar;C:\Users\aurel\.m2\repository\ch\qos\logback\logback-core\1.4.8\logback-core-1.4.8.jar;C:\Users\aurel\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\aurel\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\aurel\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\aurel\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\aurel\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.1.1\spring-boot-actuator-autoconfigure-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-actuator\3.1.1\spring-boot-actuator-3.1.1.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.2\jackson-datatype-jsr310-2.15.2.jar;C:\Users\aurel\.m2\repository\io\micrometer\micrometer-observation\1.11.1\micrometer-observation-1.11.1.jar;C:\Users\aurel\.m2\repository\io\micrometer\micrometer-commons\1.11.1\micrometer-commons-1.11.1.jar;C:\Users\aurel\.m2\repository\io\micrometer\micrometer-core\1.11.1\micrometer-core-1.11.1.jar;C:\Users\aurel\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.12\HdrHistogram-2.1.12.jar;C:\Users\aurel\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.1.1\spring-boot-starter-thymeleaf-3.1.1.jar;C:\Users\aurel\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\aurel\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\aurel\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\aurel\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.1\spring-boot-starter-web-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.1\spring-boot-starter-json-3.1.1.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.2\jackson-datatype-jdk8-2.15.2.jar;C:\Users\aurel\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.2\jackson-module-parameter-names-2.15.2.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.1\spring-boot-starter-tomcat-3.1.1.jar;C:\Users\aurel\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.10\tomcat-embed-core-10.1.10.jar;C:\Users\aurel\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.10\tomcat-embed-el-10.1.10.jar;C:\Users\aurel\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.10\tomcat-embed-websocket-10.1.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-web\6.0.10\spring-web-6.0.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-beans\6.0.10\spring-beans-6.0.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-webmvc\6.0.10\spring-webmvc-6.0.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-aop\6.0.10\spring-aop-6.0.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-context\6.0.10\spring-context-6.0.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-expression\6.0.10\spring-expression-6.0.10.jar;C:\Users\aurel\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\aurel\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\aurel\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\aurel\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\aurel\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\aurel\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.1\spring-boot-starter-test-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-test\3.1.1\spring-boot-test-3.1.1.jar;C:\Users\aurel\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.1\spring-boot-test-autoconfigure-3.1.1.jar;C:\Users\aurel\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\aurel\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\aurel\.m2\repository\net\minidev\json-smart\2.4.11\json-smart-2.4.11.jar;C:\Users\aurel\.m2\repository\net\minidev\accessors-smart\2.4.11\accessors-smart-2.4.11.jar;C:\Users\aurel\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\aurel\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\aurel\.m2\repository\net\bytebuddy\byte-buddy\1.14.5\byte-buddy-1.14.5.jar;C:\Users\aurel\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\aurel\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\aurel\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\aurel\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\aurel\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\aurel\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\aurel\.m2\repository\org\mockito\mockito-core\5.3.1\mockito-core-5.3.1.jar;C:\Users\aurel\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.5\byte-buddy-agent-1.14.5.jar;C:\Users\aurel\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\aurel\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\aurel\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\aurel\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-core\6.0.10\spring-core-6.0.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-jcl\6.0.10\spring-jcl-6.0.10.jar;C:\Users\aurel\.m2\repository\org\springframework\spring-test\6.0.10\spring-test-6.0.10.jar;C:\Users\aurel\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\aurel\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\aurel\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\aurel\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\aurel\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\aurel\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\aurel\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.2.1\httpclient5-5.2.1.jar;C:\Users\aurel\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.2\httpcore5-5.2.2.jar;C:\Users\aurel\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.2\httpcore5-h2-5.2.2.jar;C:\Users\aurel\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\aurel\.m2\repository\org\apache\commons\commons-csv\1.9.0\commons-csv-1.9.0.jar;C:\Users\aurel\.m2\repository\org\json\json\20230227\json-20230227.jar;"/>
+    <property name="surefire.test.class.path" value="C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\target\test-classes;C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5\target\classes;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-actuator\3.1.1\spring-boot-starter-actuator-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter\3.1.1\spring-boot-starter-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot\3.1.1\spring-boot-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-autoconfigure\3.1.1\spring-boot-autoconfigure-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-logging\3.1.1\spring-boot-starter-logging-3.1.1.jar;C:\Users\Cater\.m2\repository\ch\qos\logback\logback-classic\1.4.8\logback-classic-1.4.8.jar;C:\Users\Cater\.m2\repository\ch\qos\logback\logback-core\1.4.8\logback-core-1.4.8.jar;C:\Users\Cater\.m2\repository\org\apache\logging\log4j\log4j-to-slf4j\2.20.0\log4j-to-slf4j-2.20.0.jar;C:\Users\Cater\.m2\repository\org\apache\logging\log4j\log4j-api\2.20.0\log4j-api-2.20.0.jar;C:\Users\Cater\.m2\repository\org\slf4j\jul-to-slf4j\2.0.7\jul-to-slf4j-2.0.7.jar;C:\Users\Cater\.m2\repository\jakarta\annotation\jakarta.annotation-api\2.1.1\jakarta.annotation-api-2.1.1.jar;C:\Users\Cater\.m2\repository\org\yaml\snakeyaml\1.33\snakeyaml-1.33.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-actuator-autoconfigure\3.1.1\spring-boot-actuator-autoconfigure-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-actuator\3.1.1\spring-boot-actuator-3.1.1.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\core\jackson-databind\2.15.2\jackson-databind-2.15.2.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\core\jackson-annotations\2.15.2\jackson-annotations-2.15.2.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\core\jackson-core\2.15.2\jackson-core-2.15.2.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jsr310\2.15.2\jackson-datatype-jsr310-2.15.2.jar;C:\Users\Cater\.m2\repository\io\micrometer\micrometer-observation\1.11.1\micrometer-observation-1.11.1.jar;C:\Users\Cater\.m2\repository\io\micrometer\micrometer-commons\1.11.1\micrometer-commons-1.11.1.jar;C:\Users\Cater\.m2\repository\io\micrometer\micrometer-core\1.11.1\micrometer-core-1.11.1.jar;C:\Users\Cater\.m2\repository\org\hdrhistogram\HdrHistogram\2.1.12\HdrHistogram-2.1.12.jar;C:\Users\Cater\.m2\repository\org\latencyutils\LatencyUtils\2.0.3\LatencyUtils-2.0.3.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-thymeleaf\3.1.1\spring-boot-starter-thymeleaf-3.1.1.jar;C:\Users\Cater\.m2\repository\org\thymeleaf\thymeleaf-spring6\3.1.1.RELEASE\thymeleaf-spring6-3.1.1.RELEASE.jar;C:\Users\Cater\.m2\repository\org\thymeleaf\thymeleaf\3.1.1.RELEASE\thymeleaf-3.1.1.RELEASE.jar;C:\Users\Cater\.m2\repository\org\attoparser\attoparser\2.0.6.RELEASE\attoparser-2.0.6.RELEASE.jar;C:\Users\Cater\.m2\repository\org\unbescape\unbescape\1.1.6.RELEASE\unbescape-1.1.6.RELEASE.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-web\3.1.1\spring-boot-starter-web-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-json\3.1.1\spring-boot-starter-json-3.1.1.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\datatype\jackson-datatype-jdk8\2.15.2\jackson-datatype-jdk8-2.15.2.jar;C:\Users\Cater\.m2\repository\com\fasterxml\jackson\module\jackson-module-parameter-names\2.15.2\jackson-module-parameter-names-2.15.2.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-tomcat\3.1.1\spring-boot-starter-tomcat-3.1.1.jar;C:\Users\Cater\.m2\repository\org\apache\tomcat\embed\tomcat-embed-core\10.1.10\tomcat-embed-core-10.1.10.jar;C:\Users\Cater\.m2\repository\org\apache\tomcat\embed\tomcat-embed-el\10.1.10\tomcat-embed-el-10.1.10.jar;C:\Users\Cater\.m2\repository\org\apache\tomcat\embed\tomcat-embed-websocket\10.1.10\tomcat-embed-websocket-10.1.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-web\6.0.10\spring-web-6.0.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-beans\6.0.10\spring-beans-6.0.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-webmvc\6.0.10\spring-webmvc-6.0.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-aop\6.0.10\spring-aop-6.0.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-context\6.0.10\spring-context-6.0.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-expression\6.0.10\spring-expression-6.0.10.jar;C:\Users\Cater\.m2\repository\org\glassfish\jaxb\jaxb-runtime\4.0.3\jaxb-runtime-4.0.3.jar;C:\Users\Cater\.m2\repository\org\glassfish\jaxb\jaxb-core\4.0.3\jaxb-core-4.0.3.jar;C:\Users\Cater\.m2\repository\jakarta\activation\jakarta.activation-api\2.1.2\jakarta.activation-api-2.1.2.jar;C:\Users\Cater\.m2\repository\org\eclipse\angus\angus-activation\2.0.1\angus-activation-2.0.1.jar;C:\Users\Cater\.m2\repository\org\glassfish\jaxb\txw2\4.0.3\txw2-4.0.3.jar;C:\Users\Cater\.m2\repository\com\sun\istack\istack-commons-runtime\4.1.2\istack-commons-runtime-4.1.2.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-starter-test\3.1.1\spring-boot-starter-test-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-test\3.1.1\spring-boot-test-3.1.1.jar;C:\Users\Cater\.m2\repository\org\springframework\boot\spring-boot-test-autoconfigure\3.1.1\spring-boot-test-autoconfigure-3.1.1.jar;C:\Users\Cater\.m2\repository\com\jayway\jsonpath\json-path\2.8.0\json-path-2.8.0.jar;C:\Users\Cater\.m2\repository\jakarta\xml\bind\jakarta.xml.bind-api\4.0.0\jakarta.xml.bind-api-4.0.0.jar;C:\Users\Cater\.m2\repository\net\minidev\json-smart\2.4.11\json-smart-2.4.11.jar;C:\Users\Cater\.m2\repository\net\minidev\accessors-smart\2.4.11\accessors-smart-2.4.11.jar;C:\Users\Cater\.m2\repository\org\ow2\asm\asm\9.3\asm-9.3.jar;C:\Users\Cater\.m2\repository\org\assertj\assertj-core\3.24.2\assertj-core-3.24.2.jar;C:\Users\Cater\.m2\repository\net\bytebuddy\byte-buddy\1.14.5\byte-buddy-1.14.5.jar;C:\Users\Cater\.m2\repository\org\hamcrest\hamcrest\2.2\hamcrest-2.2.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter\5.9.3\junit-jupiter-5.9.3.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.9.3\junit-jupiter-api-5.9.3.jar;C:\Users\Cater\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\Cater\.m2\repository\org\junit\platform\junit-platform-commons\1.9.3\junit-platform-commons-1.9.3.jar;C:\Users\Cater\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter-params\5.9.3\junit-jupiter-params-5.9.3.jar;C:\Users\Cater\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.9.3\junit-jupiter-engine-5.9.3.jar;C:\Users\Cater\.m2\repository\org\junit\platform\junit-platform-engine\1.9.3\junit-platform-engine-1.9.3.jar;C:\Users\Cater\.m2\repository\org\mockito\mockito-core\5.3.1\mockito-core-5.3.1.jar;C:\Users\Cater\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.5\byte-buddy-agent-1.14.5.jar;C:\Users\Cater\.m2\repository\org\objenesis\objenesis\3.3\objenesis-3.3.jar;C:\Users\Cater\.m2\repository\org\mockito\mockito-junit-jupiter\5.3.1\mockito-junit-jupiter-5.3.1.jar;C:\Users\Cater\.m2\repository\org\skyscreamer\jsonassert\1.5.1\jsonassert-1.5.1.jar;C:\Users\Cater\.m2\repository\com\vaadin\external\google\android-json\0.0.20131108.vaadin1\android-json-0.0.20131108.vaadin1.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-core\6.0.10\spring-core-6.0.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-jcl\6.0.10\spring-jcl-6.0.10.jar;C:\Users\Cater\.m2\repository\org\springframework\spring-test\6.0.10\spring-test-6.0.10.jar;C:\Users\Cater\.m2\repository\org\xmlunit\xmlunit-core\2.9.1\xmlunit-core-2.9.1.jar;C:\Users\Cater\.m2\repository\commons-io\commons-io\2.11.0\commons-io-2.11.0.jar;C:\Users\Cater\.m2\repository\org\apache\httpcomponents\httpclient\4.5.14\httpclient-4.5.14.jar;C:\Users\Cater\.m2\repository\org\apache\httpcomponents\httpcore\4.4.16\httpcore-4.4.16.jar;C:\Users\Cater\.m2\repository\commons-logging\commons-logging\1.2\commons-logging-1.2.jar;C:\Users\Cater\.m2\repository\commons-codec\commons-codec\1.15\commons-codec-1.15.jar;C:\Users\Cater\.m2\repository\org\apache\httpcomponents\client5\httpclient5\5.2.1\httpclient5-5.2.1.jar;C:\Users\Cater\.m2\repository\org\apache\httpcomponents\core5\httpcore5\5.2.2\httpcore5-5.2.2.jar;C:\Users\Cater\.m2\repository\org\apache\httpcomponents\core5\httpcore5-h2\5.2.2\httpcore5-h2-5.2.2.jar;C:\Users\Cater\.m2\repository\org\slf4j\slf4j-api\2.0.7\slf4j-api-2.0.7.jar;C:\Users\Cater\.m2\repository\org\apache\commons\commons-csv\1.9.0\commons-csv-1.9.0.jar;C:\Users\Cater\.m2\repository\org\json\json\20230227\json-20230227.jar;"/>
     <property name="sun.cpu.endian" value="little"/>
-    <property name="user.home" value="C:\Users\aurel"/>
+    <property name="user.home" value="C:\Users\Cater"/>
     <property name="user.language" value="it"/>
     <property name="java.specification.vendor" value="Oracle Corporation"/>
-    <property name="java.version.date" value="2023-10-17"/>
+    <property name="java.version.date" value="2024-01-16"/>
     <property name="java.home" value="C:\Program Files\Java\jdk-21"/>
     <property name="file.separator" value="\"/>
-    <property name="basedir" value="C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5"/>
+    <property name="basedir" value="C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5"/>
     <property name="java.vm.compressedOopsMode" value="32-bit"/>
     <property name="line.separator" value="&#10;"/>
     <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
     <property name="java.specification.name" value="Java Platform API Specification"/>
     <property name="FILE_LOG_CHARSET" value="UTF-8"/>
     <property name="java.awt.headless" value="true"/>
-    <property name="surefire.real.class.path" value="C:\Users\aurel\AppData\Local\Temp\surefire15901076708142137670\surefirebooter-20240115150749268_3.jar"/>
+    <property name="surefire.real.class.path" value="C:\Users\Cater\AppData\Local\Temp\surefire15897898609961069723\surefirebooter-20240225174500800_3.jar"/>
     <property name="user.script" value=""/>
     <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
-    <property name="java.runtime.version" value="21.0.1+12-LTS-29"/>
-    <property name="user.name" value="aurel"/>
+    <property name="java.runtime.version" value="21.0.2+13-LTS-58"/>
+    <property name="user.name" value="Cater"/>
     <property name="stdout.encoding" value="Cp1252"/>
     <property name="path.separator" value=";"/>
     <property name="os.version" value="10.0"/>
     <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
     <property name="file.encoding" value="UTF-8"/>
     <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
-    <property name="localRepository" value="C:\Users\aurel\.m2\repository"/>
+    <property name="localRepository" value="C:\Users\Cater\.m2\repository"/>
     <property name="java.vendor.url.bug" value="https://bugreport.java.com/bugreport/"/>
-    <property name="java.io.tmpdir" value="C:\Users\aurel\AppData\Local\Temp\"/>
-    <property name="java.version" value="21.0.1"/>
-    <property name="user.dir" value="C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5"/>
+    <property name="java.io.tmpdir" value="C:\Users\Cater\AppData\Local\Temp\"/>
+    <property name="java.version" value="21.0.2"/>
+    <property name="user.dir" value="C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5"/>
     <property name="os.arch" value="amd64"/>
     <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
-    <property name="PID" value="4732"/>
+    <property name="PID" value="4208"/>
     <property name="sun.os.patch.level" value=""/>
     <property name="CONSOLE_LOG_CHARSET" value="UTF-8"/>
     <property name="native.encoding" value="Cp1252"/>
-    <property name="java.library.path" value="C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files (x86)\Microsoft SDKs\Azure\CLI2\wbin;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Intel\Shared Libraries\redist\intel64\compiler;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\MATLAB\R2022b\bin;C:\Program Files\nodejs\;C:\Program Files (x86)\Ghdl\Bin;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\PuTTY\;C:\Program Files\Git\cmd;C:\Program Files\apache-maven-3.9.5\bin;C:\Users\aurel\AppData\Local\Programs\Microsoft VS Code\bin;."/>
+    <property name="java.library.path" value="C:\Program Files\Java\jdk-21\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;C:\Program Files\Git\cmd;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\apache-maven-3.9.6-bin\apache-maven-3.9.6\bin;C:\Users\Cater\AppData\Local\Programs\Python\Python312\Scripts\;C:\Users\Cater\AppData\Local\Programs\Python\Python312\;C:\Users\Cater\AppData\Local\Programs\Python\Launcher\;C:\Users\Cater\AppData\Local\Microsoft\WindowsApps;;C:\Users\Cater\AppData\Local\Programs\Microsoft VS Code\bin;."/>
     <property name="java.vm.info" value="mixed mode, sharing"/>
     <property name="stderr.encoding" value="Cp1252"/>
     <property name="java.vendor" value="Oracle Corporation"/>
-    <property name="java.vm.version" value="21.0.1+12-LTS-29"/>
+    <property name="java.vm.version" value="21.0.2+13-LTS-58"/>
     <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
     <property name="java.class.version" value="65.0"/>
   </properties>
-  <testcase name="contextLoads" classname="com.g2.t5.T5ApplicationTests" time="0.921">
-    <system-out><![CDATA[15:07:50.069 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.g2.t5.T5ApplicationTests]: T5ApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
-15:07:50.199 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.g2.t5.T5Application for test class com.g2.t5.T5ApplicationTests
+  <testcase name="contextLoads" classname="com.g2.t5.T5ApplicationTests" time="1.91">
+    <system-out><![CDATA[17:45:03.352 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils -- Could not detect default configuration classes for test class [com.g2.t5.T5ApplicationTests]: T5ApplicationTests does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
+17:45:03.656 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper -- Found @SpringBootConfiguration com.g2.t5.T5Application for test class com.g2.t5.T5ApplicationTests
 
   .   ____          _            __ _ _
  /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
@@ -74,21 +74,21 @@
  =========|_|==============|___/=/_/_/_/
  :: Spring Boot ::                (v3.1.1)
 
-2024-01-15T15:07:50.575+01:00  WARN 4732 --- [           main] ory$DuplicateJsonObjectContextCustomizer : 
+2024-02-25T17:45:04.557+01:00  WARN 4208 --- [           main] ory$DuplicateJsonObjectContextCustomizer : 
 
 Found multiple occurrences of org.json.JSONObject on the class path:
 
-	jar:file:/C:/Users/aurel/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
-	jar:file:/C:/Users/aurel/.m2/repository/org/json/json/20230227/json-20230227.jar!/org/json/JSONObject.class
+	jar:file:/C:/Users/Cater/.m2/repository/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar!/org/json/JSONObject.class
+	jar:file:/C:/Users/Cater/.m2/repository/org/json/json/20230227/json-20230227.jar!/org/json/JSONObject.class
 
 You may wish to exclude one of them to ensure predictable runtime behavior
 
-2024-01-15T15:07:50.598+01:00  INFO 4732 --- [           main] com.g2.t5.T5ApplicationTests             : Starting T5ApplicationTests using Java 21.0.1 with PID 4732 (started by aurel in C:\Users\aurel\Desktop\UNI\4 ANNO\SAD\A1-A8-2024-main\T5-G2\t5)
-2024-01-15T15:07:50.599+01:00  INFO 4732 --- [           main] com.g2.t5.T5ApplicationTests             : No active profile set, falling back to 1 default profile: "default"
-2024-01-15T15:07:52.323+01:00  INFO 4732 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
-2024-01-15T15:07:52.382+01:00  INFO 4732 --- [           main] com.g2.t5.T5ApplicationTests             : Started T5ApplicationTests in 2.039 seconds (process running for 3.013)
+2024-02-25T17:45:04.617+01:00  INFO 4208 --- [           main] com.g2.t5.T5ApplicationTests             : Starting T5ApplicationTests using Java 21.0.2 with PID 4208 (started by Cater in C:\Users\Cater\Desktop\UNIVERSITA\SAD\PROGETTO\A10-2024\A10-2024\T5-G2\t5)
+2024-02-25T17:45:04.619+01:00  INFO 4208 --- [           main] com.g2.t5.T5ApplicationTests             : No active profile set, falling back to 1 default profile: "default"
+2024-02-25T17:45:08.788+01:00  INFO 4208 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
+2024-02-25T17:45:08.949+01:00  INFO 4208 --- [           main] com.g2.t5.T5ApplicationTests             : Started T5ApplicationTests in 4.953 seconds (process running for 7.729)
 ]]></system-out>
-    <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (C:\Users\aurel\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.5\byte-buddy-agent-1.14.5.jar)
+    <system-err><![CDATA[WARNING: A Java agent has been loaded dynamically (C:\Users\Cater\.m2\repository\net\bytebuddy\byte-buddy-agent\1.14.5\byte-buddy-agent-1.14.5.jar)
 WARNING: If a serviceability tool is in use, please run with -XX:+EnableDynamicAgentLoading to hide this warning
 WARNING: If a serviceability tool is not in use, please run with -Djdk.instrument.traceUsage for more information
 WARNING: Dynamic loading of agents will be disallowed by default in a future release
diff --git a/T5-G2/t5/target/surefire-reports/com.g2.t5.T5ApplicationTests.txt b/T5-G2/t5/target/surefire-reports/com.g2.t5.T5ApplicationTests.txt
index bc0e26a..734c06b 100644
--- a/T5-G2/t5/target/surefire-reports/com.g2.t5.T5ApplicationTests.txt
+++ b/T5-G2/t5/target/surefire-reports/com.g2.t5.T5ApplicationTests.txt
@@ -1,4 +1,4 @@
 -------------------------------------------------------------------------------
 Test set: com.g2.t5.T5ApplicationTests
 -------------------------------------------------------------------------------
-Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.518 s - in com.g2.t5.T5ApplicationTests
+Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.298 s - in com.g2.t5.T5ApplicationTests
diff --git a/T5-G2/t5/target/t5-0.0.1-SNAPSHOT.jar b/T5-G2/t5/target/t5-0.0.1-SNAPSHOT.jar
index 81ace1a..a87c7f7 100644
Binary files a/T5-G2/t5/target/t5-0.0.1-SNAPSHOT.jar and b/T5-G2/t5/target/t5-0.0.1-SNAPSHOT.jar differ
diff --git a/T5-G2/t5/target/t5-0.0.1-SNAPSHOT.jar.original b/T5-G2/t5/target/t5-0.0.1-SNAPSHOT.jar.original
index 3c40172..c75961e 100644
Binary files a/T5-G2/t5/target/t5-0.0.1-SNAPSHOT.jar.original and b/T5-G2/t5/target/t5-0.0.1-SNAPSHOT.jar.original differ
diff --git a/ui_gateway/default.conf b/ui_gateway/default.conf
index 5cf2b77..cfc9218 100644
--- a/ui_gateway/default.conf
+++ b/ui_gateway/default.conf
@@ -12,13 +12,19 @@ server {
     }
 
     error_page 500 /error.html;
-
-    location ~ ^/(class|player|loginAdmin|registraAdmin|home_adm|modificaClasse|orderbydate|Dfilterby.+|orderbyname|Reports|uploadClasse|reportClasse|delete|getLikes|uploadFile|home|uploadTest|uploadClasseAndTest|t1) {
+	
+	#MODIFICA (12/02/2024) : Aggiunta servizio logout dell'admin
+	#MODIFICA (15/02/2024) : Aggiunta servizio di visualizzazione di tutti gli amministratori del sistema
+	#MODIFICA (15/02/2024) : Aggiunta servizio di cambio psw
+	#MODIFICA (16/02/2024) : Aggiunta servizio di invio amministratori
+	#MODIFICA (18/02/2024) : Aggiunta menu unico per indirizzare verso: o /login oppure verso /loginAdmin
+
+    location ~ ^/(login_with_invitation|invite_admins|password_reset_admin|password_change_admin|info|admins_list|logout_admin|class|player|loginAdmin|registraAdmin|home_adm|modificaClasse|orderbydate|Dfilterby.+|orderbyname|Reports|uploadClasse|reportClasse|delete|getLikes|uploadFile|home|uploadTest|uploadClasseAndTest|t1) {
         include /etc/nginx/includes/proxy.conf;
         proxy_pass http://manvsclass-controller-1:8080;
     }
 
-    location ~ ^/(login|logout|register|mail_register|password_change|password_reset|t23|students_list) {
+    location ~ ^/(menu|login|logout|register|mail_register|password_change|password_reset|t23|students_list) {
         include /etc/nginx/includes/proxy.conf;
         proxy_pass http://t23-g1-app-1:8080;
     }
