{"info":{"_postman_id":"1a97fa08-31d2-488e-8943-f002a77dfa58","name":"REST API basics: CRUD, test & variable","description":"# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)","schema":"https://schema.getpostman.com/json/collection/v2.1.0/collection.json"},"item":[{"name":"controllo token JWT","event":[{"listen":"test","script":{"id":"16e55726-8f48-4bf7-9296-c71efa52cede","exec":["pm.test(\"Status code is 302 and Location header is 'http://blindly-harmless-oarfish.ngrok-free.app/loginAdmin'\", function () {","    pm.response.to.have.status(302);","    pm.expect(pm.response.headers.get('Location')).to.have.string('http://blindly-harmless-oarfish.ngrok-free.app/loginAdmin');","});","",""],"type":"text/javascript"}}],"id":"b1196440-9612-4051-a894-2c6b2941847a","protocolProfileBehavior":{"disableBodyPruning":true,"followRedirects":false},"request":{"method":"GET","header":[],"url":{"raw":"https://blindly-harmless-oarfish.ngrok-free.app/home_adm","protocol":"https","host":["blindly-harmless-oarfish","ngrok-free","app"],"path":["home_adm"]},"description":"This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."},"response":[]},{"name":"registraAdmin","event":[{"listen":"test","script":{"id":"d640358e-605f-49e1-8cda-b3acf133a149","exec":["pm.test(\"Successful POST request\", function () {","    pm.expect(pm.response.code).to.be.oneOf([200, 201]);","});",""],"type":"text/javascript"}}],"id":"2e690510-5f65-4191-aa82-3d6eda8a5256","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\n    \"nome\": \"Antonio\",\n    \"cognome\": \"Esposito\",\n    \"username\": \"an_tonio_unina\",\n    \"email\": \"antony@studenti.unina.it\",\n    \"password\": \"Antony24!\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://blindly-harmless-oarfish.ngrok-free.app/registraAdmin","protocol":"https","host":["blindly-harmless-oarfish","ngrok-free","app"],"path":["registraAdmin"]},"description":"This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."},"response":[]},{"name":"Update data","event":[{"listen":"test","script":{"exec":["pm.test(\"Successful PUT request\", function () {","    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);","});",""],"type":"text/javascript"}}],"id":"283f0faa-bd4d-4d8d-8e4e-a931c97fd76b","request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\n\t\"name\": \"Add your name in the body\"\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"{{base_url}}/info?id=1","host":["{{base_url}}"],"path":["info"],"query":[{"key":"id","value":"1"}]},"description":"This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."},"response":[]},{"name":"Delete data","event":[{"listen":"test","script":{"exec":["pm.test(\"Successful DELETE request\", function () {","    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);","});",""],"type":"text/javascript"}}],"id":"ce6705dc-812e-4d2b-925d-67e86b4482f2","request":{"method":"DELETE","header":[],"body":{"mode":"raw","raw":"","options":{"raw":{"language":"json"}}},"url":{"raw":"{{base_url}}/info?id=1","host":["{{base_url}}"],"path":["info"],"query":[{"key":"id","value":"1"}]},"description":"This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."},"response":[]},{"name":"graph.facebook.com/debug_token?input_token=EAAJyuIErwiEBO1rvRcZCKZAvcukzdE1giqWijXyA78ZCsAiBRw58kEP4GXpicJNeCQ6vrssCfnEne7uqYwsxh1IgCUx4Q7xd9PbrDGu9wkgxehJJFRV93vFFZAJ5aprfn4QmAI0QbWzPoT9k4IJZBjhZCa3t6icTAG3Yg0M8ap38iB0lSveZCYJIP7LV5u1wgnSCrZBwO5ftZCb1Rqt","id":"dcc31052-6c08-4d44-8906-26c5900ee596","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"graph.facebook.com/debug_token?input_token=EAAJyuIErwiEBO1rvRcZCKZAvcukzdE1giqWijXyA78ZCsAiBRw58kEP4GXpicJNeCQ6vrssCfnEne7uqYwsxh1IgCUx4Q7xd9PbrDGu9wkgxehJJFRV93vFFZAJ5aprfn4QmAI0QbWzPoT9k4IJZBjhZCa3t6icTAG3Yg0M8ap38iB0lSveZCYJIP7LV5u1wgnSCrZBwO5ftZCb1RqtkZD&access_token=689086720098849|_rIns2JmCHSjLbj2in8O7M9CAWw","host":["graph","facebook","com"],"path":["debug_token"],"query":[{"key":"input_token","value":"EAAJyuIErwiEBO1rvRcZCKZAvcukzdE1giqWijXyA78ZCsAiBRw58kEP4GXpicJNeCQ6vrssCfnEne7uqYwsxh1IgCUx4Q7xd9PbrDGu9wkgxehJJFRV93vFFZAJ5aprfn4QmAI0QbWzPoT9k4IJZBjhZCa3t6icTAG3Yg0M8ap38iB0lSveZCYJIP7LV5u1wgnSCrZBwO5ftZCb1RqtkZD"},{"key":"access_token","value":"689086720098849|_rIns2JmCHSjLbj2in8O7M9CAWw"}]}},"response":[]},{"name":"password_reset_admin","id":"24ed3062-8c54-45d3-ac89-da2a4111f8ff","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"email\": \"a.esposito@unina.it\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://blindly-harmless-oarfish.ngrok-free.app/password_reset_admin","protocol":"https","host":["blindly-harmless-oarfish","ngrok-free","app"],"path":["password_reset_admin"]}},"response":[]},{"name":"invite_admins","event":[{"listen":"test","script":{"id":"cc6dbbe0-fea0-4d67-acdb-351574472084","exec":["pm.test(\"Status code is 200\", function () {\r","    pm.response.to.have.status(200);\r","});"],"type":"text/javascript","packages":{}}}],"id":"e36e0682-b680-4aab-975f-256089d9e41a","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"jwt","jwt":[{"key":"isSecretBase64Encoded","value":true,"type":"boolean"},{"key":"addTokenTo","value":"header","type":"string"},{"key":"secret","value":"mySecretKeyAdmin","type":"string"},{"key":"algorithm","value":"HS256","type":"string"},{"key":"payload","value":"{}","type":"string"},{"key":"headerPrefix","value":"Bearer","type":"string"},{"key":"queryParamKey","value":"token","type":"string"},{"key":"header","value":"{}","type":"string"}]},"method":"POST","header":[{"key":"CookieValue","value":"","type":"text","disabled":true}],"body":{"mode":"raw","raw":"{\r\n    \"email\": \"bellizzian@gmail.com\"\r\n}\r\n","options":{"raw":{"language":"json"}}},"url":{"raw":"https://blindly-harmless-oarfish.ngrok-free.app/invite_admins","protocol":"https","host":["blindly-harmless-oarfish","ngrok-free","app"],"path":["invite_admins"]}},"response":[]},{"name":"loginAdmin","id":"5c34f89d-96ed-4947-aebe-f1f909c3fc54","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"auth":{"type":"jwt","jwt":[{"key":"isSecretBase64Encoded","value":true,"type":"boolean"},{"key":"addTokenTo","value":"header","type":"string"},{"key":"secret","value":"mySecretKeyAdmin","type":"string"},{"key":"algorithm","value":"HS256","type":"string"},{"key":"payload","value":"{}","type":"string"},{"key":"headerPrefix","value":"Bearer","type":"string"},{"key":"queryParamKey","value":"token","type":"string"},{"key":"header","value":"{}","type":"string"}]},"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"username\": \"cmaccetto_unina\",\r\n    \"password\": \"Caterina23!\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://blindly-harmless-oarfish.ngrok-free.app/loginAdmin","protocol":"https","host":["blindly-harmless-oarfish","ngrok-free","app"],"path":["loginAdmin"]}},"response":[]},{"name":"logout","id":"983ed92a-bc83-49e9-a30f-b60d4aeecd76","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"GET","header":[],"url":{"raw":"https://blindly-harmless-oarfish.ngrok-free.app/logout_admin","protocol":"https","host":["blindly-harmless-oarfish","ngrok-free","app"],"path":["logout_admin"]}},"response":[]},{"name":"login_with_invitation","id":"da7cef1e-c002-4c2c-b983-885c44c36019","protocolProfileBehavior":{"disableBodyPruning":true},"request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\r\n    \"nome\": \"\",\r\n    \"cognome\": \"\",\r\n    \"username\": \"\",\r\n    \"email\": \"\",\r\n    \"password\": \"\"\r\n}","options":{"raw":{"language":"json"}}},"url":{"raw":"https://blindly-harmless-oarfish.ngrok-free.app/login_with_invitation","protocol":"https","host":["blindly-harmless-oarfish","ngrok-free","app"],"path":["login_with_invitation"]}},"response":[]}],"event":[{"listen":"prerequest","script":{"type":"text/javascript","exec":[""]}},{"listen":"test","script":{"type":"text/javascript","exec":[""]}}],"variable":[{"id":"315bf25a-2778-43f1-a62d-4e62d71d92d4","key":"id","value":"1"},{"id":"ecfe1aee-5d14-444d-9176-182a19d022ee","key":"base_url","value":"https://postman-rest-api-learner.glitch.me/"}]}